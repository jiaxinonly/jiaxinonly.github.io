<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>samba共享服务安装</title>
      <link href="/2024/06/07/samba%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85/"/>
      <url>/2024/06/07/samba%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="samba共享服务安装"><a href="#samba共享服务安装" class="headerlink" title="samba共享服务安装"></a>samba共享服务安装</h2><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装</p></blockquote><ol><li><p>安装samba</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y samba</span><br></pre></td></tr></table></figure></li><li><p>创建共享文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/samba</span><br></pre></td></tr></table></figure></li><li><p>打开配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure></li><li><p>修改为如下内容</p><blockquote><p>[Share] 共享文件夹名，可以自定义<br>path 共享目录<br>browsable 是否能被浏览<br>writable 是否可写<br>guest ok  是否允许来宾访问<br>read only  是否只读</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">        workgroup = SAMBA</span><br><span class="line">        security = user</span><br><span class="line"></span><br><span class="line">        passdb backend = tdbsam</span><br><span class="line"></span><br><span class="line">        printing = cups</span><br><span class="line">        printcap name = cups</span><br><span class="line">        load printers = yes</span><br><span class="line">        cups options = raw</span><br><span class="line">        wins support = yes</span><br><span class="line">        </span><br><span class="line">[Share]</span><br><span class="line">        path = /root/samba</span><br><span class="line">        browsable = yes</span><br><span class="line">        writable = yes</span><br><span class="line">        guest ok = no</span><br><span class="line">        read only = no</span><br></pre></td></tr></table></figure></li><li><p>添加用户密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd -a root</span><br></pre></td></tr></table></figure></li><li><p>启动smb服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now smb</span><br></pre></td></tr></table></figure></li><li><p>打开防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-service=samba</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li><p>关闭selinux</p><blockquote><p>不想关闭selinux，可以执行<code>setsebool -P samba_export_all_rw on</code>命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; /etc/selinux/config # 永久关闭selinux（重启后生效）</span><br><span class="line">setenforce 0 # 临时关闭selinux（不需要重启，立即生效）</span><br></pre></td></tr></table></figure></li><li><p>同局域网打开windows文件夹，右击侧边此电脑，选择映射网络驱动器，输入<code>\\IP\共享名</code>，勾选使用其他凭据，点击完成，输入账号密码即可</p><img src="http://source.accepted.fun/image/article/image-20240607165336700.png" alt="image-20240607165336700" style="zoom: 80%;" /></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 共享文件 </tag>
            
            <tag> samba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3安装</title>
      <link href="/2024/06/06/Python3%E5%AE%89%E8%A3%85/"/>
      <url>/2024/06/06/Python3%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3安装"><a href="#Python3安装" class="headerlink" title="Python3安装"></a>Python3安装</h1><blockquote><p>操作系统：CentOS 7.5(1804) 最小安装<br>Python：3.12.3</p></blockquote><h2 id="方式一-源码安装"><a href="#方式一-源码安装" class="headerlink" title="方式一 源码安装"></a>方式一 源码安装</h2><blockquote><p>适用于安装指定版本</p></blockquote><ol><li><p>更新yum仓库并安装构建工具和依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zlib-devel bzip2-devel openssl11 openssl11-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make</span><br></pre></td></tr></table></figure></li><li><p>下载源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.12.3/Python-3.12.3.tar.xz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Python-3.12.3.tar.xz</span><br></pre></td></tr></table></figure></li><li><p>进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.12.3</span><br></pre></td></tr></table></figure></li><li><p>配置编译</p><blockquote><p>安装目录可自行修改</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export CFLAGS=$(pkg-config --cflags openssl11)</span><br><span class="line">export LDFLAGS=$(pkg-config --libs openssl11)</span><br><span class="line">./configure --prefix=/usr/local/Python3.12 --with-openssl=/usr/bin/openssl11 --enable-optimizations</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j $(nproc)</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li><li><p>添加软连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/Python3.12/bin/python3.12 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/Python3.12/bin/pip3.12 /usr/bin/pip3</span><br></pre></td></tr></table></figure></li><li><p>测试安装是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br><span class="line">pip3 --version</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20240606171739230.png" alt="image-20240606171739230"></p></li></ol><h2 id="方式二-yum安装"><a href="#方式二-yum安装" class="headerlink" title="方式二 yum安装"></a>方式二 yum安装</h2><blockquote><p>安装的python3 为yum仓库中的最新版本，通常不是python的最新版本，要落后许多，但是方式简单</p></blockquote><ol><li><p>yum安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python3-pip -y</span><br></pre></td></tr></table></figure></li><li><p>测试安装是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br><span class="line">pip3 --version</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20240607133029990.png" alt="image-20240607133029990"></p></li></ol><h2 id="pip换源"><a href="#pip换源" class="headerlink" title="pip换源"></a>pip换源</h2><div class="tabs" id="设置主机名"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="设置主机名-1">清华源</button><button type="button" class="tab " data-href="设置主机名-2">阿里源</button><button type="button" class="tab " data-href="设置主机名-3">豆瓣源</button></ul><div class="tab-contents"><div class="tab-item-content active" id="设置主机名-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置主机名-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 config set global.index-url http://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置主机名-3"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 config set global.index-url https://pypi.douban.com/simple/</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="设置为默认"><a href="#设置为默认" class="headerlink" title="设置为默认"></a>设置为默认</h2><blockquote><p>可选，不推荐</p></blockquote><ol><li><p>删除默认软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/bin/&#123;python,pip&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/bin</span><br><span class="line">ln -s python3 python</span><br><span class="line">ln -s pip3 pip</span><br></pre></td></tr></table></figure></li><li><p>打开**&#x2F;usr&#x2F;bin&#x2F;yum**文件，将第一行 <code>#!/usr/bin/python</code> 修改为 <code>#!/usr/bin/python2.7</code></p></li><li><p>打开**&#x2F;usr&#x2F;libexec&#x2F;urlgrabber-ext-down**文件，将第一行 <code>#!/usr/bin/python</code> 修改为 <code>#!/usr/bin/python2.7</code></p></li><li><p>打开**&#x2F;usr&#x2F;bin&#x2F;firewall-cmd**文件，将第一行<code>#!/usr/bin/python -Es</code>修改为<code>#!/usr/bin/python2.7 -Es</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群高可用二进制部署-基础篇</title>
      <link href="/2023/02/20/Kubernetes%E9%9B%86%E7%BE%A4%E9%AB%98%E5%8F%AF%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2023/02/20/Kubernetes%E9%9B%86%E7%BE%A4%E9%AB%98%E5%8F%AF%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群高可用二进制部署-基础篇"><a href="#Kubernetes集群高可用二进制部署-基础篇" class="headerlink" title="Kubernetes集群高可用二进制部署-基础篇"></a>Kubernetes集群高可用二进制部署-基础篇</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.23.16 </p></blockquote><blockquote><p>1.23以上版本将不支持docker</p></blockquote><blockquote><p>适用于生产环境  完全手动配置和部署 便于了解和学习kubernetes</p></blockquote><h2 id="部署规划"><a href="#部署规划" class="headerlink" title="部署规划"></a>部署规划</h2><h3 id="IP规划"><a href="#IP规划" class="headerlink" title="IP规划"></a>IP规划</h3><table><thead><tr><th>IP地址</th><th>用途</th></tr></thead><tbody><tr><td>192.168.66.110</td><td>vip</td></tr><tr><td>192.168.66.111</td><td>master01</td></tr><tr><td>192.168.66.112</td><td>master02</td></tr><tr><td>192.168.66.113</td><td>master03</td></tr><tr><td>192.168.66.121</td><td>node01</td></tr><tr><td>192.168.66.122</td><td>node02</td></tr></tbody></table><h3 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h3><blockquote><p>所有机器均一样，可以更具自己的需求进行调整</p></blockquote><table><thead><tr><th>系统</th><th>cpu</th><th>内存</th><th>磁盘</th></tr></thead><tbody><tr><td>centos7</td><td>2核</td><td>2G</td><td>15G</td></tr></tbody></table><h2 id="升级系统内核（可选）"><a href="#升级系统内核（可选）" class="headerlink" title="升级系统内核（可选）"></a>升级系统内核（可选）</h2><blockquote><p><strong>所有主机都执行</strong></p></blockquote><ol><li><p>安装elrepo源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org # 导入elrepo的签名</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-5.el7.elrepo.noarch.rpm # 升级elrepo源</span><br></pre></td></tr></table></figure></li><li><p>升级所有软件和系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure></li><li><p>查看可以安装的系统内核版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list available</span><br></pre></td></tr></table></figure></li><li><p>升级系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel install kernel-lt kernel-lt-devel -y</span><br></pre></td></tr></table></figure></li><li><p>查看内核序号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27; /etc/grub2.cfg</span><br></pre></td></tr></table></figure></li><li><p>选择默认系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li><li><p>删除多余的系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove -y $(rpm -qa | grep kernel | grep -v $(uname -r))</span><br></pre></td></tr></table></figure></li></ol><h2 id="初始化系统环境"><a href="#初始化系统环境" class="headerlink" title="初始化系统环境"></a>初始化系统环境</h2><blockquote><p><strong>所有主机都执行</strong></p></blockquote><ol><li><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld # 关闭防火墙</span><br><span class="line">systemctl disable firewalld # 禁止启动</span><br></pre></td></tr></table></figure></li><li><p>关闭selinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; /etc/selinux/config # 永久关闭selinux（重启后生效）</span><br><span class="line">setenforce 0 # 临时关闭selinux（不需要重启，立即生效）</span><br></pre></td></tr></table></figure></li><li><p>关闭swap</p><blockquote><p>没有swap不用管，官方是推荐关闭swap的</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab # 永久关闭swap（重启后生效）</span><br><span class="line">swapoff -a # 临时关闭swap(不需要重启，立即生效)</span><br></pre></td></tr></table></figure></li><li><p>设置主机名</p><blockquote><p><strong>每台主机分别执行</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname master01</span><br><span class="line">hostnamectl set-hostname master02</span><br><span class="line">hostnamectl set-hostname master03</span><br><span class="line">hostnamectl set-hostname node01</span><br><span class="line">hostnamectl set-hostname node02</span><br></pre></td></tr></table></figure></li><li><p>添加hosts解析记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.66.110 master</span><br><span class="line">192.168.66.111 master01</span><br><span class="line">192.168.66.112 master02</span><br><span class="line">192.168.66.113 master03</span><br><span class="line">192.168.66.121 node01</span><br><span class="line">192.168.66.122 node02</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><blockquote><p>所有主机都执行</p></blockquote><ol><li><p>安装docker，具体安装步骤请参考<a href="/2021/11/08/Docker%E5%AE%89%E8%A3%85/">Docker安装</a></p></li><li><p>修改docker参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=cgroupfs&quot;],</span><br><span class="line">    &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;200m&quot;,</span><br><span class="line">    &quot;max-file&quot;: &quot;3&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;live-restore&quot;: true,</span><br><span class="line">    &quot;max-concurrent-downloads&quot;: 10,</span><br><span class="line">    &quot;max-concurrent-uploads&quot;: 10,</span><br><span class="line">    &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn&quot;],</span><br><span class="line">    &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">    &quot;storage-opts&quot;: [</span><br><span class="line">    &quot;overlay2.override_kernel_check=true&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>重启docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="开启IPVS"><a href="#开启IPVS" class="headerlink" title="开启IPVS"></a>开启IPVS</h2><blockquote><p>所有主机都执行</p></blockquote><ol><li><p>所有节点开启内核转发参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.tcp_keepalive_intvl = 30</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 10</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 1</span><br><span class="line">net.ipv4.neigh.default.gc_stale_time = 120</span><br><span class="line">net.ipv4.conf.all.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.arp_announce = 2</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line">net.ipv4.tcp_synack_retries = 2</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.netfilter.nf_conntrack_max = 2310720</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line">fs.file-max = 52706963</span><br><span class="line">fs.nr_open = 52706963</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 1</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li><li><p>添加ipvs模块文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt; EOF</span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe br_netfilter</span><br><span class="line">if [[ $(uname -r |cut -d . -f1) -gt 4 || $(uname -r |cut -d . -f1) -eq 4 &amp;&amp; $(uname -r |cut -d . -f2) -ge 19 ]]; then</span><br><span class="line">  modprobe -- nf_conntrack</span><br><span class="line">else</span><br><span class="line">  modprobe -- nf_conntrack_ipv4</span><br><span class="line">fi</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>添加文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/sysconfig/modules/ipvs.modules</span><br></pre></td></tr></table></figure></li><li><p>加载ipvs模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/modules/ipvs.modules</span><br></pre></td></tr></table></figure></li><li><p>检查是否加载成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep ip_vs</span><br></pre></td></tr></table></figure></li><li><p>安装ipvs工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ipvsadm ipset -y</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装CNI插件"><a href="#安装CNI插件" class="headerlink" title="安装CNI插件"></a>安装CNI插件</h2><blockquote><p>github仓库:<a href="https://github.com/containernetworking/plugins">https://github.com/containernetworking/plugins</a></p></blockquote><blockquote><p>所有主机都执行</p></blockquote><ol><li><p>下载CNI插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/containernetworking/plugins/releases/download/v1.2.0/cni-plugins-linux-amd64-v1.2.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/cni/bin</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf cni-plugins-linux-amd64-v1.2.0.tgz  -C /opt/cni/bin/</span><br></pre></td></tr></table></figure></li></ol><h2 id="master安装二进制包"><a href="#master安装二进制包" class="headerlink" title="master安装二进制包"></a>master安装二进制包</h2><blockquote><p>github仓库:<a href="https://github.com/kubernetes/kubernetes">https://github.com/kubernetes/kubernetes</a></p></blockquote><blockquote><p>所有master都执行</p></blockquote><ol><li><p>下载server二进制包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://storage.googleapis.com/kubernetes-release/release/v1.23.16/kubernetes-server-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf kubernetes-server-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>移动二进制程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv kubernetes/server/bin/kube&#123;let,ctl,-apiserver,-controller-manager,-scheduler,-proxy&#125;  /usr/local/bin/</span><br></pre></td></tr></table></figure></li></ol><h2 id="创建集群证书"><a href="#创建集群证书" class="headerlink" title="创建集群证书"></a>创建集群证书</h2><blockquote><p><strong>所有证书创建必须在&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;目录下执行</strong></p></blockquote><blockquote><p>只在<code>master01</code>上执行，然后拷贝到其他master</p></blockquote><h3 id="ca-证书"><a href="#ca-证书" class="headerlink" title="ca 证书"></a>ca 证书</h3><p>ca证书信息：</p><table><thead><tr><th align="center"><strong>path</strong></th><th align="center">Default CN</th><th align="center"><strong>description</strong></th></tr></thead><tbody><tr><td align="center">ca.crt,ca.key</td><td align="center">kubernetes-ca</td><td align="center">Kubernetes general CA</td></tr><tr><td align="center">etcd&#x2F;{ca.crt,cakey}</td><td align="center">etcd-ca</td><td align="center">For all etcd-related functions</td></tr><tr><td align="center">front-proxy-ca.crt,front-proxy-ca.key</td><td align="center">kubernetes-front-proxy-ca</td><td align="center">For the front-end proxy</td></tr></tbody></table><ol><li><p>创建证书文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/kubernetes/pki/etcd</span><br></pre></td></tr></table></figure></li><li><p>进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/kubernetes/pki/</span><br></pre></td></tr></table></figure></li><li><p>创建证书配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/kubernetes/pki/openssl.cnf &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">[ req ]</span><br><span class="line">default_bits = 2048</span><br><span class="line">default_md = sha256</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line"></span><br><span class="line">[ v3_ca ]</span><br><span class="line">basicConstraints = critical, CA:TRUE</span><br><span class="line">keyUsage = critical, digitalSignature, keyEncipherment, keyCertSign</span><br><span class="line"></span><br><span class="line">[ v3_req_server ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = critical, digitalSignature, keyEncipherment</span><br><span class="line">extendedKeyUsage = serverAuth</span><br><span class="line"></span><br><span class="line">[ v3_req_client ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = critical, digitalSignature, keyEncipherment</span><br><span class="line">extendedKeyUsage = clientAuth</span><br><span class="line"></span><br><span class="line">[ v3_req_apiserver ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = critical, digitalSignature, keyEncipherment</span><br><span class="line">extendedKeyUsage = serverAuth</span><br><span class="line">subjectAltName = @alt_names_cluster</span><br><span class="line"></span><br><span class="line">[ v3_req_etcd ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = critical, digitalSignature, keyEncipherment</span><br><span class="line">extendedKeyUsage = serverAuth, clientAuth</span><br><span class="line">subjectAltName = @alt_names_etcd</span><br><span class="line"></span><br><span class="line">[ alt_names_cluster ]</span><br><span class="line">DNS.1 = kubernetes</span><br><span class="line">DNS.2 = kubernetes.default</span><br><span class="line">DNS.3 = kubernetes.default.svc</span><br><span class="line">DNS.4 = kubernetes.default.svc.cluster.local</span><br><span class="line">DNS.5 = localhost</span><br><span class="line">IP.1 = 10.96.0.1# kubernetes.default.svc.cluster.local</span><br><span class="line">IP.2 = 127.0.0.1# localhost</span><br><span class="line">IP.3 = 192.168.66.110# vip</span><br><span class="line">IP.4 = 192.168.66.111# master01</span><br><span class="line">IP.5 = 192.168.66.112# master02</span><br><span class="line">IP.6 = 192.168.66.113# master03</span><br><span class="line">IP.7 = 192.168.66.121# node01</span><br><span class="line">IP.8 = 192.168.66.122# node02</span><br><span class="line"></span><br><span class="line">[ alt_names_etcd ]</span><br><span class="line">DNS.1 = localhost</span><br><span class="line">IP.1 = 127.0.0.1</span><br><span class="line">IP.2 = 192.168.66.111# master01</span><br><span class="line">IP.3 = 192.168.66.112   # master02 </span><br><span class="line">IP.4 = 192.168.66.113   # master03 </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><h4 id="kubernetes-ca-证书"><a href="#kubernetes-ca-证书" class="headerlink" title="kubernetes ca 证书"></a>kubernetes ca 证书</h4><ol><li><p>生成集群ca证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out ca.key 2048</span><br></pre></td></tr></table></figure></li><li><p>签发集群ca证书</p><blockquote><p>有效期100年</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -new -nodes -key ca.key -config openssl.cnf -subj &quot;/CN=kubernetes-ca&quot; -extensions v3_ca -out ca.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="etcd-ca-证书"><a href="#etcd-ca-证书" class="headerlink" title="etcd ca 证书"></a>etcd ca 证书</h4><ol><li><p>生成etcd ca证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out etcd/ca.key 2048</span><br></pre></td></tr></table></figure></li><li><p>签发etcd ca证书</p><blockquote><p>有效期100年</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -new -nodes -key etcd/ca.key -config openssl.cnf -subj &quot;/CN=etcd-ca&quot; -extensions v3_ca -out etcd/ca.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="front-proxy-ca-证书"><a href="#front-proxy-ca-证书" class="headerlink" title="front-proxy ca 证书"></a>front-proxy ca 证书</h4><ol><li><p>生成front-proxy ca证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out front-proxy-ca.key 2048</span><br></pre></td></tr></table></figure></li><li><p>签发front-proxy ca证书</p><blockquote><p>有效期100年</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -new -nodes -key front-proxy-ca.key -config openssl.cnf -subj &quot;/CN=kubernetes-ca&quot; -extensions v3_ca -out front-proxy-ca.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><p>证书信息：</p><table><thead><tr><th>Default CN</th><th>Parent CA</th><th>O (in Subject)</th><th><strong>kind</strong></th></tr></thead><tbody><tr><td>kube-etcd</td><td>etcd ca</td><td></td><td>server, client</td></tr><tr><td>kube-etcd-peer</td><td>etcd ca</td><td></td><td>server, client</td></tr><tr><td>kube-etcd-healthcheck-client</td><td>etcd ca</td><td></td><td>client</td></tr><tr><td>kube-apiserver-etcd-client</td><td>etcd ca</td><td>system:masters</td><td>client</td></tr><tr><td>kube-apiserver</td><td>kubernetes ca</td><td></td><td>server</td></tr><tr><td>kube-apiserver-kubelet-client</td><td>kubernetes ca</td><td>system:masters</td><td>client</td></tr><tr><td>front-proxy-client</td><td>kubernetes-front-proxy ca</td><td></td><td>client</td></tr></tbody></table><h4 id="kube-etcd-证书"><a href="#kube-etcd-证书" class="headerlink" title="kube-etcd 证书"></a>kube-etcd 证书</h4><ol><li><p>生成kube-etcd证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out etcd/server.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成kube-etcd证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key etcd/server.key -subj &quot;/CN=etcd-server&quot; -out etcd/server.csr</span><br></pre></td></tr></table></figure></li><li><p>签发kube-etcd证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in etcd/server.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out etcd/server.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="kube-etcd-peer-证书"><a href="#kube-etcd-peer-证书" class="headerlink" title="kube-etcd-peer 证书"></a>kube-etcd-peer 证书</h4><ol><li><p>生成kube-etcd-peer证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out etcd/peer.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成kube-etcd-peer证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key etcd/peer.key -subj &quot;/CN=etcd-peer&quot; -out etcd/peer.csr</span><br></pre></td></tr></table></figure></li><li><p>签发kube-etcd-peer证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in etcd/peer.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out etcd/peer.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="kube-etcd-healthcheck-client-证书"><a href="#kube-etcd-healthcheck-client-证书" class="headerlink" title="kube-etcd-healthcheck-client 证书"></a>kube-etcd-healthcheck-client 证书</h4><ol><li><p>生成kube-etcd-healthcheck-client证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out etcd/healthcheck-client.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成kube-etcd-healthcheck-client证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key etcd/healthcheck-client.key -subj &quot;/CN=etcd-client&quot; -out etcd/healthcheck-client.csr</span><br></pre></td></tr></table></figure></li><li><p>签发kube-etcd-healthcheck-client证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in etcd/healthcheck-client.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out etcd/healthcheck-client.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="apiserver-etcd-client-证书"><a href="#apiserver-etcd-client-证书" class="headerlink" title="apiserver-etcd-client 证书"></a>apiserver-etcd-client 证书</h4><ol><li><p>生成apiserver-etcd-client证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out apiserver-etcd-client.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成apiserver-etcd-client证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key apiserver-etcd-client.key -subj &quot;/CN=apiserver-etcd-client/O=system:masters&quot; -out apiserver-etcd-client.csr</span><br></pre></td></tr></table></figure></li><li><p>签发apiserver-etcd-client证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in apiserver-etcd-client.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out apiserver-etcd-client.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="kube-apiserver-证书"><a href="#kube-apiserver-证书" class="headerlink" title="kube-apiserver 证书"></a>kube-apiserver 证书</h4><ol><li><p>生成kube-apiserver证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out apiserver.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成kube-apiserver证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key apiserver.key -subj &quot;/CN=kube-apiserver&quot; -config openssl.cnf -out apiserver.csr</span><br></pre></td></tr></table></figure></li><li><p>签发kube-apiserver证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -in apiserver.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extensions v3_req_apiserver -extfile openssl.cnf -out apiserver.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="apiserver-kubelet-client-证书"><a href="#apiserver-kubelet-client-证书" class="headerlink" title="apiserver-kubelet-client 证书"></a>apiserver-kubelet-client 证书</h4><ol><li><p>生成apiserver-kubelet-client证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out  apiserver-kubelet-client.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成apiserver-kubelet-client证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key apiserver-kubelet-client.key -subj &quot;/CN=apiserver-kubelet-client/O=system:masters&quot; -out apiserver-kubelet-client.csr</span><br></pre></td></tr></table></figure></li><li><p>签发apiserver-kubelet-client证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -in apiserver-kubelet-client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extensions v3_req_client -extfile openssl.cnf -out apiserver-kubelet-client.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="front-proxy-client-证书"><a href="#front-proxy-client-证书" class="headerlink" title="front-proxy-client 证书"></a>front-proxy-client 证书</h4><ol><li><p>生成front-proxy-client证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out  front-proxy-client.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成front-proxy-client证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key front-proxy-client.key -subj &quot;/CN=front-proxy-client&quot; -out front-proxy-client.csr</span><br></pre></td></tr></table></figure></li><li><p>签发front-proxy-client证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -in front-proxy-client.csr -CA front-proxy-ca.crt -CAkey front-proxy-ca.key -CAcreateserial -extensions v3_req_client -extfile openssl.cnf -out front-proxy-client.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="kube-scheduler-证书"><a href="#kube-scheduler-证书" class="headerlink" title="kube-scheduler 证书"></a>kube-scheduler 证书</h4><ol><li><p>生成kube-scheduler证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out  kube-scheduler.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成kube-scheduler证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key kube-scheduler.key -subj &quot;/CN=system:kube-scheduler&quot; -out kube-scheduler.csr</span><br></pre></td></tr></table></figure></li><li><p>签发kube-scheduler证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -in kube-scheduler.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extensions v3_req_client -extfile openssl.cnf -out kube-scheduler.crt -days 36500</span><br></pre></td></tr></table></figure></li></ol><h4 id="sa-证书"><a href="#sa-证书" class="headerlink" title="sa 证书"></a>sa 证书</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl ecparam -name secp521r1 -genkey -noout -out sa.key</span><br><span class="line">openssl ec -in sa.key -outform PEM -pubout -out sa.pub</span><br><span class="line">openssl req -new -sha256 -key sa.key -subj &quot;/CN=system:kube-controller-manager&quot; -out sa.csr</span><br><span class="line">openssl x509 -req -in sa.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extensions v3_req_client -extfile openssl.cnf -out sa.crt -days 36500</span><br></pre></td></tr></table></figure><h4 id="admin-证书"><a href="#admin-证书" class="headerlink" title="admin 证书"></a>admin 证书</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out  admin.key 2048</span><br><span class="line">openssl req -new -key admin.key -subj &quot;/CN=kubernetes-admin/O=system:masters&quot; -out admin.csr</span><br><span class="line">openssl x509 -req -in admin.csr -CA ca.crt -CAkey ca.key -CAcreateserial -days 10000 -extensions v3_req_client -extfile openssl.cnf -out admin.crt</span><br></pre></td></tr></table></figure><h3 id="清理中间文件"><a href="#清理中间文件" class="headerlink" title="清理中间文件"></a>清理中间文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf apiserver-etcd-client.csr etcd/server.csr etcd/peer.csr etcd/healthcheck-client.csr apiserver.csr apiserver-kubelet-client.csr front-proxy-client.csr kube-scheduler.csr sa.csr admin.csr ca.srl front-proxy-ca.srl etcd/ca.srl</span><br></pre></td></tr></table></figure><h2 id="创建集群kubeconfig文件"><a href="#创建集群kubeconfig文件" class="headerlink" title="创建集群kubeconfig文件"></a>创建集群kubeconfig文件</h2><blockquote><p>只在<code>master01</code>上执行，然后拷贝到其他master</p></blockquote><ol><li><p>进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/kubernetes</span><br></pre></td></tr></table></figure></li></ol><h3 id="kube-controller-manager"><a href="#kube-controller-manager" class="headerlink" title="kube-controller-manager"></a>kube-controller-manager</h3><ol><li><p>设置集群参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=https://192.168.66.110:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置客户端认证参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-credentials system:kube-controller-manager \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/sa.crt \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/sa.key \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置上下文参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-context system:kube-controller-manager@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-controller-manager \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置当前使用的上下文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config use-context system:kube-controller-manager@kubernetes --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>查看配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig</span><br></pre></td></tr></table></figure></li></ol><h3 id="kube-scheduler"><a href="#kube-scheduler" class="headerlink" title="kube-scheduler"></a>kube-scheduler</h3><ol><li><p>设置集群参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=https://192.168.66.110:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置客户端认证参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-credentials system:kube-scheduler \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/kube-scheduler.crt \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/kube-scheduler.key \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置上下文参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-context system:kube-scheduler@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-scheduler \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置当前使用的上下文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config use-context system:kube-scheduler@kubernetes --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>查看配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view --kubeconfig=/etc/kubernetes/scheduler.kubeconfig</span><br></pre></td></tr></table></figure></li></ol><h3 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h3><ol><li><p>设置集群参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=https://192.168.66.110:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置客户端认证参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-credentials kubernetes-admin \</span><br><span class="line">  --client-certificate=/etc/kubernetes/pki/admin.crt \</span><br><span class="line">  --client-key=/etc/kubernetes/pki/admin.key \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置上下文参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-context kubernetes-admin@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubernetes-admin \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置当前使用的上下文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config use-context kubernetes-admin@kubernetes --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>查看配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view --kubeconfig=/etc/kubernetes/admin.kubeconfig</span><br></pre></td></tr></table></figure></li></ol><h2 id="分发证书和kubeconfig文件"><a href="#分发证书和kubeconfig文件" class="headerlink" title="分发证书和kubeconfig文件"></a>分发证书和kubeconfig文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /etc/kubernetes master02:/etc</span><br><span class="line">scp -r /etc/kubernetes master03:/etc</span><br></pre></td></tr></table></figure><h2 id="master安装etcd"><a href="#master安装etcd" class="headerlink" title="master安装etcd"></a>master安装etcd</h2><blockquote><p>github仓库:<a href="https://github.com/etcd-io/etcd">https://github.com/etcd-io/etcd</a></p></blockquote><blockquote><p>所有master都执行</p></blockquote><ol><li><p>下载etcd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.5.7/etcd-v3.5.7-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf etcd-v3.5.7-linux-amd64.tar.gz --strip-components=1 -C /usr/local/bin etcd-v3.5.7-linux-amd64/etcd&#123;,ctl&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建etcd目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/etcd/ -p</span><br><span class="line">mkdir /var/lib/etcd/wal -p</span><br></pre></td></tr></table></figure></li><li><p>创建etcd配置文件</p><div class="tabs" id="设置etcd"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="设置etcd-1">master01</button><button type="button" class="tab " data-href="设置etcd-2">master02</button><button type="button" class="tab " data-href="设置etcd-3">master03</button></ul><div class="tab-contents"><div class="tab-item-content active" id="设置etcd-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/etcd/etcd.config.yml &lt;&lt; EOF</span><br><span class="line">name: master01 # 本机 name</span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: &#x27;https://192.168.66.111:2380&#x27; # 本机 etcd地址</span><br><span class="line">listen-client-urls: &#x27;https://192.168.66.111:2379,https://127.0.0.1:2379&#x27; # 本机etcd地址</span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: &#x27;https://192.168.66.111:2380&#x27; # 本机etcd地址</span><br><span class="line">advertise-client-urls: &#x27;https://192.168.66.111:2379&#x27; # 本机etcd地址</span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: &#x27;proxy&#x27;</span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: &#x27;master01=https://192.168.66.111:2380,master02=https://192.168.66.112:2380,master03=https://192.168.66.113:2380&#x27;</span><br><span class="line">initial-cluster-token: &#x27;etcd-k8s-cluster&#x27;</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br><span class="line">strict-reconfig-check: false</span><br><span class="line">enable-v2: true</span><br><span class="line">enable-pprof: true</span><br><span class="line">proxy: &#x27;off&#x27;</span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  cert-file: &#x27;/etc/kubernetes/pki/etcd/server.crt&#x27;</span><br><span class="line">  key-file: &#x27;/etc/kubernetes/pki/etcd/server.key&#x27;</span><br><span class="line">  client-cert-auth: true</span><br><span class="line">  trusted-ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  auto-tls: true</span><br><span class="line">peer-transport-security:</span><br><span class="line">  ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  cert-file: &#x27;/etc/kubernetes/pki/etcd/peer.crt&#x27;</span><br><span class="line">  key-file: &#x27;/etc/kubernetes/pki/etcd/peer.key&#x27;</span><br><span class="line">  peer-client-cert-auth: true</span><br><span class="line">  trusted-ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  auto-tls: true</span><br><span class="line">debug: false</span><br><span class="line">log-package-levels:</span><br><span class="line">log-output: default</span><br><span class="line">force-new-cluster: false</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置etcd-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/etcd/etcd.config.yml &lt;&lt; EOF</span><br><span class="line">name: master02 # 本机 name</span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: &#x27;https://192.168.66.112:2380&#x27; # 本机 etcd地址</span><br><span class="line">listen-client-urls: &#x27;https://192.168.66.112:2379,https://127.0.0.1:2379&#x27; # 本机etcd地址</span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: &#x27;https://192.168.66.112:2380&#x27; # 本机etcd地址</span><br><span class="line">advertise-client-urls: &#x27;https://192.168.66.112:2379&#x27; # 本机etcd地址</span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: &#x27;proxy&#x27;</span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: &#x27;master01=https://192.168.66.111:2380,master02=https://192.168.66.112:2380,master03=https://192.168.66.113:2380&#x27;</span><br><span class="line">initial-cluster-token: &#x27;etcd-k8s-cluster&#x27;</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br><span class="line">strict-reconfig-check: false</span><br><span class="line">enable-v2: true</span><br><span class="line">enable-pprof: true</span><br><span class="line">proxy: &#x27;off&#x27;</span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  cert-file: &#x27;/etc/kubernetes/pki/etcd/server.crt&#x27;</span><br><span class="line">  key-file: &#x27;/etc/kubernetes/pki/etcd/server.key&#x27;</span><br><span class="line">  client-cert-auth: true</span><br><span class="line">  trusted-ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  auto-tls: true</span><br><span class="line">peer-transport-security:</span><br><span class="line">  ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  cert-file: &#x27;/etc/kubernetes/pki/etcd/peer.crt&#x27;</span><br><span class="line">  key-file: &#x27;/etc/kubernetes/pki/etcd/peer.key&#x27;</span><br><span class="line">  peer-client-cert-auth: true</span><br><span class="line">  trusted-ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  auto-tls: true</span><br><span class="line">debug: false</span><br><span class="line">log-package-levels:</span><br><span class="line">log-output: default</span><br><span class="line">force-new-cluster: false</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置etcd-3"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/etcd/etcd.config.yml &lt;&lt; EOF</span><br><span class="line">name: master03 # 本机 name</span><br><span class="line">data-dir: /var/lib/etcd</span><br><span class="line">wal-dir: /var/lib/etcd/wal</span><br><span class="line">snapshot-count: 5000</span><br><span class="line">heartbeat-interval: 100</span><br><span class="line">election-timeout: 1000</span><br><span class="line">quota-backend-bytes: 0</span><br><span class="line">listen-peer-urls: &#x27;https://192.168.66.113:2380&#x27; # 本机 etcd地址</span><br><span class="line">listen-client-urls: &#x27;https://192.168.66.113:2379,https://127.0.0.1:2379&#x27; # 本机etcd地址</span><br><span class="line">max-snapshots: 3</span><br><span class="line">max-wals: 5</span><br><span class="line">cors:</span><br><span class="line">initial-advertise-peer-urls: &#x27;https://192.168.66.113:2380&#x27; # 本机etcd地址</span><br><span class="line">advertise-client-urls: &#x27;https://192.168.66.113:2379&#x27; # 本机etcd地址</span><br><span class="line">discovery:</span><br><span class="line">discovery-fallback: &#x27;proxy&#x27;</span><br><span class="line">discovery-proxy:</span><br><span class="line">discovery-srv:</span><br><span class="line">initial-cluster: &#x27;master01=https://192.168.66.111:2380,master02=https://192.168.66.112:2380,master03=https://192.168.66.113:2380&#x27;</span><br><span class="line">initial-cluster-token: &#x27;etcd-k8s-cluster&#x27;</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br><span class="line">strict-reconfig-check: false</span><br><span class="line">enable-v2: true</span><br><span class="line">enable-pprof: true</span><br><span class="line">proxy: &#x27;off&#x27;</span><br><span class="line">proxy-failure-wait: 5000</span><br><span class="line">proxy-refresh-interval: 30000</span><br><span class="line">proxy-dial-timeout: 1000</span><br><span class="line">proxy-write-timeout: 5000</span><br><span class="line">proxy-read-timeout: 0</span><br><span class="line">client-transport-security:</span><br><span class="line">  ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  cert-file: &#x27;/etc/kubernetes/pki/etcd/server.crt&#x27;</span><br><span class="line">  key-file: &#x27;/etc/kubernetes/pki/etcd/server.key&#x27;</span><br><span class="line">  client-cert-auth: true</span><br><span class="line">  trusted-ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  auto-tls: true</span><br><span class="line">peer-transport-security:</span><br><span class="line">  ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  cert-file: &#x27;/etc/kubernetes/pki/etcd/peer.crt&#x27;</span><br><span class="line">  key-file: &#x27;/etc/kubernetes/pki/etcd/peer.key&#x27;</span><br><span class="line">  peer-client-cert-auth: true</span><br><span class="line">  trusted-ca-file: &#x27;/etc/kubernetes/pki/etcd/ca.crt&#x27;</span><br><span class="line">  auto-tls: true</span><br><span class="line">debug: false</span><br><span class="line">log-package-levels:</span><br><span class="line">log-output: default</span><br><span class="line">force-new-cluster: false</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></li><li><p>创建service文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/etcd.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Service</span><br><span class="line">Documentation=https://coreos.com/etcd/docs/latest/</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/local/bin/etcd --config-file=/etc/etcd/etcd.config.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=etcd3.service</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动etcd并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now etcd</span><br></pre></td></tr></table></figure></li><li><p>查看集群状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl --endpoints=https://192.168.66.111:2379,https://192.168.66.112:2379,https://192.168.66.113:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key endpoint status --write-out=table</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230219183123434.png" alt="image-20230219183123434"></p></li></ol><h2 id="高可用HA"><a href="#高可用HA" class="headerlink" title="高可用HA"></a>高可用HA</h2><h3 id="安装haproxy"><a href="#安装haproxy" class="headerlink" title="安装haproxy"></a>安装haproxy</h3><blockquote><p>所有master都执行</p></blockquote><ol><li><p>安装haproxy</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install haproxy -y</span><br></pre></td></tr></table></figure></li><li><p>创建haproxy配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/haproxy/haproxy.cfg &lt;&lt; EOF</span><br><span class="line">global</span><br><span class="line">  maxconn  2000</span><br><span class="line">  ulimit-n  16384</span><br><span class="line">  log  127.0.0.1 local0 err</span><br><span class="line">  stats timeout 30s</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  log global</span><br><span class="line">  mode  http</span><br><span class="line">  option  httplog</span><br><span class="line">  timeout connect 5000</span><br><span class="line">  timeout client  50000</span><br><span class="line">  timeout server  50000</span><br><span class="line">  timeout http-request 15s</span><br><span class="line">  timeout http-keep-alive 15s</span><br><span class="line"></span><br><span class="line">frontend monitor-in</span><br><span class="line">  bind *:33305</span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  monitor-uri /monitor</span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line">  bind    *:8006</span><br><span class="line">  mode    http</span><br><span class="line">  stats   enable</span><br><span class="line">  stats   hide-version</span><br><span class="line">  stats   uri       /stats</span><br><span class="line">  stats   refresh   30s</span><br><span class="line">  stats   realm     Haproxy\ Statistics</span><br><span class="line">  stats   auth      admin:admin</span><br><span class="line"></span><br><span class="line">frontend k8s-api</span><br><span class="line">  bind 0.0.0.0:8443</span><br><span class="line">  bind 127.0.0.1:8443</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  tcp-request inspect-delay 5s</span><br><span class="line">  default_backend k8s-api</span><br><span class="line"></span><br><span class="line">backend k8s-api</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  option tcp-check</span><br><span class="line">  balance roundrobin</span><br><span class="line">  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100</span><br><span class="line">  server k8s-api-master01 192.168.66.111:6443 check</span><br><span class="line">  server k8s-api-master02 192.168.66.112:6443 check</span><br><span class="line">  server k8s-api-master03 192.168.66.113:6443 check</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动haproxy并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now haproxy</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h3><ol><li><p>安装keepalived</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install keepalived -y</span><br></pre></td></tr></table></figure></li><li><p>创建keepalived配置文件</p><blockquote><p>注意修改interface为自己机器的网卡</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; EOF</span><br><span class="line">global_defs &#123;</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script haproxy-check &#123;</span><br><span class="line">    user root</span><br><span class="line">    script &quot;/bin/bash /etc/keepalived/check_haproxy.sh&quot;</span><br><span class="line">    interval 3</span><br><span class="line">    weight -2</span><br><span class="line">    fall 10</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance haproxy-vip &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    priority 101</span><br><span class="line">    interface ens33 # 机器网卡</span><br><span class="line">    virtual_router_id 47</span><br><span class="line">    advert_int 3</span><br><span class="line"></span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">    192.168.66.111 # master01</span><br><span class="line">        192.168.66.112 # master02</span><br><span class="line">        192.168.66.113 # master03</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.66.110 # vip地址</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    track_script &#123;</span><br><span class="line">        haproxy-check</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建keepalived健康检查脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/keepalived/check_haproxy.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">VIRTUAL_IP=192.168.66.110</span><br><span class="line"></span><br><span class="line">errorExit() &#123;</span><br><span class="line">    echo &quot;*** $*&quot; 1&gt;&amp;2</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ip addr | grep -q $VIRTUAL_IP ; then</span><br><span class="line">    curl -s --max-time 2 --insecure https://$&#123;VIRTUAL_IP&#125;:8443/ -o /dev/null || errorExit &quot;Error GET https://$&#123;VIRTUAL_IP&#125;:8443/&quot;</span><br><span class="line">fi</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动keepalived并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now keepalived</span><br></pre></td></tr></table></figure></li></ol><h2 id="启动master"><a href="#启动master" class="headerlink" title="启动master"></a>启动master</h2><blockquote><p>所有master都执行</p></blockquote><ol><li><p>创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/kubernetes/manifests /var/lib/kubelet /var/log/kubernetes</span><br></pre></td></tr></table></figure></li><li><p>创建kube-apiserver.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https:/github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-apiserver \</span><br><span class="line">--authorization-mode=Node,RBAC \</span><br><span class="line">--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeClaimResize,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,Priority \</span><br><span class="line">--advertise-address=0.0.0.0 \</span><br><span class="line">--bind-address=0.0.0.0 \</span><br><span class="line">--insecure-port=0 \</span><br><span class="line">--secure-port=6443 \</span><br><span class="line">--allow-privileged=true \</span><br><span class="line">--enable-swagger-ui=true \</span><br><span class="line">--storage-backend=etcd3 \</span><br><span class="line">--event-ttl=1h \</span><br><span class="line">--apiserver-count=3 \</span><br><span class="line">--runtime-config=api/all=true \</span><br><span class="line">--audit-log-maxage=30 \</span><br><span class="line">--audit-log-maxbackup=3 \</span><br><span class="line">--audit-log-maxsize=100 \</span><br><span class="line">--audit-log-path=/var/log/audit.log \</span><br><span class="line">--enable-bootstrap-token-auth \</span><br><span class="line">--etcd-servers=https://192.168.66.111:2379,https://192.168.66.112:2379,https://192.168.66.113:2379 \</span><br><span class="line">--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt \</span><br><span class="line">--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt \</span><br><span class="line">--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key \</span><br><span class="line">--client-ca-file=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt \</span><br><span class="line">--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key \</span><br><span class="line">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \</span><br><span class="line">--service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">--service-node-port-range=30000-52000 \</span><br><span class="line">--service-account-issuer=api \</span><br><span class="line">--service-account-signing-key-file=/etc/kubernetes/pki/sa.key \</span><br><span class="line">--service-account-key-file=/etc/kubernetes/pki/sa.pub \</span><br><span class="line">--tls-cert-file=/etc/kubernetes/pki/apiserver.crt \</span><br><span class="line">--tls-private-key-file=/etc/kubernetes/pki/apiserver.key \</span><br><span class="line">--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt \</span><br><span class="line">--requestheader-username-headers=X-Remote-User \</span><br><span class="line">--requestheader-group-headers=X-Remote-Group \</span><br><span class="line">--requestheader-allowed-names=front-proxy-client \</span><br><span class="line">--requestheader-extra-headers-prefix=X-Remote-Extra- \</span><br><span class="line">--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt \</span><br><span class="line">--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key \</span><br><span class="line">--v=2</span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=10s</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建kube-controller-manager.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-controller-manager.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-controller-manager \</span><br><span class="line">  --allocate-node-cidrs=true \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">  --authentication-kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">  --authorization-kubeconfig=/etc/kubernetes/controller-manager.kubeconfig \</span><br><span class="line">  --client-ca-file=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --cluster-signing-key-file=/etc/kubernetes/pki/ca.key \</span><br><span class="line">  --bind-address=0.0.0.0 \</span><br><span class="line">  --leader-elect=true \</span><br><span class="line">  --cluster-cidr=10.244.0.0/16 \</span><br><span class="line">  --service-cluster-ip-range=10.96.0.0/12 \</span><br><span class="line">  --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt \</span><br><span class="line">  --service-account-private-key-file=/etc/kubernetes/pki/sa.key \</span><br><span class="line">  --root-ca-file=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --use-service-account-credentials=true \</span><br><span class="line">  --controllers=*,bootstrapsigner,tokencleaner \</span><br><span class="line">  --experimental-cluster-signing-duration=86700h \</span><br><span class="line">  --v=2</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建kube-scheduler.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-scheduler \</span><br><span class="line">  --leader-elect=true \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/scheduler.kubeconfig \</span><br><span class="line">  --address=0.0.0.0 \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动master组件并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now  kube-apiserver kube-controller-manager kube-scheduler</span><br></pre></td></tr></table></figure></li><li><p>创建kube目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/.kube</span><br></pre></td></tr></table></figure></li><li><p>拷贝config文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/kubernetes/admin.kubeconfig ~/.kube/config</span><br></pre></td></tr></table></figure></li><li><p>安装自动补全</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y bash-completion</span><br></pre></td></tr></table></figure></li><li><p>加载bash-completion</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /usr/share/bash-completion/bash_completion</span><br></pre></td></tr></table></figure></li><li><p>添加kubectl补全</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &lt;(kubectl completion bash)</span><br></pre></td></tr></table></figure></li><li><p>添加kubectl到bash-completion配置文件中去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl completion bash &gt;/etc/bash_completion.d/kubectl</span><br></pre></td></tr></table></figure></li><li><p>验证master组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get cs</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230219225023912.png" alt="image-20230219225023912"></p></li></ol><h2 id="建立bootstrap"><a href="#建立bootstrap" class="headerlink" title="建立bootstrap"></a>建立bootstrap</h2><blockquote><p>只在master01上执行</p></blockquote><ol><li><p>创建TLS bootstrap secret来提供自动签证</p><blockquote><p>token-id和token-secret随机生成的<br>token-id: openssl rand -hex 3<br>token-secret: openssl rand -hex 8</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system create secret generic bootstrap-token-af0a0d \</span><br><span class="line">        --type &#x27;bootstrap.kubernetes.io/token&#x27; \</span><br><span class="line">        --from-literal description=&quot;cluster bootstrap token&quot; \</span><br><span class="line">        --from-literal token-id=af0a0d \</span><br><span class="line">        --from-literal token-secret=b5b7e4bf69696390 \</span><br><span class="line">        --from-literal usage-bootstrap-authentication=true \</span><br><span class="line">        --from-literal usage-bootstrap-signing=true</span><br></pre></td></tr></table></figure></li><li><p>设置集群参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=https://192.168.66.110:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置客户端认证参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-credentials kubelet-bootstrap \</span><br><span class="line">  --token=af0a0d.b5b7e4bf69696390 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置上下文参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-context kubelet-bootstrap@kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubelet-bootstrap \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置当前使用的上下文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config use-context kubelet-bootstrap@kubernetes --kubeconfig=/etc/kubernetes/bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>查看生成的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view --kubeconfig=/etc/kubernetes/bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>授权kubelet创建csr</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubeadm:kubelet-bootstrap \</span><br><span class="line">        --clusterrole system:node-bootstrapper --group system:bootstrappers</span><br></pre></td></tr></table></figure></li><li><p>授权system:bootstrappers 组的所有 csr</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | kubectl apply -f -</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Approve all CSRs <span class="keyword">for</span> the group <span class="string">&quot;system:bootstrappers&quot;</span></span></span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: auto-approve-csrs-for-group</span><br><span class="line">subjects:</span><br><span class="line">- kind: Group</span><br><span class="line">  name: system:bootstrappers</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>授权kubelet能够更新自己的证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: auto-approve-renewals-for-nodes</span><br><span class="line">subjects:</span><br><span class="line">- kind: Group</span><br><span class="line">  name: system:nodes</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>分发bootstrap.kubeconfig文件给所有节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp -r /etc/kubernetes/bootstrap.kubeconfig master02:/etc/kubernetes</span><br><span class="line">scp -r /etc/kubernetes/bootstrap.kubeconfig master03:/etc/kubernetes</span><br><span class="line">scp -r /etc/kubernetes/bootstrap.kubeconfig node01:/etc/kubernetes</span><br><span class="line">scp -r /etc/kubernetes/bootstrap.kubeconfig node02:/etc/kubernetes</span><br></pre></td></tr></table></figure></li><li><p>分发ca.crt证书给node节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /etc/kubernetes/pki/ca.crt node01:/etc/kubernetes/pki/ca.crt</span><br><span class="line">scp -r /etc/kubernetes/pki/ca.crt node02:/etc/kubernetes/pki/ca.crt</span><br></pre></td></tr></table></figure></li></ol><h2 id="node安装二进制包"><a href="#node安装二进制包" class="headerlink" title="node安装二进制包"></a>node安装二进制包</h2><blockquote><p>github仓库:<a href="https://github.com/kubernetes/kubernetes">https://github.com/kubernetes/kubernetes</a></p></blockquote><blockquote><p>所有node都执行</p></blockquote><ol><li><p>下载node二进制包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://storage.googleapis.com/kubernetes-release/release/v1.23.16/kubernetes-node-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf kubernetes-node-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>移动二进制程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv kubernetes/node/bin/kube&#123;let,-proxy&#125;  /usr/local/bin/</span><br></pre></td></tr></table></figure></li></ol><h2 id="启动kubelet"><a href="#启动kubelet" class="headerlink" title="启动kubelet"></a>启动kubelet</h2><blockquote><p>所有主机都执行</p></blockquote><ol><li><p>创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/lib/kubelet</span><br></pre></td></tr></table></figure></li><li><p>从master拷贝ca证书到node上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /etc/kubernetes/pki/ca.crt node01:/etc/kubernetes/pki</span><br><span class="line">scp -r /etc/kubernetes/pki/ca.crt node02:/etc/kubernetes/pki</span><br></pre></td></tr></table></figure></li><li><p>配置kubelet</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /var/lib/kubelet/config.yaml &lt;&lt; EOF</span><br><span class="line">address: 0.0.0.0</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">authentication:</span><br><span class="line">  anonymous:</span><br><span class="line">    enabled: false</span><br><span class="line">  webhook:</span><br><span class="line">    cacheTTL: 2m0s</span><br><span class="line">    enabled: true</span><br><span class="line">  x509:</span><br><span class="line">    clientCAFile: /etc/kubernetes/pki/ca.crt</span><br><span class="line">authorization:</span><br><span class="line">  mode: Webhook</span><br><span class="line">  webhook:</span><br><span class="line">    cacheAuthorizedTTL: 5m0s</span><br><span class="line">    cacheUnauthorizedTTL: 30s</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">cgroupsPerQOS: true</span><br><span class="line">clusterDNS:</span><br><span class="line">- 10.96.0.10</span><br><span class="line">clusterDomain: cluster.local</span><br><span class="line">configMapAndSecretChangeDetectionStrategy: Watch</span><br><span class="line">containerLogMaxFiles: 5</span><br><span class="line">containerLogMaxSize: 10Mi</span><br><span class="line">contentType: application/vnd.kubernetes.protobuf</span><br><span class="line">cpuCFSQuota: true</span><br><span class="line">cpuCFSQuotaPeriod: 100ms</span><br><span class="line">cpuManagerPolicy: none</span><br><span class="line">cpuManagerReconcilePeriod: 10s</span><br><span class="line">enableControllerAttachDetach: true</span><br><span class="line">enableDebuggingHandlers: true</span><br><span class="line">enforceNodeAllocatable:</span><br><span class="line">- pods</span><br><span class="line">eventBurst: 10</span><br><span class="line">eventRecordQPS: 5</span><br><span class="line">evictionHard:</span><br><span class="line">  imagefs.available: 15%</span><br><span class="line">  memory.available: 100Mi</span><br><span class="line">  nodefs.available: 10%</span><br><span class="line">  nodefs.inodesFree: 5%</span><br><span class="line">evictionPressureTransitionPeriod: 5m0s</span><br><span class="line">failSwapOn: true</span><br><span class="line">fileCheckFrequency: 20s</span><br><span class="line">hairpinMode: promiscuous-bridge</span><br><span class="line">healthzBindAddress: 127.0.0.1</span><br><span class="line">healthzPort: 10248</span><br><span class="line">httpCheckFrequency: 20s</span><br><span class="line">imageGCHighThresholdPercent: 85</span><br><span class="line">imageGCLowThresholdPercent: 80</span><br><span class="line">imageMinimumGCAge: 2m0s</span><br><span class="line">iptablesDropBit: 15</span><br><span class="line">iptablesMasqueradeBit: 14</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">kubeAPIBurst: 10</span><br><span class="line">kubeAPIQPS: 5</span><br><span class="line">makeIPTablesUtilChains: true</span><br><span class="line">maxOpenFiles: 1000000</span><br><span class="line">maxPods: 110</span><br><span class="line">nodeLeaseDurationSeconds: 40</span><br><span class="line">nodeStatusReportFrequency: 1m0s</span><br><span class="line">nodeStatusUpdateFrequency: 10s</span><br><span class="line">oomScoreAdj: -999</span><br><span class="line">podPidsLimit: -1</span><br><span class="line">port: 10250</span><br><span class="line">registryBurst: 10</span><br><span class="line">registryPullQPS: 5</span><br><span class="line">resolvConf: /etc/resolv.conf</span><br><span class="line">rotateCertificates: true</span><br><span class="line">runtimeRequestTimeout: 2m0s</span><br><span class="line">serializeImagePulls: true</span><br><span class="line">staticPodPath: /etc/kubernetes/manifests</span><br><span class="line">streamingConnectionIdleTimeout: 4h0m0s</span><br><span class="line">syncFrequency: 1m0s</span><br><span class="line">volumeStatsAggPeriod: 1m0s</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建kubelet.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /lib/systemd/system/kubelet.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kubelet \</span><br><span class="line">  --bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \</span><br><span class="line">  --config=/var/lib/kubelet/config.yaml \</span><br><span class="line">  --pod-infra-container-image=registry.k8s.io/pause:3.6 \</span><br><span class="line">  --network-plugin=cni \</span><br><span class="line">  --cni-conf-dir=/etc/cni/net.d \</span><br><span class="line">  --cni-bin-dir=/opt/cni/bin \</span><br><span class="line">  --cert-dir=/etc/kubernetes/pki \</span><br><span class="line">  --cgroup-driver=cgroupfs \</span><br><span class="line">  --v=2</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动kubelet</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now kubelet</span><br></pre></td></tr></table></figure></li><li><p>验证集群</p><blockquote><p>在master上</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220004701370.png" alt="image-20230220004701370"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get csr</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220005003891.png" alt="image-20230220005003891"></p></li><li><p>节点添加标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl label node master01 node-role.kubernetes.io/master=&quot;&quot;</span><br><span class="line">kubectl label node master02 node-role.kubernetes.io/master=&quot;&quot;</span><br><span class="line">kubectl label node master03 node-role.kubernetes.io/master=&quot;&quot;</span><br><span class="line">kubectl label node node01 node-role.kubernetes.io/node=&quot;&quot;</span><br><span class="line">kubectl label node node02 node-role.kubernetes.io/node=&quot;&quot;</span><br></pre></td></tr></table></figure></li><li><p>master添加污点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes master01 node-role.kubernetes.io/master=&quot;&quot;:NoSchedule</span><br><span class="line">kubectl taint nodes master02 node-role.kubernetes.io/master=&quot;&quot;:NoSchedule</span><br><span class="line">kubectl taint nodes master03 node-role.kubernetes.io/master=&quot;&quot;:NoSchedule</span><br></pre></td></tr></table></figure></li></ol><h3 id="启动kube-proxy"><a href="#启动kube-proxy" class="headerlink" title="启动kube-proxy"></a>启动kube-proxy</h3><blockquote><p>仅master01上执行</p></blockquote><ol><li><p>创建一个 kube-proxy 的 service account</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system create serviceaccount kube-proxy</span><br></pre></td></tr></table></figure></li><li><p>将 kube-proxy 的 serviceaccount 绑定到集群角色 system:node-proxier</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubeadm:kube-proxy \</span><br><span class="line">        --clusterrole system:node-proxier \</span><br><span class="line">        --serviceaccount kube-system:kube-proxy</span><br></pre></td></tr></table></figure></li><li><p>设置集群参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=https://192.168.66.110:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>获取kube-proxy的token secrets name</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system get sa/kube-proxy --output=jsonpath=&#x27;&#123;.secrets[0].name&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220130657089.png" alt="image-20230220130657089"></p></li><li><p>根据上一步获取的name查询token的值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system get secret/kube-proxy-token-lj8v8 --output=jsonpath=&#x27;&#123;.data.token&#125;&#x27; | base64 -d</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220130935062.png" alt="image-20230220130935062"></p></li><li><p>设置客户端认证参数，token为上一步获取的值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-credentials kubernetes \</span><br><span class="line">  --token=eyJhbGciOiJFUzUxMiIsImtpZCI6Ikc4dm96a3E5VjJwSlA0QlJiS1YyVUY3eTVQVWdkUzBxZUxmaU1oSGlnTTQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlLXByb3h5LXRva2VuLWxqOHY4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6Imt1YmUtcHJveHkiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI1OGIyOGJhMS1iOTljLTQ0MGYtOTgyNi04ZDRiZGNhNTUyZmQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06a3ViZS1wcm94eSJ9.AOM9Fn5yTgF6k6RERNbfyMiOr9ZSEWRp4UC2RnTByx_aM7YT_IV1dsfcj88qvntCZzDsQPeAEg6k-Rh6jeRGpyxKAYYi-4th4s90e24aNiylzZLvlCf4cEqQEXzBKXupb6e-3lKNO5pgmU7BzXzlS2SXH_2sBRG4irEb4IZ_ZGk-WAeS \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置上下文参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl config set-context kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubernetes \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置当前使用的上下文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config use-context kubernetes --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>查看生成的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>配置kube-proxy.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/kubernetes/kube-proxy.conf &lt;&lt; EOF</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">bindAddress: 0.0.0.0</span><br><span class="line">clientConnection:</span><br><span class="line">    acceptContentTypes: &quot;&quot;</span><br><span class="line">    burst: 10</span><br><span class="line">    contentType: application/vnd.kubernetes.protobuf</span><br><span class="line">    kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line">    qps: 5</span><br><span class="line">clusterCIDR: &quot;10.244.0.0/16&quot;</span><br><span class="line">configSyncPeriod: 15m0s</span><br><span class="line">conntrack:</span><br><span class="line">    max: null</span><br><span class="line">    maxPerCore: 32768</span><br><span class="line">    min: 131072</span><br><span class="line">    tcpCloseWaitTimeout: 1h0m0s</span><br><span class="line">    tcpEstablishedTimeout: 24h0m0s</span><br><span class="line">enableProfiling: false</span><br><span class="line">healthzBindAddress: 0.0.0.0:10256</span><br><span class="line">hostnameOverride: &quot;&quot;</span><br><span class="line">iptables:</span><br><span class="line">    masqueradeAll: true</span><br><span class="line">    masqueradeBit: 14</span><br><span class="line">    minSyncPeriod: 0s</span><br><span class="line">    syncPeriod: 30s</span><br><span class="line">ipvs:</span><br><span class="line">    excludeCIDRs: null</span><br><span class="line">    minSyncPeriod: 0s</span><br><span class="line">    scheduler: &quot;&quot;</span><br><span class="line">    syncPeriod: 30s</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">metricsBindAddress: 127.0.0.1:10249</span><br><span class="line">mode: &quot;ipvs&quot;</span><br><span class="line">nodePortAddresses: null</span><br><span class="line">oomScoreAdj: -999</span><br><span class="line">portRange: &quot;&quot;</span><br><span class="line">resourceContainer: /kube-proxy</span><br><span class="line">udpIdleTimeout: 250ms</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建kube-proxy.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-proxy.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube Proxy</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/kube-proxy \</span><br><span class="line">  --config=/etc/kubernetes/kube-proxy.conf \</span><br><span class="line">  --v=2</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>分发文件到其他所有节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/kubernetes/&#123;kube-proxy.kubeconfig,kube-proxy.conf&#125; master02:/etc/kubernetes</span><br><span class="line">scp /etc/kubernetes/&#123;kube-proxy.kubeconfig,kube-proxy.conf&#125; master03:/etc/kubernetes</span><br><span class="line">scp /etc/kubernetes/&#123;kube-proxy.kubeconfig,kube-proxy.conf&#125; node01:/etc/kubernetes</span><br><span class="line">scp /etc/kubernetes/&#123;kube-proxy.kubeconfig,kube-proxy.conf&#125; node02:/etc/kubernetes</span><br><span class="line"></span><br><span class="line">scp /usr/lib/systemd/system/kube-proxy.service master02:/usr/lib/systemd/system/kube-proxy.service</span><br><span class="line">scp /usr/lib/systemd/system/kube-proxy.service master03:/usr/lib/systemd/system/kube-proxy.service</span><br><span class="line">scp /usr/lib/systemd/system/kube-proxy.service node01:/usr/lib/systemd/system/kube-proxy.service</span><br><span class="line">scp /usr/lib/systemd/system/kube-proxy.service node02:/usr/lib/systemd/system/kube-proxy.service</span><br></pre></td></tr></table></figure></li><li><p>启动kube-proxy并设置开机自启</p><blockquote><p>所有节点都执行</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now kube-proxy</span><br></pre></td></tr></table></figure></li><li><p>验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -ln</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220203948803.png" alt="image-20230220203948803"></p></li></ol><h2 id="导入pause容器"><a href="#导入pause容器" class="headerlink" title="导入pause容器"></a>导入pause容器</h2><blockquote><p>国内网络基本是无法直接拉取的，不过可以尝试一下<br>你也可以找台能上外网的机器，pull下来然后save打包传到节点上再load导入<br>推荐使用如下方法，从本人提供的仓库拉取，修改tag，你也可以选择其他人提供的仓库</p></blockquote><blockquote><p>所有节点都执行</p></blockquote><ol><li><p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/k8s_gcr_io_sync/pause:3.6</span><br></pre></td></tr></table></figure></li><li><p>修改tag</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/k8s_gcr_io_sync/pause:3.6 registry.k8s.io/pause:3.6</span><br></pre></td></tr></table></figure></li><li><p>清除tag</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/k8s_gcr_io_sync/pause:3.6</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装Calico"><a href="#安装Calico" class="headerlink" title="安装Calico"></a>安装Calico</h2><ol><li><p>下载calico yaml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/v3.24/manifests/calico.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改yaml文件，第4602行，取消注释，并修改为网络为<code>10.244.0.0/16</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: CALICO_IPV4POOL_CIDR</span><br><span class="line">  value: &quot;192.168.0.0/16&quot;</span><br></pre></td></tr></table></figure></li><li><p>安装calico</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure></li><li><p>等待一会查看pod运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -A</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220214918567.png" alt="image-20230220214918567"></p></li><li><p>查看node是否就绪</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220215033104.png" alt="image-20230220215033104"></p></li></ol><h2 id="安装coredns"><a href="#安装coredns" class="headerlink" title="安装coredns"></a>安装coredns</h2><blockquote><p>如果无法拉取镜像registry.k8s.io&#x2F;coredns&#x2F;coredns:v1.10.0，用同样的方法先拉取registry.cn-hangzhou.aliyuncs.com&#x2F;k8s_gcr_io_sync&#x2F;coredns-coredns:v1.10.0再修改tag</p></blockquote><ol><li><p>下载coredns.yaml 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O coredns.yaml https://raw.githubusercontent.com/kubernetes/kubernetes/master/cluster/addons/dns/coredns/coredns.yaml.base</span><br></pre></td></tr></table></figure></li><li><p>通过查找，修改yaml文件如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__DNS__DOMAIN__ 修改为 cluster.local</span><br><span class="line">__DNS__MEMORY__LIMIT__ 修改为 170Mi</span><br><span class="line">__DNS__SERVER__ 修改为 10.96.0.10</span><br></pre></td></tr></table></figure></li><li><p>安装coredns</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f coredns.yaml </span><br></pre></td></tr></table></figure></li><li><p>查看pod</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -A</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20230220222633991.png" alt="image-20230220222633991"></p></li></ol><blockquote><p>恭喜您，集群安装完成啦！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署gitlab</title>
      <link href="/2021/12/18/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2gitlab/"/>
      <url>/2021/12/18/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2gitlab/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群部署gitlab"><a href="#Kubernetes集群部署gitlab" class="headerlink" title="Kubernetes集群部署gitlab"></a>Kubernetes集群部署gitlab</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.20.9<br>Helm：3.7.1<br>gitlab chart：5.5.2<br>gitlab：14.5.2</p></blockquote><blockquote><p>Kubernetes集群环境为Kubeadm部署的单master集群，具体请参考<a href="/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/">Kubernetes集群快速安装</a></p></blockquote><h2 id="Helm安装gitlab"><a href="#Helm安装gitlab" class="headerlink" title="Helm安装gitlab"></a>Helm安装gitlab</h2><blockquote><p>官方安装文档<a href="https://docs.gitlab.com/charts/installation/deployment.html">https://docs.gitlab.com/charts/installation/deployment.html</a></p></blockquote><blockquote><p>本次安装使用ingress-nginx暴露服务，存储使用nfs动态存储，证书使用自签证书，域名使用本地hosts解析</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>安装Helm，具体安装步骤请参考<a href="/2021/11/22/Helm%E5%AE%89%E8%A3%85/">Helm安装</a></p></li><li><p>安装ingress-nginx，具体安装步骤请参考<a href="/2021/11/22/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ingress-nginx/">Kubernetes集群部署ingress-nginx</a></p></li><li><p>安装nfs-subdir-external-provisioner，具体安装步骤请参考<a href="/2021/11/27/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2nfs%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/">Kubernetes集群部署nfs动态存储</a></p></li><li><p>添加gitlab仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm repo add gitlab https://charts.gitlab.io/</span><br></pre></td></tr></table></figure></li><li><p>查看gitlab所有版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm search repo gitlab/gitlab --versions</span><br></pre></td></tr></table></figure></li><li><p>拉取指定版本chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm pull gitlab/gitlab --version 5.5.2</span><br></pre></td></tr></table></figure></li><li><p>解压chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf gitlab-5.5.2.tgz</span><br></pre></td></tr></table></figure></li><li><p>打开values配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi gitlab/values.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">edition:</span> <span class="string">ce</span> <span class="comment"># 第45行，修改为ce为社区版，默认ee为企业版</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="attr">domain:</span> <span class="string">accepted.fun</span> <span class="comment"># 第57行，gitlab主域名，会自动使用gitlab.accepted.fun，minio.accepted.fun，registry.accepted.fun，也可以单独设置相应的name和https字段，参考https://docs.gitlab.cn/charts/charts/globals.html</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">configureCertmanager:</span> <span class="literal">false</span> <span class="comment"># 第73行，不使用Certmanager</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span> <span class="comment"># 第76行，添加注解，设置ingress控制器，如果设置了默认ingress控制器，可以不加</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 第79行，取消注释，设置tls</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">&quot;tls-gitlab&quot;</span> <span class="comment"># 第80行，取消注释，设置tls的secretName</span></span><br><span class="line"><span class="attr">certmanager:</span></span><br><span class="line">  <span class="attr">install:</span> <span class="literal">false</span> <span class="comment"># 第721行，不安装certmanager管理证书</span></span><br><span class="line"><span class="attr">nginx-ingress:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span> <span class="comment"># 第731行，已经有ingress-nginx了不需要再安装</span></span><br><span class="line"><span class="attr">gitlab-runner:</span></span><br><span class="line">  <span class="attr">install:</span> <span class="literal">false</span> <span class="comment"># 第988行，不安装gitlab-runner，使用jenkins构建服务，如果有需要，自行开启</span></span><br></pre></td></tr></table></figure></li><li><p>生成自签证书，具体步骤请参考<a href="/2021/12/04/Openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/">Openssl生成自签证书</a>，<strong>注意SANs要包含<code>gitlab.accepted.fun</code>和<code>minio.accepted.fun</code>、<code>registry.accepted.fun</code>这三个域名</strong>，最后需要2个文件，应用证书<code>gitlab.crt</code>和应用私钥<code>gitlab.key</code></p></li><li><p>创建命名空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace gitlab</span><br></pre></td></tr></table></figure></li><li><p>添加证书到集群secret中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls tls-gitlab --cert=gitlab.crt --key=gitlab.key -n gitlab</span><br></pre></td></tr></table></figure></li><li><p>安装gitlab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install gitlab gitlab -n gitlab</span><br></pre></td></tr></table></figure></li><li><p>查看pod</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n gitlab</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20220108173422587.png" alt="查看pod"></p></li><li><p>windows设置hosts，修改C:\Windows\System32\drivers\etc\hosts文件，添加如下配置</p><blockquote><p>192.168.1.101为master节点的IP地址，ingress-nginx-controller控制器在master上，请自行修改为相应IP地址。如果修改不了，需要修改hosts文件的权限，或者新建一个文本文件重命名为hosts</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.101 gitlab.accepted.fun</span><br></pre></td></tr></table></figure></li><li><p>浏览器访问gitlab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gitlab.accepted.fun</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211219212445344.png" alt="访问gitlab"></p></li><li><p>获取root密码</p><blockquote><p>minio，redis，portgresql等密码都在相应的secret中</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secret gitlab-gitlab-initial-root-password -n gitlab -ojsonpath=&#x27;&#123;.data.password&#125;&#x27; | base64 --decode ; echo</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211219212603876.png" alt="获取root密码"></p></li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li><p>登录gitlab，获取Monitoring项目（默认会自带一个项目）HTTPS链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gitlab.accepted.fun/gitlab-instance-98897215/Monitoring.git</span><br></pre></td></tr></table></figure></li><li><p>安装windows git</p></li><li><p>设置使用windows证书机制</p><blockquote><p>如果不设置会报错：<code>SSL certificate problem: unable to get local issuer certificate</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslbackend schannel</span><br></pre></td></tr></table></figure></li><li><p>克隆仓库到本地，输入账号和密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitlab.accepted.fun/gitlab-instance-98897215/Monitoring.git</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20220108175755278.png" alt="克隆仓库到本地"></p></li><li><p>在文件下新建README.md文件</p><p><img src="http://source.accepted.fun/image/article/image-20220108180029866.png" alt="image-20220108180029866"></p></li><li><p>添加README.md文件到暂存区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add README.md</span><br></pre></td></tr></table></figure></li><li><p>提交到本地厂库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m 添加README.md文件测试</span><br></pre></td></tr></table></figure></li><li><p>推送到gitlab仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20220108180444387.png" alt="推送到gitlab仓库"></p></li><li><p>查看推送</p><p><img src="http://source.accepted.fun/image/article/image-20220108180648036.png" alt="查看推送"></p></li></ol><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><ol><li><p>删除chart压缩包</p><blockquote><p>解压出来的文件夹，不建议删除，可用于恢复和更改服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf gitlab-5.5.2.tgz</span><br></pre></td></tr></table></figure></li><li><p>删除Monitoring项目，点击设置，展开Advanced，下拉点击删除项目</p><p><img src="http://source.accepted.fun/image/article/image-20220108181818119.png" alt="点击设置"></p><p><img src="http://source.accepted.fun/image/article/image-20220108182005107.png" alt="删除项目"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署harbor</title>
      <link href="/2021/12/08/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2harbor/"/>
      <url>/2021/12/08/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2harbor/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群部署harbor"><a href="#Kubernetes集群部署harbor" class="headerlink" title="Kubernetes集群部署harbor"></a>Kubernetes集群部署harbor</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.20.9<br>Helm：3.7.1<br>harbor chart：1.8.0<br>harbor：2.4.0</p></blockquote><blockquote><p>Kubernetes集群环境为Kubeadm部署的单master集群，具体请参考<a href="/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/">Kubernetes集群快速安装</a></p></blockquote><h2 id="Helm安装harbor"><a href="#Helm安装harbor" class="headerlink" title="Helm安装harbor"></a>Helm安装harbor</h2><blockquote><p>官方安装文档<a href="https://goharbor.io/docs/2.4.0/install-config/harbor-ha-helm/">https://goharbor.io/docs/2.4.0/install-config/harbor-ha-helm/</a></p></blockquote><blockquote><p>本次安装使用ingress-nginx暴露服务，存储使用nfs动态存储，证书使用自签证书，域名使用本地hosts解析</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>安装Helm，具体安装步骤请参考<a href="/2021/11/22/Helm%E5%AE%89%E8%A3%85/">Helm安装</a></p></li><li><p>安装ingress-nginx，具体安装步骤请参考<a href="/2021/11/22/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ingress-nginx/">Kubernetes集群部署ingress-nginx</a></p></li><li><p>安装nfs-subdir-external-provisioner，具体安装步骤请参考<a href="/2021/11/27/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2nfs%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/">Kubernetes集群部署nfs动态存储</a></p></li><li><p>添加harbor仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm repo add harbor https://helm.goharbor.io</span><br></pre></td></tr></table></figure></li><li><p>查看harbor所有版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm search repo harbor/harbor --versions</span><br></pre></td></tr></table></figure></li><li><p>拉取指定版本chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm pull harbor/harbor --version 1.8.0</span><br></pre></td></tr></table></figure></li><li><p>解压chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf harbor-1.8.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>打开values配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi harbor/values.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">expose:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">certSource:</span> <span class="string">secret</span> <span class="comment"># 第21行，使用自签证书</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">&quot;tls-harbor&quot;</span> <span class="comment"># 第30行，harbor证书secret</span></span><br><span class="line">      <span class="attr">notarySecretName:</span> <span class="string">&quot;tls-harbor&quot;</span> <span class="comment"># 第25行，notary证书secret</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="attr">core:</span> <span class="string">harbor.accepted.fun</span> <span class="comment"># 第38行，harbor域名</span></span><br><span class="line">      <span class="attr">notary:</span> <span class="string">notary.accepted.fun</span> <span class="comment"># 第39行，notary域名，用于镜像的签名，保证镜像安全，不能与core设置的域名一样</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span> <span class="comment"># 第50行，添加注解，设置ingress控制器，如果设置了默认ingress控制器，可以不加</span></span><br><span class="line"><span class="attr">externalURL:</span> <span class="string">https://harbor.accepted.fun</span> <span class="comment"># 第123行，harbor访问URL，跟第38行域名保持一致</span></span><br><span class="line"><span class="attr">persistence:</span></span><br><span class="line">  <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">    <span class="attr">registry:</span> <span class="comment"># 镜像存储</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;nfs-storage&quot;</span> <span class="comment"># 第216行，nfs存储类名，如果设置了默认存储类，可以不填</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">10Gi</span> <span class="comment"># 第219行，根据自身需求设置存储大小,建议500Gi</span></span><br><span class="line">    <span class="attr">chartmuseum:</span> <span class="comment"># chart存储</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;nfs-storage&quot;</span> <span class="comment"># 第222行</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">5Gi</span> <span class="comment"># 第225行，根据自身需求设置存储大小</span></span><br><span class="line">    <span class="attr">jobservice:</span> <span class="comment"># 定时任务</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;nfs-storage&quot;</span> <span class="comment"># 第228行</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">1Gi</span> <span class="comment"># 第231行</span></span><br><span class="line">    <span class="attr">database:</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;nfs-storage&quot;</span> <span class="comment"># 第236行</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">1Gi</span> <span class="comment"># 第239行</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;nfs-storage&quot;</span> <span class="comment"># 第244行</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">1Gi</span> <span class="comment"># 第247行</span></span><br><span class="line">    <span class="attr">trivy:</span> <span class="comment"># 镜像漏扫</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;nfs-storage&quot;</span> <span class="comment"># 第250行</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">5Gi</span> <span class="comment"># 第253行</span></span><br></pre></td></tr></table></figure></li><li><p>生成自签证书，具体步骤请参考<a href="/2021/12/04/Openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/">Openssl生成自签证书</a>，<strong>注意SANs要包含<code>harbor.accepted.fun</code>和<code>notary.accepted.fun</code>这两个域名</strong>，最后需要2个文件，应用证书<code>harbor.crt</code>和应用私钥<code>harbor.key</code></p></li><li><p>创建命名空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace harbor</span><br></pre></td></tr></table></figure></li><li><p>添加证书到集群secret中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls tls-harbor --cert=harbor.crt --key=harbor.key -n harbor</span><br></pre></td></tr></table></figure></li><li><p>安装harbor</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install harbor harbor -n harbor</span><br></pre></td></tr></table></figure></li><li><p>查看pod</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n harbor</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211212152850894.png" alt="查看pod"></p></li><li><p>windows设置hosts，修改C:\Windows\System32\drivers\etc\hosts文件，添加如下配置</p><blockquote><p>192.168.1.101为master节点的IP地址，ingress-nginx-controller控制器在master上，请自行修改为相应IP地址。如果修改不了，需要修改hosts文件的权限，或者新建一个文本文件重命名为hosts</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.101 harbor.accepted.fun</span><br></pre></td></tr></table></figure></li><li><p>浏览器访问harbor</p><blockquote><p>默认用户名为admin，密码为Harbor12345</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://harbor.accepted.fun</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211212154318616.png" alt="访问harbor"></p></li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li><p>登录harbor，新建test项目</p><p><img src="http://source.accepted.fun/image/article/image-20211212155042062.png" alt="新建test项目"></p></li><li><p>选择master节点测试，在master上添加hosts解析记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.1.101 harbor.accepted.fun</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>信任私有仓库</p><div class="tabs" id="信任私有仓库"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="信任私有仓库-1">信任根证书(推荐)</button><button type="button" class="tab " data-href="信任私有仓库-2">添加insecure-registries</button></ul><div class="tab-contents"><div class="tab-item-content active" id="信任私有仓库-1"><ol><li><p>拷贝根证书到信任证书目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp root.crt /etc/pki/ca-trust/source/anchors/accepted.fun.crt</span><br></pre></td></tr></table></figure></li><li><p>更新信任证书列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-ca-trust</span><br></pre></td></tr></table></figure></li><li><p>重启docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li></ol></div><div class="tab-item-content" id="信任私有仓库-2"><ol><li><p>打开docker配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure></li><li><p>添加insecure-registries</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;http://hub-mirror.c.163.com&quot;,</span><br><span class="line">        &quot;http://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://reg-mirror.qiniu.com&quot;,</span><br><span class="line">        &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">    &quot;insecure-registries&quot;: [&quot;harbor.accepted.fun&quot;] # 添加insecure-registries，注意上一行行尾的逗号</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重新加载配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload docker</span><br></pre></td></tr></table></figure></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></li><li><p>登录harbor</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login harbor.accepted.fun</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211212175730076.png" alt="登录harbor"></p></li><li><p>拉取centos镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos:latest</span><br></pre></td></tr></table></figure></li><li><p>添加tag</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag centos:latest harbor.accepted.fun/test/centos:latest</span><br></pre></td></tr></table></figure></li><li><p>推送到harbor仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push harbor.accepted.fun/test/centos:latest</span><br></pre></td></tr></table></figure></li><li><p>查看仓库</p><p><img src="http://source.accepted.fun/image/article/image-20211212192405154.png" alt="查看仓库"></p></li><li><p>删除本地centos镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rmi centos:latest</span><br><span class="line">docker rmi harbor.accepted.fun/test/centos:latest</span><br></pre></td></tr></table></figure></li><li><p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull harbor.accepted.fun/test/centos:latest</span><br></pre></td></tr></table></figure></li></ol><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><ol><li><p>删除centos容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi harbor.accepted.fun/test/centos:latest</span><br></pre></td></tr></table></figure></li><li><p>删除chart压缩包</p><blockquote><p>解压出来的文件夹，不建议删除，可用于恢复和更改服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf harbor-1.8.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>登录harbor，依次删除centos镜像仓库，删除test项目</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> harbor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署rancher</title>
      <link href="/2021/12/04/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2rancher/"/>
      <url>/2021/12/04/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2rancher/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群部署rancher"><a href="#Kubernetes集群部署rancher" class="headerlink" title="Kubernetes集群部署rancher"></a>Kubernetes集群部署rancher</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.20.9<br>Helm：3.7.1<br>rancher-stable chart：2.6.2<br>rancher-stable：v2.6.2</p></blockquote><blockquote><p>Kubernetes集群环境为Kubeadm部署的单master集群，具体请参考<a href="/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/">Kubernetes集群快速安装</a></p></blockquote><h2 id="Helm安装rancher"><a href="#Helm安装rancher" class="headerlink" title="Helm安装rancher"></a>Helm安装rancher</h2><blockquote><p>官方安装文档<a href="https://docs.rancher.cn/docs/rancher2/installation/install-rancher-on-k8s/_index">https://docs.rancher.cn/docs/rancher2/installation/install-rancher-on-k8s/_index</a></p></blockquote><blockquote><p>本次安装使用ingress-nginx暴露服务，证书使用自签证书，域名使用本地hosts解析</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>安装Helm，具体安装步骤请参考<a href="/2021/11/22/Helm%E5%AE%89%E8%A3%85/">Helm安装</a></p></li><li><p>安装ingress-nginx，具体安装步骤请参考<a href="/2021/11/22/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ingress-nginx/">Kubernetes集群部署ingress-nginx</a></p></li><li><p>添加rancher-stable仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm repo add rancher-stable https://releases.rancher.com/server-charts/stable</span><br></pre></td></tr></table></figure></li><li><p>查看rancher-stable所有版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm search repo rancher-stable/rancher --versions</span><br></pre></td></tr></table></figure></li><li><p>拉取指定版本chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm pull rancher-stable/rancher --version 2.6.2</span><br></pre></td></tr></table></figure></li><li><p>解压chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf rancher-2.6.2.tgz</span><br></pre></td></tr></table></figure></li><li><p>打开values配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi rancher/values.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hostname: rancher.accepted.fun # 第46行，rancher访问域名</span><br><span class="line">ingress:</span><br><span class="line">  extraAnnotations: &#123;&quot;kubernetes.io/ingress.class&quot;: &quot;nginx&quot;&#125; # 第61行，添加额外注解，指定ingress使用nginx，如果ingressclass设置了默认，可以不用添加</span><br><span class="line">  tls:</span><br><span class="line">    source: secret # 第69行，证书类型，可选值为rancher（使用 Rancher 生成的自签名证书，需要安装cert-manager），letsEncrypt（ Let&#x27;s Encrypt的证书，需要安装cert-manager），secret（使用自己的证书，可以为购买的证书或自签证书）</span><br><span class="line">privateCA: true # 第83行，使用自签的私人证书需要设置为true</span><br></pre></td></tr></table></figure></li><li><p>生成自签证书，具体步骤请参考<a href="/2021/12/04/Openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/">Openssl生成自签证书</a>，最后需要3个文件，根证书<code>root.crt</code>、应用证书<code>rancher.crt</code>和应用私钥<code>rancher.key</code></p></li><li><p>创建命名空间，<strong>注意命名空间必须是cattle-system</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace cattle-system</span><br></pre></td></tr></table></figure></li><li><p>添加根证书到集群中</p><blockquote><p><code>--from-file=cacerts.pem=root.crt</code>参数中的<code>cacerts.pem</code>不能少，后面的<code>root.crt</code>为根证书文件路径</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n cattle-system create secret generic tls-ca --from-file=cacerts.pem=root.crt</span><br></pre></td></tr></table></figure></li><li><p>添加rancher应用证书和私钥到集群中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n cattle-system create secret tls tls-rancher-ingress --cert=rancher.crt --key=rancher.key</span><br></pre></td></tr></table></figure></li><li><p>安装rancher</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install rancher rancher -n cattle-system</span><br></pre></td></tr></table></figure></li><li><p>查看pod，多等待几分钟，rancher镜像有1.12GB</p><blockquote><p>helm-operation如果Error不用管，只要有一个Completed就行</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n cattle-system</span><br><span class="line">kubectl get pod -n cattle-fleet-system</span><br><span class="line">kubectl get pod -n cattle-fleet-local-system</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211205111756341.png" alt="查看pod"></p></li><li><p>windows设置hosts，修改C:\Windows\System32\drivers\etc\hosts文件，添加如下配置</p><blockquote><p>192.168.1.101为master节点的IP地址，ingress-nginx-controller控制器在master上，请自行修改为相应IP地址。如果修改不了，需要修改hosts文件的权限，或者新建一个文本文件重命名为hosts</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.101 rancher.accepted.fun</span><br></pre></td></tr></table></figure></li><li><p>浏览器访问rancher</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rancher.accepted.fun</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211205120437774.png" alt="访问rancher"></p></li><li><p>点击命令复制，在master上执行获取密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secret --namespace cattle-system bootstrap-secret -o go-template=&#x27;&#123;&#123;.data.bootstrapPassword|base64decode&#125;&#125;&#123;&#123;&quot;\n&quot;&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211205120756237.png" alt="获取密码"></p></li><li><p>复制密码登录rancher，设置新密码和访问地址，点击继续访问rancher首页</p><blockquote><p>注意访问地址最后不能有<code>/</code>，否则会导致导入已有集群失败</p><p>正确：<a href="https://rancher.accepted.fun/">https://rancher.accepted.fun</a></p><p>错误：<a href="https://rancher.accepted.fun/">https://rancher.accepted.fun/</a></p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20211205121035888.png" alt="设置密码"></p></li><li><p>手动切换视图为旧版，访问如下地址</p><blockquote><p>新版本rancher目前还未找到如何设置默认视图</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://rancher.accepted.fun/g/clusters</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211205123604129.png" alt="访问旧视图"></p></li><li><p>可以看到local集群未就绪，点击local查看</p><p><img src="http://source.accepted.fun/image/article/image-20211205123746120.png" alt="查看local集群"></p></li><li><p>这是由于kubernetes 1.13及以上版本中，默认将 <code>http</code> 端口进行了关闭，导致健康检查失败，修改配置文件注释掉<code>- --port=0</code>即可，kube-scheduler默认http端口为10251，kube-controller-manager默认http端口为10252。</p><blockquote><p>只在master上执行</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s|- --port=0|#- --port=0|&#x27; /etc/kubernetes/manifests/kube-scheduler.yaml</span><br><span class="line">sed -i &#x27;s|- --port=0|#- --port=0|&#x27; /etc/kubernetes/manifests/kube-controller-manager.yaml</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211205131117464.png" alt="集群就绪"></p></li><li><p>此时rancher已经就绪，集群已经可以被rancher管理，helm安装的rancher，已经将集群添加到local中，<strong>不需要再导入</strong>，但是可以看见ingress控制器一直处于Pending状态，ingress也是一直Initializing，这只是显示问题，并不影响使用，暂未找到解决方法。</p><p><img src="http://source.accepted.fun/image/article/image-20211205133308023.png" alt="ingress显示问题"></p></li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li><p>在default中部署一个服务验证一下</p><p><img src="http://source.accepted.fun/image/article/image-20211205152033350.png" alt="部署服务"></p></li><li><p>输入名称，其它配置默认就好，然后直接点击启动</p><p><img src="http://source.accepted.fun/image/article/image-20211205152223157.png" alt="配置服务"></p></li><li><p>等待一会，部署成功</p><p><img src="http://source.accepted.fun/image/article/image-20211205152501301.png" alt="部署成功"></p></li><li><p>添加ingress</p><p><img src="http://source.accepted.fun/image/article/image-20211205152953676.png" alt="添加ingress"></p></li><li><p>设置ingress</p><p><img src="http://source.accepted.fun/image/article/image-20211205155902831.png" alt="设置ingress"></p></li><li><p>添加注解，使用nginx，然后保存</p><blockquote><p><strong>即使设置了默认ingressclass还是要添加注解，应该是rancher的问题</strong></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubernetes.io/ingress.class: nginx</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211205160347592.png" alt="添加注解"></p></li><li><p>在windows上添加hosts解析</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.101 test.accepted.fun</span><br></pre></td></tr></table></figure></li><li><p>访问测试</p><p><img src="http://source.accepted.fun/image/article/image-20211205160746194.png" alt="访问测试"></p></li></ol><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><ol><li><p>删除default中的test工作负载和system中的test负载均衡</p></li><li><p>删除chart压缩包</p><blockquote><p>解压出来的文件夹，不建议删除，可用于恢复和更改服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf rancher-2.6.2.tgz</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> rancher </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Openssl生成自签证书</title>
      <link href="/2021/12/04/Openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"/>
      <url>/2021/12/04/Openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Openssl生成自签证书"><a href="#Openssl生成自签证书" class="headerlink" title="Openssl生成自签证书"></a>Openssl生成自签证书</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Openssl：1.0.2k-fips</p></blockquote><blockquote><p>证书格式为PEM格式，版本为v3</p></blockquote><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><ol><li><p>创建配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; openssl.cnf &lt;&lt; EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ca根证书配置</span></span><br><span class="line">[ ca ]</span><br><span class="line">subjectKeyIdentifier=hash</span><br><span class="line">authorityKeyIdentifier=keyid:always,issuer</span><br><span class="line">basicConstraints = critical,CA:true</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">HTTPS应用证书配置</span></span><br><span class="line">[ crt ]</span><br><span class="line">subjectKeyIdentifier = hash</span><br><span class="line">authorityKeyIdentifier=keyid:always,issuer</span><br><span class="line">basicConstraints = critical, CA:false</span><br><span class="line">keyUsage = critical, digitalSignature, cRLSign, keyEncipherment</span><br><span class="line">extendedKeyUsage = critical, serverAuth, clientAuth</span><br><span class="line">subjectAltName=@alt_names</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SANs可以将一个证书给多个域名或IP使用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">访问的域名或IP必须包含在此，否则无效</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改为你要保护的域名或者IP地址，支持通配符</span></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = accepted.fun</span><br><span class="line">DNS.2 = blog.accepted.fun</span><br><span class="line">IP.1 = 192.168.1.101</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><h2 id="生成根证书"><a href="#生成根证书" class="headerlink" title="生成根证书"></a>生成根证书</h2><ol><li><p>生成根证书私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out root.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成根证书请求文件</p><blockquote><p>C：所在国家 (Country)，只能是两位字母缩写<br>ST：所在省份(State)<br>L：所在城市(Locality)<br>O：所在组织(Organization)<br>OU：所在部门(Organization Unit)<br>CN：公用名，即域名(Common Name)</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key root.key  -out root.csr -subj &quot;/C=CN/ST=Sichuan/L=Chengdu/O=accepted/OU=accepted/CN=accepted.fun&quot;</span><br></pre></td></tr></table></figure></li><li><p>生成根证书</p><blockquote><p>-req: 证书请求<br>-extfile：扩展文件配置和-extensions参数使用<br>-extensions：扩展配置<br>-in：证书请求文件<br>-out：证书输出文件<br>-signkey：签名的私钥<br>-days：有效期</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -extfile openssl.cnf -extensions ca -in root.csr -out root.crt -signkey root.key -CAcreateserial -days 3650</span><br></pre></td></tr></table></figure></li></ol><h2 id="签发应用证书"><a href="#签发应用证书" class="headerlink" title="签发应用证书"></a>签发应用证书</h2><ol><li><p>生成应用私钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out blog.key 2048</span><br></pre></td></tr></table></figure></li><li><p>生成<code>bolg.accepted.fun</code>域名证书请求文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key blog.key -out blog.csr -subj &quot;/C=CN/ST=Sichuan/L=Chengdu/O=accepted/OU=blog/CN=blog.accepted.fun&quot;</span><br></pre></td></tr></table></figure></li><li><p>签发证书</p><blockquote><p>blog.csr为证书序列号文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -extfile openssl.cnf -extensions crt -CA root.crt -CAkey root.key -CAserial blog.srl -CAcreateserial -in blog.csr -out blog.crt -days 3650</span><br></pre></td></tr></table></figure></li><li><p>使用应用私钥<code>blog.key</code>和应用证书<code>blog.crt</code>为<code>bolg.accepted.fun</code>添加HTTPS服务</p></li></ol><h2 id="信任根证书"><a href="#信任根证书" class="headerlink" title="信任根证书"></a>信任根证书</h2> <div class="note warning simple"><p><strong>温馨提示：不要轻易信任一个根证书！</strong></p></div><ol><li><p>下载根证书<code>root.crt</code>到windows，双击证书</p></li><li><p>点击安装证书</p><p><img src="http://source.accepted.fun/image/article/image-20211204153758354.png" alt="安装证书"></p></li><li><p>选择本地计算机，点击下一页</p><p><img src="http://source.accepted.fun/image/article/image-20211204153914100.png" alt="选择本地计算机"></p></li><li><p>可以根据需求自行选择，推荐手动选择受信任的根证书颁发机构</p><p><img src="http://source.accepted.fun/image/article/image-20211204154500098.png" alt="选择受信任的根证书颁发机构"></p></li><li><p>点击完成，浏览器访问测试</p><p><img src="http://source.accepted.fun/image/article/image-20211204215323168.png" alt="访问测试"></p></li></ol><h2 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h2><ol><li><p>删除请求文件</p><blockquote><p>root.key和root.crt建议保留，以后签发证书都可以用它，不用在重复信任根证书了，blog.key和blog.crt也建议保留</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf root.csr blog.csr blog.csr</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数字证书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署nfs动态存储</title>
      <link href="/2021/11/27/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2nfs%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/"/>
      <url>/2021/11/27/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2nfs%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群部署nfs动态存储"><a href="#Kubernetes集群部署nfs动态存储" class="headerlink" title="Kubernetes集群部署nfs动态存储"></a>Kubernetes集群部署nfs动态存储</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.20.9<br>Helm：3.7.1<br>nfs-subdir-external-provisioner chart：4.0.14<br>nfs-subdir-external-provisioner：4.0.2</p></blockquote><blockquote><p>Kubernetes集群环境为Kubeadm部署的单master集群，具体请参考<a href="/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/">Kubernetes集群快速安装</a></p></blockquote><h2 id="Helm安装nfs动态存储"><a href="#Helm安装nfs动态存储" class="headerlink" title="Helm安装nfs动态存储"></a>Helm安装nfs动态存储</h2><blockquote><p>本次使用nfs-subdir-external-provisioner来部署nfs动态存储，nfs-client-provisioner已经废弃不建议使用，安装方式大致相同，1.20及以上的kubernetes安装nfs-client-provisioner时注意在&#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-apiserver.yaml文件中添加<code>- --feature-gates=RemoveSelfLink=false</code>参数</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>安装nfs服务</p><blockquote><p><strong>所有节点都执行</strong></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-utils</span><br></pre></td></tr></table></figure></li><li><p>选择一个节点服务器作为nfs的server端，这里选择master节点，在master节点上创建nfs共享目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/nfs</span><br></pre></td></tr></table></figure></li><li><p>配置访问权限</p><blockquote><p>192.168.1.0&#x2F;24为集群网段<br>rw：以读写的方式共享<br>syn： 默认选项，保持数据同步，数据同步写入到内存和硬盘<br>no_root_squash：NFS客户端连接服务端时如果使用的是root用户的话，那么对服务端分享的目录来说，也拥有root权限<br>no_all_squash：不论NFS客户端连接服务端时使用什么用户，对服务端分享的目录来说都是拥有root权限</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/exports &lt;&lt; EOF</span><br><span class="line">/data/nfs 192.168.1.0/24(rw,sync,no_root_squash,no_all_squash)</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable rpcbind.service</span><br><span class="line">systemctl enable nfs-server.service</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rpcbind.service</span><br><span class="line">systemctl start nfs-server.service</span><br></pre></td></tr></table></figure></li><li><p>安装Helm，具体安装步骤请参考<a href="/2021/11/22/Helm%E5%AE%89%E8%A3%85/">Helm安装</a></p></li><li><p>添加nfs-subdir-external-provisioner仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/</span><br></pre></td></tr></table></figure></li><li><p>查看nfs-subdir-external-provisioner所有版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm search repo nfs-subdir-external-provisioner --versions</span><br></pre></td></tr></table></figure></li><li><p>拉取指定版本chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm pull nfs-subdir-external-provisioner/nfs-subdir-external-provisioner --version 4.0.14</span><br></pre></td></tr></table></figure></li><li><p>解压chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf nfs-subdir-external-provisioner-4.0.14.tgz</span><br></pre></td></tr></table></figure></li><li><p>打开values配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi nfs-subdir-external-provisioner/values.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">replicaCount: 3 # 第1行，副本个数，根据自身需求设置，建议3个</span><br><span class="line">image:</span><br><span class="line">  repository: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner # 第5行，设置镜像仓库</span><br><span class="line">  tag: v4.0.2 # 第6行，镜像版本</span><br><span class="line">nfs:</span><br><span class="line">  server: 192.168.1.101 # 第11行，nfs server端地址</span><br><span class="line">  path: /data/nfs # 第12行，nfs目录</span><br><span class="line">storageClass:</span><br><span class="line">  defaultClass: true # 第27行，设置为默认存储类，如果不设置，使用存储类时需要指定</span><br><span class="line">  name: nfs-storage # 第31行，设置存储类资源名称</span><br></pre></td></tr></table></figure></li><li><p>创建命名空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace nfs-storage</span><br></pre></td></tr></table></figure></li><li><p>安装nfs-subdir-external-provisioner</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner -n nfs-storage</span><br></pre></td></tr></table></figure></li><li><p>查看pod</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n nfs-storage</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211128105525843.png" alt="查看pod"></p></li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li><p>创建PVC的yaml文件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; test-pvc.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: test-pvc</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: nfs-storage # 指定存储类，如果设置了默认，可以去掉</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 1Gi</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建pvc，会自动相应的pv</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f test-pvc.yaml -n nfs-storage</span><br></pre></td></tr></table></figure></li><li><p>查看pvc和pv是否创建</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pvc,pv -n nfs-storage</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20211128111226201.png" alt="查看pvc和pv"></p></li></ol><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><ol><li><p>删除chart压缩包</p><blockquote><p>解压出来的文件夹，不建议删除，可用于恢复和更改服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf nfs-subdir-external-provisioner-4.0.14.tgz</span><br></pre></td></tr></table></figure></li><li><p>删除pvc，会根据配置规则删除pv</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f test-pvc.yaml -n nfs-storage</span><br></pre></td></tr></table></figure></li><li><p>删除pvc的yaml文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf test-pvc.yaml</span><br></pre></td></tr></table></figure></li><li><p>进入nfs目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/nfs/</span><br></pre></td></tr></table></figure></li><li><p>删除该目录下test-pvc创建的文件夹</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> nfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署ingress-nginx</title>
      <link href="/2021/11/22/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ingress-nginx/"/>
      <url>/2021/11/22/Kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ingress-nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群部署ingress-nginx"><a href="#Kubernetes集群部署ingress-nginx" class="headerlink" title="Kubernetes集群部署ingress-nginx"></a>Kubernetes集群部署ingress-nginx</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.20.9<br>Helm：3.7.1<br>ingress-nginx chart：4.0.9<br>ingress-nginx：1.0.5</p></blockquote><blockquote><p>Kubernetes集群环境为Kubeadm部署的单master集群，具体请参考<a href="/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/">Kubernetes集群快速安装</a></p></blockquote><h2 id="Helm安装ingress-nginx"><a href="#Helm安装ingress-nginx" class="headerlink" title="Helm安装ingress-nginx"></a>Helm安装ingress-nginx</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>安装Helm，具体安装步骤请参考<a href="/2021/11/22/Helm%E5%AE%89%E8%A3%85/">Helm安装</a></p></li><li><p>添加ingress-nginx仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx</span><br></pre></td></tr></table></figure></li><li><p>查看ingress-nginx所有版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm search repo ingress-nginx --versions</span><br></pre></td></tr></table></figure></li><li><p>拉取指定版本chart包</p><blockquote><p>如果下载不了，根据提示信息的URL地址，用浏览器手动下载，上传到服务器</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm pull ingress-nginx/ingress-nginx --version 4.0.9</span><br></pre></td></tr></table></figure></li><li><p>解压chart包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf ingress-nginx-4.0.9.tgz</span><br></pre></td></tr></table></figure></li><li><p>打开values配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ingress-nginx/values.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数</p><blockquote><p>registry和image是修改镜像仓库和镜像名为阿里云的仓库（<strong>该仓库为个人用户仓库</strong>），官方镜像国内网络基本拉取不下来，默认配置使用Deployment控制器，副本数为1，你可以修改为DaemonSet，每个节点部署一个pod，此处使用nodeSelector将ingress控制器固定在master上</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">controller:</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">registry:</span> <span class="string">registry.aliyuncs.com/google_containers</span> <span class="comment"># 第13行</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx-ingress-controller</span> <span class="comment"># 第14行</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span> <span class="comment"># 第81行，设置使用主机网络，必须的</span></span><br><span class="line">  <span class="attr">ingressClassResource:</span></span><br><span class="line">    <span class="attr">default:</span> <span class="literal">true</span> <span class="comment"># 第101行，设置ingress-nginx为默认ingressClass控制器，否则使用ingress时需要指定使用nginx</span></span><br><span class="line">  <span class="attr">tolerations:</span> <span class="comment"># 第212行，设置污点容忍度，在该行下面插入，请自行根据master上的污点设置</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;node-role.kubernetes.io/master&quot;</span></span><br><span class="line">    <span class="attr">operator:</span> <span class="string">&quot;Equal&quot;</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">effect:</span> <span class="string">&quot;NoSchedule&quot;</span></span><br><span class="line">  <span class="attr">nodeSelector:</span></span><br><span class="line">    <span class="attr">node-role.kubernetes.io/master:</span> <span class="string">&quot;&quot;</span> <span class="comment"># 第286行，选择master节点，需要master上有该标签</span></span><br><span class="line">  <span class="attr">admissionWebhooks:</span></span><br><span class="line">    <span class="attr">patch:</span></span><br><span class="line">      <span class="attr">image:</span></span><br><span class="line">        <span class="attr">registry:</span> <span class="string">registry.aliyuncs.com/google_containers</span> <span class="comment"># 第600行</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">kube-webhook-certgen</span> <span class="comment"># 第601行</span></span><br><span class="line"><span class="attr">defaultBackend:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 第721行，启用默认后端，如果不需要，下面2行也不用改</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">registry:</span> <span class="string">registry.aliyuncs.com/google_containers</span> <span class="comment"># 第725行</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">defaultbackend</span> <span class="comment"># 第726行</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="string">&quot;1.4&quot;</span> <span class="comment"># 第730行，目前没有同步1.5的镜像，改为1.4</span></span><br></pre></td></tr></table></figure></li><li><p>创建命名空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace ingress-nginx</span><br></pre></td></tr></table></figure></li><li><p>安装ingress-nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install ingress-nginx ingress-nginx -n ingress-nginx</span><br></pre></td></tr></table></figure></li><li><p>查看pod，控制器成功部署在master上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n ingress-nginx -o wide</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211124221142464.png" alt="查看ingress-nginx"></p></li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li><p>浏览器访问master的ip地址，启用了默认后端则提示<code>default backend - 404</code>，如果没有启用默认后端，则提示nginx的<code>404 Not Found</code>，安装完成。</p><p><img src="http://source.accepted.fun/image/article/image-20211128112701263.png" alt="启用默认后端效果"></p><p><img src="http://source.accepted.fun/image/article/image-20211128113105044.png" alt="关闭默认后端效果"></p></li></ol><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><ol><li><p>删除chart压缩包</p><blockquote><p>解压出来的文件夹，不建议删除，可用于恢复和更改服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ingress-nginx-4.0.9.tgz</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> ingress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> ingress-nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Helm安装</title>
      <link href="/2021/11/22/Helm%E5%AE%89%E8%A3%85/"/>
      <url>/2021/11/22/Helm%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Helm安装"><a href="#Helm安装" class="headerlink" title="Helm安装"></a>Helm安装</h1><blockquote><p>虚拟机软件： VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Helm：3.7.1</p></blockquote><blockquote><p>官方安装文档<a href="https://helm.sh/zh/docs/intro/install/">https://helm.sh/zh/docs/intro/install/</a></p></blockquote><h2 id="二进制包安装"><a href="#二进制包安装" class="headerlink" title="二进制包安装"></a>二进制包安装</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>安装wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure></li><li><p>下载helm二进制包，官方下载地址<a href="https://github.com/helm/helm/releases">https://github.com/helm/helm/releases</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压二进制包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf helm-v3.7.1-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>移动二进制文件到bin下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv linux-amd64/helm /usr/local/bin/helm</span><br></pre></td></tr></table></figure></li></ol><h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><ol><li><p>删除二进制包及解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf helm-v3.7.1-linux-amd64.tar.gz linux-amd64</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置自动补全"><a href="#配置自动补全" class="headerlink" title="配置自动补全"></a>配置自动补全</h2><ol><li><p>安装bash-completion</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y bash-completion</span><br></pre></td></tr></table></figure></li><li><p>配置bash-completion</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /usr/share/bash-completion/bash_completion</span><br></pre></td></tr></table></figure></li><li><p>设置helm自动补全</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &lt;(helm completion bash)</span><br></pre></td></tr></table></figure></li><li><p>添加helm到bash-completion配置文件中去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm completion bash &gt; /etc/bash_completion.d/helm</span><br></pre></td></tr></table></figure></li><li><p>验证，输入helm i，然后按tab自动补全</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Helm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Helm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装</title>
      <link href="/2021/11/21/Nginx%E5%AE%89%E8%A3%85/"/>
      <url>/2021/11/21/Nginx%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Nginx：1.20.1</p></blockquote><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><ol><li><p>安装wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li><p>下载源码包，官方下载地址<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.20.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压源码包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf nginx-1.20.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.20.1</span><br></pre></td></tr></table></figure></li><li><p>配置编译信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_realip_module --with-http_v2_module --with-stream</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>创建service文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /lib/systemd/system/nginx.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx - high performance web server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s stop</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动nginx并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure></li><li><p>添加环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;export PATH=$PATH:/usr/local/nginx/sbin&quot; &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis数据库安装</title>
      <link href="/2021/11/08/Redis%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85/"/>
      <url>/2021/11/08/Redis%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis数据库安装"><a href="#Redis数据库安装" class="headerlink" title="Redis数据库安装"></a>Redis数据库安装</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Redis：6.2.5<br>Docker:  20.10.10</p></blockquote><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><blockquote><p>已有Docker环境请跳过</p></blockquote><p>具体安装步骤请参考<a href="/2021/11/08/Docker%E5%AE%89%E8%A3%85/">Docker安装</a></p><h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><ol><li><p>创建数据目录，用于持久化数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/redis/&#123;conf,data&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建配置文件，请自行设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /data/redis/conf/redis.conf &lt;&lt; EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">监听地址</span></span><br><span class="line">bind 0.0.0.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启AOF持久化</span></span><br><span class="line">appendonly yes </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置密码，如果不需要密码，删除即可</span></span><br><span class="line">requirepass 密码 </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动Redis</p><blockquote><p>–name 指定容器名<br>-p 设置映射端口，主机端口:容器端口<br>-v 设置映射文件，主机文件:容器文件<br>-d 后台运行<br>redis-server redis启动配置文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--name redis \</span><br><span class="line">-p 6379:6379 \</span><br><span class="line">-v /data/redis/conf/redis.conf:/usr/loacl/redis.conf \</span><br><span class="line">-v /data/redis/data:/data \</span><br><span class="line">-d redis:6.2.5 redis-server /usr/loacl/redis.conf</span><br></pre></td></tr></table></figure></li><li><p>查看运行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211108212049036.png" alt="查看运行结果"></p></li><li><p>连接redis</p><blockquote><p>也可以用<strong>docker exec -it redis redis-cli -a 密码</strong>命令，但不建议，会暴露密码</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it redis redis-cli</span><br></pre></td></tr></table></figure></li><li><p>使用密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth 密码</span><br></pre></td></tr></table></figure></li></ol><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><ol><li><p>创建redis用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd redis</span><br></pre></td></tr></table></figure></li><li><p>安装wget和gcc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget gcc</span><br></pre></td></tr></table></figure></li><li><p>下载源码包</p><blockquote><p>github下载地址：<a href="https://github.com/redis/redis/releases">https://github.com/redis/redis/releases</a><br>redis官方下载地址：<a href="https://download.redis.io/releases/">https://download.redis.io/releases/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-6.2.5.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf redis-6.2.5.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd redis-6.2.5</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install PREFIX=/usr/local/redis </span><br></pre></td></tr></table></figure></li><li><p>拷贝配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf /usr/local/redis/redis.conf</span><br></pre></td></tr></table></figure></li><li><p>打开配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/redis/redis.conf</span><br></pre></td></tr></table></figure></li><li><p>修改如下配置</p><blockquote><p>bind 监听的IP<br>daemonize 以守护进程方式启动<br>logfile 日志文件的路径(有无引号都一样)<br>dir 持久化存储文件的路径<br>requirepass 配置密码，<strong>请自行修改</strong><br>appendonly 开启AOF持久化</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bind 0.0.0.0</span><br><span class="line">daemonize yes</span><br><span class="line">logfile /usr/local/redis/redis.log</span><br><span class="line">dir /usr/local/redis/</span><br><span class="line">requirepass 密码</span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure></li><li><p>修改文件所有者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R redis:redis /usr/local/redis</span><br></pre></td></tr></table></figure></li><li><p>创建service文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/redis.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=redis-server</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=redis</span><br><span class="line">ExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/redis.conf</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable redis</span><br></pre></td></tr></table></figure></li><li><p>启动redis服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure></li><li><p>添加环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>在末尾添加如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export REDIS_HOME=/usr/local/redis</span><br><span class="line">export PATH=$PATH:$REDIS_HOME/bin</span><br></pre></td></tr></table></figure></li><li><p>立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>连接redis</p><blockquote><p>也可以用<strong>redis-cli -a 密码</strong>命令，但不建议，会暴露密码</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure></li><li><p>使用密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth 密码</span><br></pre></td></tr></table></figure></li></ol><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a 密码 # 连接redis，最好不要-a 密码</span><br><span class="line">auth [用户名] 密码 # 切换用户</span><br><span class="line">info # 获取redis信息</span><br><span class="line">set key value # 设置key的值为value</span><br><span class="line">get key # 获取key的值</span><br><span class="line">keys * # 获取所有key</span><br><span class="line">select 0 # 切换到数据库0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> 非关系型数据库 </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/2021/11/08/Docker%E5%AE%89%E8%A3%85/"/>
      <url>/2021/11/08/Docker%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Docker：20.10.10</p></blockquote><h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><ol><li><p>安装wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure></li><li><p>下载docker-ce仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>查看可以安装的docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211108160213759.png" alt="docker可安装列表"></p></li><li><p>安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce-20.10.10 docker-ce-cli-20.10.10 containerd.io-1.4.11</span><br></pre></td></tr></table></figure></li><li><p>查看docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211108161232037.png" alt="查看docker版本"></p></li><li><p>创建docker配置目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/docker</span><br></pre></td></tr></table></figure></li><li><p>配置docker镜像源，可以参考<a href="https://github.com/jiaxinonly/docker-mirror">https://github.com/jiaxinonly/docker-mirror</a>项目，找到最快的镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">        &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure></li><li><p>启动docker服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h2><ol><li><p>安装wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure></li><li><p>下载二进制包</p><blockquote><p>docker官方下载地址<a href="https://download.docker.com/linux/static/stable/x86_64/">https://download.docker.com/linux/static/stable/x86_64&#x2F;</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.10.tgz</span><br></pre></td></tr></table></figure></li><li><p>解压二进制包到&#x2F;usr&#x2F;bin下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf docker-20.10.10.tgz --strip-components 1 -C /usr/bin</span><br></pre></td></tr></table></figure></li><li><p>查看docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211108161232037.png" alt="查看docker版本"></p></li><li><p>创建docker配置目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/docker</span><br></pre></td></tr></table></figure></li><li><p>配置docker镜像源，可以参考<a href="https://github.com/jiaxinonly/docker-mirror">https://github.com/jiaxinonly/docker-mirror</a>项目，找到最快的镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">        &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建containerd.service文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/containerd.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=containerd container runtime</span><br><span class="line">Documentation=https://containerd.io</span><br><span class="line">After=network.target local-fs.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStartPre=-/sbin/modprobe overlay</span><br><span class="line">ExecStart=/usr/bin/containerd</span><br><span class="line"></span><br><span class="line">Type=notify</span><br><span class="line">Delegate=yes</span><br><span class="line">KillMode=process</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=1048576</span><br><span class="line">TasksMax=infinity</span><br><span class="line">OOMScoreAdjust=-999</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建docker.socket文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/docker.socket &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Socket for the API</span><br><span class="line"></span><br><span class="line">[Socket]</span><br><span class="line">ListenStream=/var/run/docker.sock</span><br><span class="line">SocketMode=0660</span><br><span class="line">SocketUser=root</span><br><span class="line">SocketGroup=docker</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=sockets.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建docker.service文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/docker.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service containerd.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Requires=docker.socket containerd.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">TimeoutSec=0</span><br><span class="line">RestartSec=2</span><br><span class="line">Restart=always</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">TasksMax=infinity</span><br><span class="line">Delegate=yes</span><br><span class="line">KillMode=process</span><br><span class="line">OOMScoreAdjust=-500</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建docker用户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd docker</span><br></pre></td></tr></table></figure></li><li><p>将root用户添加到docker组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -a -G docker root</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable containerd</span><br><span class="line">systemctl enable docker.socket</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start containerd</span><br><span class="line">systemctl start docker.socket</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos # 拉取centos:latest镜像</span><br><span class="line">docker pull centos:8 # 拉取centos:8镜像</span><br><span class="line">docker images # 查看docker镜像</span><br><span class="line">docker run --name centos centos:8 # 创建并启动centos:8镜像，运行完自动关闭</span><br><span class="line">docker run -itd --name centos centos:8 # 创建并后台挂起启动centos:8镜像</span><br><span class="line">docker ps # 查看docker容器</span><br><span class="line">docker ps -a # 查看所有docker容器，包括已经停止的</span><br><span class="line">docker exec -it centos bash # 进入centos容器</span><br><span class="line">docker cp file centos:/root # 拷贝file文件到centos容器/root目录下</span><br><span class="line">docker cp centos:/root/file ./ # 拷贝centos容器/root/file文件到当前目录下</span><br><span class="line">docker logs centos # 查看centos容器日志</span><br><span class="line">docker inspect centos # 查看centos容器信息</span><br><span class="line">docker stop centos # 停止centos容器</span><br><span class="line">docker start centos # 启动centos容器</span><br><span class="line">docker restart centos # 重启centos容器</span><br><span class="line">docker rm centos # 删除centos容器，只能删除停止的容器</span><br><span class="line">docker rm -f centos # 强制删除centos容器</span><br><span class="line">docker rmi centos:8 # 删除centos:8镜像</span><br><span class="line">docker rm -f centos:8 # 强制删除centos:8镜像</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群快速安装</title>
      <link href="/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/"/>
      <url>/2021/07/26/Kubernetes%E9%9B%86%E7%BE%A4%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes集群快速安装"><a href="#Kubernetes集群快速安装" class="headerlink" title="Kubernetes集群快速安装"></a>Kubernetes集群快速安装</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>Kubernetes：1.20.9</p></blockquote><blockquote><p><strong>仅学习环境使用！</strong>使用kubeadm安装，部署简单快速</p></blockquote><h2 id="部署规划"><a href="#部署规划" class="headerlink" title="部署规划"></a>部署规划</h2><table><thead><tr><th>虚拟机IP</th><th>hostname</th><th>cpu</th><th>内存</th><th>磁盘</th><th>swap</th></tr></thead><tbody><tr><td>192.168.1.101</td><td>master01</td><td>2核</td><td>2G</td><td>15G</td><td>无</td></tr><tr><td>192.168.1.201</td><td>node01</td><td>2核</td><td>2G</td><td>15G</td><td>无</td></tr><tr><td>192.168.1.202</td><td>node02</td><td>2核</td><td>2G</td><td>15G</td><td>无</td></tr><tr><td>192.168.1.203</td><td>node03</td><td>2核</td><td>2G</td><td>15G</td><td>无</td></tr></tbody></table><table><thead><tr><th>名称</th><th>版本</th></tr></thead><tbody><tr><td>docker-ce</td><td>20.10.10</td></tr><tr><td>docker-ce-cli</td><td>20.10.10</td></tr><tr><td>containerd.io</td><td>1.4.12</td></tr><tr><td>kubeadm</td><td>1.20.9</td></tr><tr><td>kubelet</td><td>1.20.9</td></tr><tr><td>kubectl</td><td>1.20.9</td></tr><tr><td>kubernetes-cni</td><td>0.8.7</td></tr></tbody></table><h2 id="升级系统内核（可选）"><a href="#升级系统内核（可选）" class="headerlink" title="升级系统内核（可选）"></a>升级系统内核（可选）</h2><blockquote><p><strong>所有主机都执行</strong></p></blockquote><ol><li><p>安装elrepo源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org # 导入elrepo的签名</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-5.el7.elrepo.noarch.rpm # 升级elrepo源</span><br></pre></td></tr></table></figure></li><li><p>查看可以安装的系统内核版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list available</span><br></pre></td></tr></table></figure></li><li><p>升级系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel install kernel-lt kernel-lt-devel -y</span><br></pre></td></tr></table></figure></li><li><p>查看系统内核序号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27; /etc/grub2.cfg</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120101857984.png" alt="查看系统内核序号"></p></li><li><p>选择默认系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li><li><p>删除多余的系统内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove -y $(rpm -qa | grep kernel | grep -v $(uname -r))</span><br></pre></td></tr></table></figure></li></ol><h2 id="初始化系统环境"><a href="#初始化系统环境" class="headerlink" title="初始化系统环境"></a>初始化系统环境</h2><blockquote><p><strong>所有主机都执行</strong></p></blockquote><ol><li><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld # 关闭防火墙</span><br><span class="line">systemctl disable firewalld # 禁止启动</span><br></pre></td></tr></table></figure></li><li><p>关闭selinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; /etc/selinux/config # 永久关闭selinux（重启后生效）</span><br><span class="line">setenforce 0 # 临时关闭selinux（不需要重启，立即生效）</span><br></pre></td></tr></table></figure></li><li><p>关闭swap<strong>（没有swap不用管，官方是推荐关闭swap的）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab # 永久关闭swap（重启后生效）</span><br><span class="line">swapoff -a # 临时关闭swap(不需要重启，立即生效)</span><br></pre></td></tr></table></figure></li><li><p>设置主机名<strong>（每台主机分别执行）</strong></p><blockquote><p>设置好后，关闭ssh，重新连接即可</p></blockquote><div class="tabs" id="设置主机名"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="设置主机名-1">master01</button><button type="button" class="tab " data-href="设置主机名-2">node01</button><button type="button" class="tab " data-href="设置主机名-3">node02</button><button type="button" class="tab " data-href="设置主机名-4">node03</button></ul><div class="tab-contents"><div class="tab-item-content active" id="设置主机名-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl --static set-hostname master01</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置主机名-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl --static set-hostname node01</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置主机名-3"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl --static set-hostname node02</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="设置主机名-4"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl --static set-hostname node03</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></li><li><p>添加hosts解析记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.1.101 master01</span><br><span class="line">192.168.1.201 node01</span><br><span class="line">192.168.1.202 node02</span><br><span class="line">192.168.1.203 node03</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>将桥接的流量传递到iptables的链上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl --system</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署docker"><a href="#部署docker" class="headerlink" title="部署docker"></a>部署docker</h2><blockquote><p><strong>所有主机都执行</strong></p></blockquote><ol><li><p>安装wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure></li><li><p>下载docker-ce源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>查看可以安装的docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure></li><li><p>安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce-20.10.10 docker-ce-cli-20.10.10 containerd.io-1.4.12</span><br></pre></td></tr></table></figure></li><li><p>查看docker版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure></li><li><p>创建docker配置目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/docker</span><br></pre></td></tr></table></figure></li><li><p>配置docker源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;http://hub-mirror.c.163.com&quot;,</span><br><span class="line">        &quot;http://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://reg-mirror.qiniu.com&quot;,</span><br><span class="line">        &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure></li><li><p>启动docker服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装kubeadm"><a href="#安装kubeadm" class="headerlink" title="安装kubeadm"></a>安装kubeadm</h2><blockquote><p><strong>所有主机上执行</strong></p></blockquote><ol><li><p>添加阿里yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>安装kubeadm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install kubeadm-1.20.9 kubelet-1.20.9  kubectl-1.20.9 kubernetes-cni-0.8.7</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable kubelet</span><br></pre></td></tr></table></figure></li><li><p>启动kubelet服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start kubelet</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署kubernetes"><a href="#部署kubernetes" class="headerlink" title="部署kubernetes"></a>部署kubernetes</h2><blockquote><p><strong>只在master上执行</strong></p></blockquote><ol><li><p>生成初始化文件kubeadm-config.yaml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config print init-defaults &gt; kubeadm-config.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi kubeadm-config.yaml</span><br></pre></td></tr></table></figure></li><li><p>修改如下注释部分</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">4jvhpu.ig1cqkzcmc99ijss</span> <span class="comment"># 随便设置个token，或者删除bootstrapTokens</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.101</span> <span class="comment"># 修改为master01的ip地址</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">/var/run/dockershim.sock</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">master01</span></span><br><span class="line">  <span class="attr">taints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">registry.aliyuncs.com/google_containers</span> <span class="comment"># 修改为阿里云镜像仓库</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.20.0</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span> <span class="comment"># 添加pod子网</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull --config kubeadm-config.yaml</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120105841182.png" alt="拉取镜像"></p></li><li><p>初始化master，<strong>注意红色部分的join口令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config kubeadm-config.yaml</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120105949519.png" alt="初始化master"></p></li><li><p>按照提示执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure></li><li><p>查看master是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120110051495.png" alt="查看master"></p></li></ol><h2 id="添加node节点"><a href="#添加node节点" class="headerlink" title="添加node节点"></a>添加node节点</h2><blockquote><p><strong>所有node上执行</strong></p></blockquote><ol><li><p>使用在master上生成的口令直接在<strong>node上执行</strong></p><blockquote><p>如果已经消失使用<code>kubeadm token create --print-join-command</code>重新生成即可</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.1.101:6443 --token 4jvhpu.ig1cqkzcmc99ijss \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1653018f026b6ba71368b63153343a68c084ccda67669f31074f26b758c49fa4</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120110447108.png" alt="添加node"></p></li><li><p>等待一会，在master上查看node节点是否添加成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120113754560.png" alt="查看node"></p><p>为node添加标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl label nodes node01 node-role.kubernetes.io/node=</span><br><span class="line">kubectl label nodes node02 node-role.kubernetes.io/node=</span><br><span class="line">kubectl label nodes node03 node-role.kubernetes.io/node=</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120110652894.png" alt="添加标签"></p></li></ol><h2 id="安装CNI网络"><a href="#安装CNI网络" class="headerlink" title="安装CNI网络"></a>安装CNI网络</h2><blockquote><p><strong>只在master上执行</strong>，这里选择使用flannel，github地址<a href="https://github.com/flannel-io/flannel">https://github.com/flannel-io/flannel</a></p></blockquote><ol><li><p>添加CNI网络</p><blockquote><p>如果无法访问github，可以替换为我的链接<a href="http://share.accepted.fun/kubernetes/kube-flannel.yml">http://share.accepted.fun/kubernetes/kube-flannel.yml</a>，版本为0.14.0，可以浏览器直接访问github仓库文件<a href="https://github.com/flannel-io/flannel/blob/master/Documentation/kube-flannel.yml">https://github.com/flannel-io/flannel/blob/master/Documentation/kube-flannel.yml</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120110734259.png" alt="安装flannel"></p></li><li><p>等待一会，查看节点状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20211120111016857.png" alt="查看node状态"></p></li></ol><h2 id="配置自动补全"><a href="#配置自动补全" class="headerlink" title="配置自动补全"></a>配置自动补全</h2><blockquote><p><strong>只在master上执行</strong></p></blockquote><ol><li><p>安装bash-completion</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y bash-completion</span><br></pre></td></tr></table></figure></li><li><p>配置bash-completion</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /usr/share/bash-completion/bash_completion</span><br></pre></td></tr></table></figure></li><li><p>设置kubectl自动补全</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &lt;(kubectl completion bash)</span><br></pre></td></tr></table></figure></li><li><p>添加kubectl到bash-completion配置文件中去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl completion bash &gt;/etc/bash_completion.d/kubectl</span><br></pre></td></tr></table></figure></li><li><p>验证，输入kubectl g，然后按tab自动补全</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2021/07/25/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/07/25/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客搭建"><a href="#Hexo博客搭建" class="headerlink" title="Hexo博客搭建"></a>Hexo博客搭建</h1><blockquote><p>操作系统：Windows 10 20H2<br>NodeJS：16.4.1<br>git: 2.32.0</p></blockquote><blockquote><p>本教程参考B站视频<a href="https://www.bilibili.com/video/BV1Rt4y1k7it">BV1Rt4y1k7it</a></p></blockquote><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ol><li><p>安装Nodejs，具体参考<a href="/2020/11/30/Nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/">Nodejs的安装及配置详细教程</a></p></li><li><p>安装git，进入git官网<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>下载安装程序</p><p><img src="http://source.accepted.fun/image/article/image-20210704183637281.png" alt="下载git"></p></li><li><p>双击安装程序，一直点Next就好，<strong>记得修改安装路径</strong>！</p></li></ol><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ol><li><p>创建一个空文件夹用于安装hexo</p></li><li><p>访问一键安装脚本网站<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju</a></p><p><img src="http://source.accepted.fun/image/article/image-20210704223257778.png" alt="下载脚本"></p></li><li><p>按照教程去github下载install.sh脚本</p></li><li><p>将install.sh脚本文件放入新创建的空文件夹下</p><p><img src="http://source.accepted.fun/image/article/image-20210704223728170.png" alt="放入install.sh脚本"></p></li><li><p>在该文件夹下右击，选择Git Bash Here，打开命令行</p><p><img src="http://source.accepted.fun/image/article/image-20210726103134504.png" alt="打开git命令行"></p></li><li><p>检查NodeJs环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh test_node</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210704224312446.png" alt="检查NodeJS环境"></p></li><li><p>检查git环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh test_git</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210704224442294.png" alt="检查git环境"></p></li><li><p>开始安装Hexo，<strong>需要等待比较长的一段时间</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh hexo_win</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210705001855508.png" alt="安装Hexo"></p></li><li><p>进入hexoblog文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd hexoblog</span><br></pre></td></tr></table></figure></li><li><p>运行Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210705002304255.png" alt="运行Hexo"></p></li><li><p>浏览器访问<a href="http://localhost:4000/">http://localhost:4000</a>测试</p><p><img src="http://source.accepted.fun/image/article/image-20210705002450973.png" alt="本地访问Hexo"></p></li></ol><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><blockquote><p>你可以去Hexo官网主题<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>选择自己喜欢的主题，我使用的是<strong>butterfly</strong>，作者博客<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p></blockquote><ol><li><p>下载butterfly主题，在hexoblog目录下，右击选择Git Bash Here，打开命令行，克隆主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210720224337909.png" alt="克隆主题"></p></li><li><p>安装渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li><li><p>修改_config.yml文件，设置主题为butterfly</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210720224737025.png" alt="修改配置"></p></li><li><p>再次启动查看效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210720233414836.png" alt="查看主题效果"></p></li><li><p>自行参考主题博客，修改themes\butterfly\_config.yml配置文件，进行个性化制作</p></li></ol><h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><blockquote><p>本处使用github，也可以使用gitee</p></blockquote><ol><li><p>配置全局git用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br><span class="line">git config --global user.name &quot;你的昵称&quot;</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722210238874.png" alt="配置git用户"></p></li><li><p>生成SSH密钥，连续回车即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的个人邮箱&quot;</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722202641518.png" alt="生成SSH密钥"></p></li><li><p>打开C:\Users\你的用户名\.ssh\id_rsa.pub文件，复制里面的全部内容</p></li><li><p>登录github添加SSH key</p><p><img src="http://source.accepted.fun/image/article/image-20210722203521188.png" alt="添加密钥"></p></li><li><p>粘贴key并保存</p><p><img src="http://source.accepted.fun/image/article/image-20210722203653585.png" alt="保存密钥"></p></li><li><p>创建git仓库，注意仓库名必须是<strong>github名.github.io</strong></p><p><img src="http://source.accepted.fun/image/article/image-20210704222324348.png" alt="创建仓库"></p></li><li><p>进入仓库，复制仓库地址</p><p><img src="http://source.accepted.fun/image/article/image-20210722204429464.png" alt="复制仓库地址"></p></li><li><p>打开_config.yml文件，修改最后的deploy配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:  type: git  repo: 你的仓库地址  branch: main</span><br></pre></td></tr></table></figure></li><li><p>在hexo文件夹下，右击选择Git Bash Here，打开命令行，生成上传文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh deploy</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722205553669.png" alt="生成up.sh脚本"></p></li><li><p>移动up.sh文件到hexoblog文件夹下</p></li><li><p>在hexo文件夹下，右击选择Git Bash Here，打开命令行，上传博客到github</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source up.sh</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722210834992.png" alt="上传到github"></p></li><li><p>查看github仓库是否推送成功</p><p><img src="http://source.accepted.fun/image/article/image-20210722211114742.png" alt="查看推送是否成功"></p></li><li><p>浏览器访问博客查看效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://仓库名/</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722211522985.png" alt="访问远程Hexo"></p></li></ol><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><ol><li><p>在hexoblog目录下，右击选择Git Bash Here，新建文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &lt;title&gt; # 新建文章</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722213740128.png" alt="新建文章"></p></li><li><p>打开文章进行编辑，使用markdown语法</p><p><img src="http://source.accepted.fun/image/article/image-20210722214524878.png" alt="编辑文章"></p></li><li><p>查看效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210722214739654.png" alt="查看效果"></p></li></ol><blockquote><p>注意：每次在本地编辑完确认无误后，都需要执行source up.sh命令重新上传到远程仓库</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ferry工单系统安装</title>
      <link href="/2021/03/31/Ferry%E5%B7%A5%E5%8D%95%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
      <url>/2021/03/31/Ferry%E5%B7%A5%E5%8D%95%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="ferry工单系统搭建"><a href="#ferry工单系统搭建" class="headerlink" title="ferry工单系统搭建"></a>ferry工单系统搭建</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>docker：20.10.10<br>docker-compose：1.18.0<br>ferry：1.0.0</p></blockquote><div class="note danger simple"><p><strong>本教程已经失效！！！</strong><br><strong>本教程已经失效！！！</strong><br><strong>本教程已经失效！！！</strong></p></div><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><blockquote><p><strong>已有Docker环境请跳过</strong></p></blockquote><p>具体安装步骤请参考<a href="https://blog.accepted.fun/2021/11/08/Docker%E5%AE%89%E8%A3%85/">Docker安装</a></p><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><blockquote><p><strong>已安装docker-compose请跳过</strong></p></blockquote><ol><li><p>进入&#x2F;usr&#x2F;local&#x2F;bin目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/bin</span><br></pre></td></tr></table></figure></li><li><p>下载docker-compose</p><blockquote><p><strong>如果一直下载失败，reboot重启一下，请确保重启不会影响生产业务下进行！</strong><br>docker-compose仓库：<a href="https://github.com/docker/compose/releases/">https://github.com/docker/compose/releases/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/docker/compose/releases/download/1.18.0/docker-compose-Linux-x86_64</span><br></pre></td></tr></table></figure></li><li><p>重命名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename docker-compose-Linux-x86_64 docker-compose docker-compose-Linux-x86_64</span><br></pre></td></tr></table></figure></li><li><p>权限赋值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署Ferry"><a href="#部署Ferry" class="headerlink" title="部署Ferry"></a>部署Ferry</h2><ol><li><p>安装git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git -y</span><br></pre></td></tr></table></figure></li><li><p>进入&#x2F;usr&#x2F;local目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br></pre></td></tr></table></figure></li><li><p>拉取代码</p><div class="tabs" id="git"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="git-1">gitee</button><button type="button" class="tab " data-href="git-2">github</button></ul><div class="tab-contents"><div class="tab-item-content active" id="git-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/yllan/ferry.git</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="git-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/lanyulei/ferry.git</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></li><li><p>进入ferry的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/ferry</span><br></pre></td></tr></table></figure></li><li><p>创建数据库存储目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p docker/mysql/data</span><br><span class="line">mkdir -p docker/redis/data</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><blockquote><p>我只注释我知道的内容</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/ferry/config/settings.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">./static/scripts</span> <span class="comment"># shell和python脚本文件夹</span></span><br><span class="line"><span class="attr">settings:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">domain:</span> <span class="string">localhost:8002</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">    <span class="attr">ishttps:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">prod</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ferry</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8002</span></span><br><span class="line">    <span class="attr">readtimeout:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">writertimeout:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">database:</span></span><br><span class="line">    <span class="attr">dbtype:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="comment"># mysql服务地址，需要修改为ferry_mysql</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ferry</span> <span class="comment"># 数据库名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span> <span class="comment"># 用户密码</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3306</span> <span class="comment"># mysql端口</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> <span class="comment"># 用户名</span></span><br><span class="line">  <span class="attr">domain:</span></span><br><span class="line">    <span class="attr">gethost:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">localhost:9527</span> <span class="comment"># 系统url需要修改为http://主机IP:8001</span></span><br><span class="line">  <span class="attr">email:</span></span><br><span class="line">    <span class="attr">alias:</span> <span class="string">ferry</span> <span class="comment"># 邮件通知发件人名称，按需修改</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.163.com</span> <span class="comment"># 邮箱系统地址，qq邮箱为smtp.qq.com</span></span><br><span class="line">    <span class="attr">pass:</span> <span class="string">your</span> <span class="string">password</span> <span class="comment"># 邮箱授权码，一般必须用授权码，可以先在手机邮箱上进行绑定测试</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">465</span> <span class="comment"># 邮箱系统smtp端口</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">fdevops@163.com</span> <span class="comment"># 邮箱账号</span></span><br><span class="line">  <span class="attr">gorm:</span></span><br><span class="line">    <span class="attr">logmode:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">maxidleconn:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">maxopenconn:</span> <span class="number">20000</span></span><br><span class="line">  <span class="attr">jwt:</span></span><br><span class="line">    <span class="attr">secret:</span> <span class="string">ferry</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">ldap:</span> <span class="comment"># 如果需要使用ldap认证，则需要修改下面的配置</span></span><br><span class="line">    <span class="attr">anonymousquery:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">basedn:</span> <span class="string">dc=fdevops,dc=com</span> <span class="comment"># ldap的域名，需要修改</span></span><br><span class="line">    <span class="attr">bindpwd:</span> <span class="number">123456</span> <span class="comment"># ldap管理账号密码，需要修改</span></span><br><span class="line">    <span class="attr">binduserdn:</span> <span class="string">cn=admin,dc=fdevops,dc=com</span> <span class="comment"># ldap管理账号，需要修改</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span> <span class="comment"># ldap服务地址，需要修改</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">389</span> <span class="comment"># ladp服务端口，一般都是389</span></span><br><span class="line">    <span class="attr">tls:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">userfield:</span> <span class="string">uid</span> <span class="comment"># ldap用户名字段，一般需要修改为cn</span></span><br><span class="line">  <span class="attr">log:</span></span><br><span class="line">    <span class="attr">compress:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">consolestdout:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">filestdout:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">level:</span> <span class="string">debug</span></span><br><span class="line">    <span class="attr">localtime:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">maxage:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">maxbackups:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">maxsize:</span> <span class="number">10240</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./logs/ferry.log</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">redis://ferry123456@127.0.0.1:6379</span> <span class="comment"># redis服务地址，需要修改为redis://ferry_redis:6379</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">keystring</span></span><br><span class="line">    <span class="attr">pem:</span> <span class="string">temp/pem.pem</span></span><br><span class="line">  <span class="attr">public:</span></span><br><span class="line">    <span class="attr">isLocation:</span> <span class="number">0</span> <span class="comment"># 获取用户登录位置信息开关，0为关闭，1为打开</span></span><br></pre></td></tr></table></figure></li><li><p>修改ferry_web的初始化脚本，将192.168.199.131换成自己主机的IP地址，在&#x2F;usr&#x2F;local&#x2F;ferry目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s#192.168.1.1#192.168.199.131#g&#x27; docker/nginx/entrypoint/docker-entrypoint.sh</span><br></pre></td></tr></table></figure></li><li><p>在&#x2F;url&#x2F;local&#x2F;ferry目录下运行docker-compose</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210331200658983.png" alt="docker-compose"></p></li><li><p>同步数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -ti --rm \</span><br><span class="line">--link ferry_mysql:mysql \</span><br><span class="line">--net=ferry_default \</span><br><span class="line">--volume /usr/local/ferry/config:/opt/ferry/config \</span><br><span class="line">registry.cn-beijing.aliyuncs.com/lanyulei/ferry:v1.0.0-2 \</span><br><span class="line">./ferry init -c=/opt/ferry/config/settings.yml</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210331200801295.png" alt="同步数据"></p></li><li><p>浏览器访问测试IP:8001</p><p><img src="http://source.accepted.fun/image/article/image-20210407115214353.png" alt="image-20210407115214353"></p></li></ol><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li><p>查看后端日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f ferry</span><br></pre></td></tr></table></figure></li><li><p>修改&#x2F;usr&#x2F;local&#x2F;ferry&#x2F;config&#x2F;settings.yml文件后需要重启容器才能生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart ferry</span><br></pre></td></tr></table></figure></li><li><p>修改源代码，需要进入容器里面修改，修改后需要重新编译，再重启容器</p><p>例如ferry后端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it ferry bash # 进入ferry容器</span><br><span class="line">cd /opt/ferry # 进入服务目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改代码后回到/opt/ferry目录</span></span><br><span class="line">go build -o ferry main.go # 编译代码</span><br><span class="line">exit # 退出容器</span><br><span class="line">docker restart ferry # 重启容器</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Ferry </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ferry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JumpServer堡垒机安装</title>
      <link href="/2021/01/28/JumpServer%E5%A0%A1%E5%9E%92%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
      <url>/2021/01/28/JumpServer%E5%A0%A1%E5%9E%92%E6%9C%BA%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="JumpServer堡垒机安装"><a href="#JumpServer堡垒机安装" class="headerlink" title="JumpServer堡垒机安装"></a>JumpServer堡垒机安装</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>JumpServer：2.7.0<br>Docker：20.10.10</p></blockquote><blockquote><p><strong>全新环境建议优先使用一键安装，如果已经安装docker会冲突</strong>，JumpServer正常运行需要许多服务程序，如nginx，mysql，koko等等，一键安装是为每个服务创建一个docker容器，当然你也可以手动安装<code>jms_redis</code>，<code>jms_mysql</code>，<code>jms_core</code>，<code>jms_luna</code>，<code>jms_koko</code>，<code>jms_lina</code>，<code>jms_celery</code>，<code>jms_guacamole</code>，<code>jms_nginx</code>容器；<strong>手动安装JumpServer，建议使用docker jms_all的方式进行安装，jms_all容器将JumpServer需要的服务程序(除mysql和redis以外)全部装进了一个容器中</strong>，安装更加方便</p></blockquote><div class="tabs" id="安装方式"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装方式-1">一键安装</button><button type="button" class="tab " data-href="安装方式-2">docker jms_all安装</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装方式-1"><blockquote><p><strong>需要新环境，已经安装过docker会冲突，CPU不能小于2核，内存不能小于8G，目前版本为2.7.0，可在<a href="https://docs.jumpserver.org/zh/master/install/setup_by_fast/">官方文档</a>自行查找最新版本命令</strong></p></blockquote><ol><li><p>使用命令<code>一键安装</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.7.0/quick_start.sh | bash</span><br></pre></td></tr></table></figure></li><li><p>安装完成</p><p><img src="http://source.accepted.fun/image/article/image-20210125110030470.png" alt="安装完成"></p></li><li><p>启动<code>JumpServer</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/jumpserver-installer-v2.7.0</span><br><span class="line">./jmsctl.sh start</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210125105857230.png" alt="启动JumpServer"></p></li><li><p>访问<code>JumpServer</code></p><p><img src="http://source.accepted.fun/image/article/image-20210128163316326.png" alt="访问JumpServer"></p></li></ol></div><div class="tab-item-content" id="安装方式-2"><blockquote><p><strong>建议2核2G内存以上</strong></p></blockquote><ol><li><p>安装Docker，具体安装步骤请参考<a href="/2021/11/08/Docker%E5%AE%89%E8%A3%85/">Docker安装</a></p></li><li><p>生成<code>随机密钥</code>并设置环境变量</p><blockquote><p><strong>直接运行命令即可，不要在shell文件中运行，生成的密钥将用于配置Jumperver</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if [ ! $SECRET_KEY ] || [ ! $BOOTSTRAP_TOKEN ]; then</span><br><span class="line">    if [ ! $SECRET_KEY ]; then</span><br><span class="line">        SECRET_KEY=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50`;</span><br><span class="line">        echo &quot;SECRET_KEY=$SECRET_KEY&quot; &gt;&gt; ~/.bashrc;</span><br><span class="line">    fi</span><br><span class="line">    if [ ! $BOOTSTRAP_TOKEN ]; then</span><br><span class="line">    BOOTSTRAP_TOKEN=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;</span><br><span class="line">    echo &quot;BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN&quot; &gt;&gt; ~/.bashrc;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">echo $SECRET_KEY;</span><br><span class="line">echo $BOOTSTRAP_TOKEN;</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210127212010376.png" alt="生成随机密钥"></p></li><li><p>docker安装mysql</p><blockquote><p>如有需要请自行修改<code>MYSQL_DATABASE</code>，<code>MYSQL_USER</code>，<code>MYSQL_PASSWORD</code>，<code>MYSQL_ROOT_PASSWORD</code>参数</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql-server -t \</span><br><span class="line">--privileged=true \</span><br><span class="line">--hostname mysql-server \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime \</span><br><span class="line">-v /volumel/docker/mysql/2/:/var/lib/mysql \</span><br><span class="line">-e MYSQL_DATABASE=&quot;jumpserver&quot; \</span><br><span class="line">-e MYSQL_USER=&quot;jumpserver&quot; \</span><br><span class="line">-e MYSQL_PASSWORD=&quot;Jumpserver@2020&quot; \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=&quot;Jumpserver@2020&quot; \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-d mysql:5.7 \</span><br><span class="line">--character-set-server=utf8 \</span><br><span class="line">--collation-server=utf8_bin</span><br></pre></td></tr></table></figure></li><li><p>docker安装redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run --name redis-server -t \</span><br><span class="line">--privileged=true \</span><br><span class="line">-p 6379:6379 \</span><br><span class="line">--hostname redis-server \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime \</span><br><span class="line">-d redis:6.0</span><br></pre></td></tr></table></figure></li><li><p>docker安装jms_all</p><blockquote><p>请确保<code>DB_USER</code>，<code>DB_PASSWORD</code>，<code>DB_NAME</code>参数正确，jms_all容器自带jumpserver所需的其他服务程序，如nginx，koko，luna，lina</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run --name jms_all -t \</span><br><span class="line">--privileged=true \</span><br><span class="line">--hostname jms_all \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-p 2222:2222 \</span><br><span class="line">-e SECRET_KEY=$SECRET_KEY \</span><br><span class="line">-e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN \</span><br><span class="line">-e DB_HOST=&quot;mysql-server&quot; \</span><br><span class="line">-e DB_PORT=3306 \</span><br><span class="line">-e DB_USER=&quot;jumpserver&quot; \</span><br><span class="line">-e DB_PASSWORD=&quot;Jumpserver@2020&quot; \</span><br><span class="line">-e DB_NAME=&quot;jumpserver&quot; \</span><br><span class="line">--link mysql-server:mysql \</span><br><span class="line">-e REDIS_HOST=&quot;redis-server&quot; \</span><br><span class="line">-e REDIS_PORT=&quot;6379&quot; \</span><br><span class="line">--link redis-server:redis \</span><br><span class="line">-d jumpserver/jms_all:v2.7.0</span><br></pre></td></tr></table></figure></li><li><p>进入jms_all容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it jms_all bash</span><br></pre></td></tr></table></figure></li><li><p>创建JumpServer配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/jumpserver &amp;&amp; rm -rf config.yml &amp;&amp; cp config_example.yml config.yml</span><br></pre></td></tr></table></figure></li><li><p>修改JumpServer配置</p><blockquote><p>如果修改了mysql数据库参数，请手动修改<code>/opt/jumpserver/config.yml</code>配置中的内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/SECRET_KEY:/SECRET_KEY: $SECRET_KEY/g&quot; /opt/jumpserver/config.yml</span><br><span class="line">sed -i &quot;s/BOOTSTRAP_TOKEN:/BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN/g&quot; /opt/jumpserver/config.yml</span><br><span class="line">sed -i &quot;s/DB_HOST: 127.0.0.1/DB_HOST: mysql-server/g&quot; /opt/jumpserver/config.yml</span><br><span class="line">sed -i &quot;s/DB_PASSWORD:/DB_PASSWORD: Jumpserver@2020/g&quot; /opt/jumpserver/config.yml</span><br><span class="line">sed -i &quot;s/REDIS_HOST: 127.0.0.1/REDIS_HOST: redis-server/g&quot; /opt/jumpserver/config.yml</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210127233638602.png" alt="配置密钥"></p><p><img src="http://source.accepted.fun/image/article/image-20210127233822161.png" alt="配置mysql"></p><p><img src="http://source.accepted.fun/image/article/image-20210127233845955.png" alt="配置redis"></p></li><li><p>创建koko配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/koko &amp;&amp; cp config_example.yml config.yml</span><br></pre></td></tr></table></figure></li><li><p>修改koko配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/BOOTSTRAP_TOKEN: &lt;PleasgeChangeSameWithJumpserver&gt;/BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN/g&quot; /opt/koko/config.yml</span><br></pre></td></tr></table></figure></li><li><p>修改lina和luna的所属用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R nginx:nginx /opt/lina</span><br><span class="line">chown -R nginx:nginx /opt/luna</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟python环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt &amp;&amp; python3.6 -m venv py3</span><br></pre></td></tr></table></figure></li><li><p>进入python虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /opt/py3/bin/activate</span><br></pre></td></tr></table></figure></li><li><p>启动<code>JumpServer</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/jumpserver &amp;&amp; ./jms start -d</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20210128162858689.png" alt="启动JumpServer"></p></li><li><p>访问<code>JumpServer</code></p><p><img src="http://source.accepted.fun/image/article/image-20210128163316326.png" alt="访问JumpServer"></p></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> 堡垒机 </category>
          
          <category> Jumpserver </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jumpserver </tag>
            
            <tag> 堡垒机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows激活</title>
      <link href="/2021/01/19/Windows%E6%BF%80%E6%B4%BB/"/>
      <url>/2021/01/19/Windows%E6%BF%80%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-激活"><a href="#Windows-激活" class="headerlink" title="Windows 激活"></a>Windows 激活</h1><blockquote><p><strong>所有激活工具为第三方提供，目前未发现病毒木马，因为激活为盗版激活，所以windows defender和杀毒软件都会认为激活工具为病毒木马，介意者请勿使用，本教程只是提供方法和工具，不承担任何责任，若是工具开发者，侵权请联系删除，谢谢</strong></p></blockquote><blockquote><p><font color='red'><strong>下载工具后请务必校验MD5值</strong></font></p></blockquote><div class="tabs" id="windows激活"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="windows激活-1">win10激活</button><button type="button" class="tab " data-href="windows激活-2">win7激活</button></ul><div class="tab-contents"><div class="tab-item-content active" id="windows激活-1"><ol><li><strong>关闭<a href="/2021/01/13/Win10%E5%85%B3%E9%97%ADWindowsDefender/">Windows Defender</a>和其他杀毒软件</strong></li></ol><blockquote><p>推荐优先选择第一个激活工具</p></blockquote>   <div class="tabs" id="win10激活工具"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="win10激活工具-1">win10数字永久激活工具</button><button type="button" class="tab " data-href="win10激活工具-2">暴风激活工具V17.0</button></ul><div class="tab-contents"><div class="tab-item-content active" id="win10激活工具-1"><blockquote><p><strong>2021年1月14日 Windows 10 教育版 20H2 实测有效</strong></p></blockquote><ol><li><p>下载<a href="http://share.accepted.fun/%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/win10%E6%95%B0%E5%AD%97%E6%B0%B8%E4%B9%85%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7.zip">win10数字永久激活工具</a>，MD5：<strong>8D3201A16F487C160B345C611F5E7088</strong></p></li><li><p>解压<code>win10数字永久激活工具</code></p></li><li><p>点击<code>点我查看你的电脑是否为永久激活</code>查看激活状态</p><p><img src="http://source.accepted.fun/image/article/image-20210114172351689.png" alt="image-20210114172351689"></p></li><li><p>双击<code>win10数字永久激活工具</code>，点击<code>开始</code>，进行激活</p><p><img src="http://source.accepted.fun/image/article/image-20210114172847830.png" alt="image-20210114172847830"></p></li><li><p>激活成功</p><p><img src="http://source.accepted.fun/image/article/image-20210114173001606.png" alt="image-20210114173001606"></p></li><li><p>再次查看<code>激活状态</code></p><p><img src="http://source.accepted.fun/image/article/image-20210114173153874.png" alt="image-20210114173153874"></p></li></ol></div><div class="tab-item-content" id="win10激活工具-2"><blockquote><p><strong>暴风激活工具激活的系统版本不同，激活的时间也不同，win10基本为180天，180天后需要再次激活</strong><br><strong>2021年1月18日 Windows 10 教育版 20H2 实测有效</strong></p></blockquote><ol><li><p>下载<a href="http://share.accepted.fun/%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/%E6%9A%B4%E9%A3%8E%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7V17.0.zip">暴风激活工具V17.0</a>，MD5：845254B5FC3BBD04E03D5E477A99413F</p></li><li><p>解压<code>暴风激活工具V17.0</code></p></li><li><p>打开<code>暴风激活工具V17.0</code>，点击<code>查看系统激活状态</code></p><p><img src="http://source.accepted.fun/image/article/image-20210118164042214.png" alt="image-20210118164042214"></p></li><li><p>点击<code>一键永久激活Windows和Office</code></p><p><img src="http://source.accepted.fun/image/article/image-20210118164628155.png" alt="image-20210118164628155"></p></li><li><p>激活成功</p><p><img src="http://source.accepted.fun/image/article/image-20210118164810813.png" alt="image-20210118164810813"></p></li><li><p>再次点击<code>查看系统激活状态</code></p><p><img src="http://source.accepted.fun/image/article/image-20210118165010491.png" alt="image-20210118165010491"></p></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tab-item-content" id="windows激活-2"><div class="tabs" id="win7激活工具"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="win7激活工具-1">暴风激活工具V17.0</button></ul><div class="tab-contents"><div class="tab-item-content active" id="win7激活工具-1"><blockquote><p><strong>暴风激活工具激活的系统版本不同，激活的时间也不同，win7基本为永久激活</strong><br><strong>2021年1月18日 Windows 7 家庭普通版 Service Pack 1 实测有效</strong></p></blockquote><ol><li><p>下载<a href="http://share.accepted.fun/%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/%E6%9A%B4%E9%A3%8E%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7V17.0.zip">暴风激活工具V17.0</a>，MD5：845254B5FC3BBD04E03D5E477A99413F</p></li><li><p>解压<code>暴风激活工具V17.0</code></p></li><li><p>打开<code>暴风激活工具V17.0</code>，点击<code>查看系统激活状态</code></p><p><img src="http://source.accepted.fun/image/article/image-20210118224332428.png" alt="image-20210118224332428"></p></li><li><p>点击<code>一键永久激活Windows和Office</code></p><p><img src="http://source.accepted.fun/image/article/image-20210118224639312.png" alt="image-20210118224639312"></p></li><li><p>激活成功，<code>重启</code>后生效</p><p><img src="http://source.accepted.fun/image/article/image-20210118224810988.png" alt="image-20210118224810988"></p></li><li><p>再次点击<code>查看系统激活状态</code></p><p><img src="http://source.accepted.fun/image/article/image-20210118225041424.png" alt="image-20210118225041424"></p></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 激活 </category>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10关闭WindowsDefender</title>
      <link href="/2021/01/13/Win10%E5%85%B3%E9%97%ADWindowsDefender/"/>
      <url>/2021/01/13/Win10%E5%85%B3%E9%97%ADWindowsDefender/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10-关闭-Windows-Defender"><a href="#Win10-关闭-Windows-Defender" class="headerlink" title="Win10 关闭 Windows Defender"></a>Win10 关闭 Windows Defender</h1><blockquote><p><strong>小白请使用第一种临时关闭方法，操作简单</strong><br><strong>需要永久关闭的建议使用第二种方法，家庭版的系统由于没有本地策略组，无法使用该方法，请选择第三种通用方法</strong></p></blockquote><div class="tabs" id="关闭windowsdefender"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="关闭windowsdefender-1">临时关闭Winodws Defender</button><button type="button" class="tab " data-href="关闭windowsdefender-2">永久关闭Windows Defender(非家庭版)</button><button type="button" class="tab " data-href="关闭windowsdefender-3">永久关闭Windows Defender(通用)</button></ul><div class="tab-contents"><div class="tab-item-content active" id="关闭windowsdefender-1"><h3 id="临时关闭Windows-Defender"><a href="#临时关闭Windows-Defender" class="headerlink" title="临时关闭Windows Defender"></a>临时关闭Windows Defender</h3><div class="note info flat"><p><strong>小白推荐使用，下次开机会自动打开</strong></p></div><ol><li><p>点击<code>windows菜单</code>，然后点击<code>设置</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113114139806.png" alt="打开windows菜单"></p></li><li><p>点击<code>更新和安全</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113115853656.png" alt="点击更新和安全"></p></li><li><p>点击<code>Windows安全中心</code>，然后点击<code>病毒和威胁防护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132113974.png" alt="点击病毒和威胁防护"></p></li><li><p>点击<code>管理设置</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132533343.png" alt="点击管理设置"></p></li><li><p>点击开关，关闭<code>实时保护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132858766.png" alt="关闭实时保护"></p></li><li><p>临时关闭成功，再次点击可开启<code>实时保护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113133029657.png" alt="临时关闭成功"></p></li></ol></div><div class="tab-item-content" id="关闭windowsdefender-2"><h3 id="永久关闭Windows-Defender-非家庭版"><a href="#永久关闭Windows-Defender-非家庭版" class="headerlink" title="永久关闭Windows Defender(非家庭版)"></a>永久关闭Windows Defender(非家庭版)</h3><div class="note warning flat"><p><strong>小白请勿裸奔，特别是不会官网下软件，安装不会选路径的</strong></p></div><ol><li><p>点击<code>windows菜单</code>，然后点击<code>设置</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113114139806.png" alt="打开windows菜单"></p></li><li><p>点击<code>更新和安全</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113115853656.png" alt="点击更新和安全"></p></li><li><p>点击<code>Windows安全中心</code>，然后点击<code>病毒和威胁防护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132113974.png" alt="点击病毒和威胁防护"></p></li><li><p>点击<code>管理设置</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132533343.png" alt="点击管理设置"></p></li><li><p>点击开关，关闭<code>篡改防护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113173758939.png" alt="关闭篡改防护"></p></li><li><p>关闭<code>篡改防护</code>成功</p><p><img src="http://source.accepted.fun/image/article/image-20210113174041839.png" alt="关闭篡改防护成功"></p></li><li><p>使用快捷键<code>win</code>+<code>r</code>，输入<code>gpedit.msc</code>，然后<code>回车</code>或点击<code>确定</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113134646449.png" alt="运行gpedit.msc"></p></li><li><p>依次点击<code>计算机配置</code>→<code>管理模板</code>→<code>Windows组件</code>→<code>Microsoft Defender防病毒</code>→<code>实时保护</code>→<code>关闭实时保护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113153839641.png" alt="点击关闭实时保护"></p></li><li><p>点击<code>已启用</code>，然后点击<code>确定</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113155006021.png" alt="点击已启用"></p></li><li><p>永久关闭<code>Windows Defender</code>成功</p></li></ol><p>   <img src="http://source.accepted.fun/image/article/image-20210113174530251.png" alt="永久关闭Windows Defender成功"></p><div class="note info flat"><p>如果需要开启，将第<strong>5</strong>步的<code>篡改防护</code>打开即可，然后将第<strong>9</strong>步的<code>已启用</code>改为<code>未配置</code>(选做)</p></div></div><div class="tab-item-content" id="关闭windowsdefender-3"><h3 id="永久关闭Windows-Defender-通用"><a href="#永久关闭Windows-Defender-通用" class="headerlink" title="永久关闭Windows Defender(通用)"></a>永久关闭Windows Defender(通用)</h3><div class="note warning flat"><p><strong>小白请勿裸奔，特别是不会官网下软件，安装不会选路径的</strong></p></div><ol><li><p>点击<code>windows菜单</code>，然后点击<code>设置</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113114139806.png" alt="打开windows菜单"></p></li><li><p>点击<code>更新和安全</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113115853656.png" alt="点击更新和安全"></p></li><li><p>点击<code>Windows安全中心</code>，然后点击<code>病毒和威胁防护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132113974.png" alt="点击病毒和威胁防护"></p></li><li><p>点击<code>管理设置</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113132533343.png" alt="点击管理设置"></p></li><li><p>点击开关，关闭<code>篡改防护</code></p><p><img src="http://source.accepted.fun/image/article/image-20210113173758939.png" alt="关闭篡改防护"></p></li><li><p>关闭<code>篡改防护</code>成功</p><p><img src="http://source.accepted.fun/image/article/image-20210113174041839.png" alt="关闭篡改防护成功"></p></li><li><p>使用快捷键<code>win</code>+<code>r</code>，输入<code>regedit</code>，然后<code>回车</code>或点击<code>确定</code></p><p><img src="http://source.accepted.fun/image/article/image-20210114115151257.png" alt="运行regedit"></p></li><li><p>依次点击<code>计算机</code>→<code>HKEY_LOCAL_MACHINE</code>→<code>SOFTWARE</code>→<code>Policies</code>→<code>Microsoft</code>，右击<code>Microsoft</code>，选择<code>新建</code>，选择<code>项</code>，此时会新建一个文件夹，将其命名为<code>Real-Time Protection</code></p><p><img src="http://source.accepted.fun/image/article/image-20210114115931174.png" alt="新建Real-Time Protection项"></p></li><li><p>右击刚刚创建的<code>Real-Time Protection</code>，选择<code>新建</code>，选择<code>DWORO(32位)值</code>，此时会在右侧区域新建一个键，将其命名为<code>DisableRealtimeMonitoring</code></p><p><img src="http://source.accepted.fun/image/article/image-20210114125343376.png" alt="新建DisableRealtimeMonitoring键"></p></li><li><p>右击刚刚创建的<code>DisableRealtimeMonitoring</code>键，点击<code>修改</code></p><p><img src="http://source.accepted.fun/image/article/image-20210114130239028.png" alt="修改DisableRealtimeMonitoring"></p></li><li><p>将<code>0</code>改为<code>1</code>，然后点击<code>确定</code></p><p><img src="http://source.accepted.fun/image/article/image-20210114130426875.png" alt="将0改成1"></p></li><li><p><strong>重启电脑</strong>，永久关闭<code>Windows Defender</code>成功</p><p><img src="http://source.accepted.fun/image/article/image-20210113174530251.png" alt="永久关闭Windows Defender成功"></p></li></ol><div class="note info flat"><p>如果需要开启，将第<strong>5</strong>步的<code>篡改防护</code>打开即可，然后将第<strong>8</strong>步创建的<code>Real-Time Protection</code>删除(选做)</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> Windows Defender </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Defender </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西南科技大学学生邮箱申请</title>
      <link href="/2021/01/02/%E8%A5%BF%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%E7%94%B3%E8%AF%B7/"/>
      <url>/2021/01/02/%E8%A5%BF%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%E7%94%B3%E8%AF%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="西南科技大学学生邮箱申请"><a href="#西南科技大学学生邮箱申请" class="headerlink" title="西南科技大学学生邮箱申请"></a>西南科技大学学生邮箱申请</h1><div class="note danger simple"><p><strong>本教程可能已失效！！！</strong><br><strong>本教程可能已失效！！！</strong><br><strong>本教程可能已失效！！！</strong></p></div><blockquote><p><strong>请遵守邮箱使用规则，合法使用邮箱</strong></p></blockquote><hr><h2 id="学校公告"><a href="#学校公告" class="headerlink" title="学校公告"></a>学校公告</h2><ul><li><p><del>目前发布的公告：</del><a href="http://www.netcenter.swust.edu.cn/2016/0324/c3287a53663/page.htm">http://www.netcenter.swust.edu.cn/2016/0324/c3287a53663/page.htm</a></p><p><img src="http://source.accepted.fun/image/article/image-20201231135900525.png" alt="目前发布的公告"></p></li><li><p>旧的公告：<a href="http://www.netcenter.swust.edu.cn/2013/0910/c3306a52669/page.htm">http://www.netcenter.swust.edu.cn/2013/0910/c3306a52669/page.htm</a></p><p><img src="http://source.accepted.fun/image/article/image-20201231140036418.png" alt="旧的公告"></p><p>目前发布的公告可以在<a href="http://www.netcenter.swust.edu.cn/3287/list.htm">教育信息化办公室</a>网页上找到，虽然是最新的，但是反而不如旧的公告说明的清楚，而且也是按照旧的流程来进行办理的，公告上写的研究生申请，其实并不限制本科生申请，而且审核也很松，<strong>请遵守邮箱使用规则并合法使用，别因为你一个人导致大家都用不了！</strong></p></li></ul><hr><h2 id="申请流程"><a href="#申请流程" class="headerlink" title="申请流程"></a>申请流程</h2><ol><li><p>访问<a href="http://www.netcenter.swust.edu.cn/2013/0910/c3306a52669/page.htm">旧的公告</a></p></li><li><p>下载<strong>学生申请表</strong></p></li><li><p>打印表(一式两份)，进行填写</p></li><li><p>带上申请表、一卡通或学生证去<strong>东8C座201室</strong>提交申请表，老师会看一下你的一卡通，然后帮你进行注册</p><p><img src="http://source.accepted.fun/image/article/image-20201231142451975.png" alt="东8C座"></p></li><li><p>登录邮件系统<a href="http://mails.swust.edu.cn/">http://mails.swust.edu.cn/</a>，注意这跟公告上的地址不一样！</p><blockquote><p>现在你就可以使用学生邮箱去申请各种学生福利了，比如Github的学生包（包含免费的Azure服务器，JetBrains全家桶）</p></blockquote></li></ol><h2 id="绑定第三方邮件客户端"><a href="#绑定第三方邮件客户端" class="headerlink" title="绑定第三方邮件客户端"></a>绑定第三方邮件客户端</h2><blockquote><p><strong>该部分不是必须的！</strong></p></blockquote><ol><li><p>添加授权码，点击<code>头像</code>，选择<code>个人设置</code>，点击<code>邮箱密码</code>，点击<code>加号</code>添加即可，注意记得点击<code>复制</code></p><p><img src="http://source.accepted.fun/image/article/image-20201231143510407.png" alt="添加授权码"></p></li><li><p>勾选<code>SMTP发送后保存</code>，不勾选的话，使用第三方邮件客户端发送邮件后，发送箱将查看不到发送记录</p><p><img src="http://source.accepted.fun/image/article/image-20201231144303724.png" alt="设置发送后保存"></p></li><li><p>设置绑定邮箱账户</p><blockquote><p>如果你是其他学校的，学校邮箱也是使用**论客(icoremail)**的邮箱系统，你也可以尝试使用下面的方式进行绑定</p></blockquote><p>账号：你申请的邮箱账号(<a href="mailto:&#x78;&#120;&#x78;&#x2e;&#x40;&#109;&#97;&#x69;&#108;&#x73;&#x2e;&#115;&#x77;&#x75;&#x73;&#x74;&#46;&#x65;&#x64;&#x75;&#46;&#99;&#110;">&#x78;&#120;&#x78;&#x2e;&#x40;&#109;&#97;&#x69;&#108;&#x73;&#x2e;&#115;&#x77;&#x75;&#x73;&#x74;&#46;&#x65;&#x64;&#x75;&#46;&#99;&#110;</a>)</p><p>密码：你生成的授权码</p><p><strong>IMAP</strong> </p><p>​服务器：<strong>edu.icoremail.net</strong></p><p>​端口：<strong>143</strong></p><p><strong>SMTP</strong></p><p>​服务器：<strong>edu.icoremail.net</strong></p><p>​端口：<strong>25</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 西南科技大学 </category>
          
          <category> 学生邮箱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学生邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控系统安装</title>
      <link href="/2020/12/25/Zabbix%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
      <url>/2020/12/25/Zabbix%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Zabbix监控系统安装"><a href="#Zabbix监控系统安装" class="headerlink" title="Zabbix监控系统安装"></a>Zabbix监控系统安装</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装<br>shell 软件：FinalShell 3.7.7<br>PHP: 7.3.5<br>MySQL: 5.7<br>Nginx: 1.14.0<br>Zabbix: 4.0.7</p></blockquote><blockquote><p>Zabbix分为服务端(zabbix server)和客户端(zabbix agent)，安装zabbix server主机还需要安装zabbix agent，自己监控自己，安装zabbix server需要安装PHP，MySQL，Nginx，安装zabbix agent不需要安装其他程序。</p></blockquote><div class="tabs" id="安装zabbix监控系统"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装zabbix监控系统-1">安装Zabbix Server</button><button type="button" class="tab " data-href="安装zabbix监控系统-2">安装Zabbix Agent</button><button type="button" class="tab " data-href="安装zabbix监控系统-3">使用Zabbix进行监控</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装zabbix监控系统-1"><h2 id="安装Zabbix-Server"><a href="#安装Zabbix-Server" class="headerlink" title="安装Zabbix Server"></a>安装Zabbix Server</h2><h3 id="源码安装PHP7-3-5"><a href="#源码安装PHP7-3-5" class="headerlink" title="源码安装PHP7.3.5"></a>源码安装PHP7.3.5</h3><ol><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc make gd-devel libjpeg-devel libpng-devel pcre* libxml2-devel bzip2-devel libcurl-devel httpd httpd-devel net-snmp net-snmp-devel -y</span><br></pre></td></tr></table></figure></li><li><p>安装wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure></li><li><p>下载PHP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.php.net/distributions/php-7.3.5.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压PHP包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf php-7.3.5.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>进入PHP目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ./php-7.3.5</span><br></pre></td></tr></table></figure></li><li><p>配置PHP编译信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/php-7.3.5 --with-config-file-path=/usr/local/php-7.3.5/etc --with-bz2 --with-curl --enable-ftp --enable-sockets --disable-ipv6 --with-gd --with-jpeg-dir=/usr/local --with-png-dir=/usr/local --with-freetype-dir=/usr/local  --with-iconv-dir=/usr/local --enable-mbstring --enable-calendar --with-gettext --with-libxml-dir=/usr/local --with-zlib --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd --enable-dom --with-snmp --enable-xml --enable-fpm --with-libdir=lib64 --enable-bcmath  --with-apxs2=/usr/bin/apxs</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>复制配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production /usr/local/php-7.3.5/etc/php.ini</span><br><span class="line">cp /usr/local/php-7.3.5/etc/php-fpm.conf.default /usr/local/php-7.3.5/etc/php-fpm.conf</span><br><span class="line">cp /usr/local/php-7.3.5/etc/php-fpm.d/www.conf.default /usr/local/php-7.3.5/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure></li><li><p>查看PHP版本,检查是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/php-7.3.5/bin/php -v</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201213205211644.png" alt="PHP 版本号"></p></li><li><p>打开PHP配置文件php.ini</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/php-7.3.5/etc/php.ini</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数然后保存</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">max_execution_time</span> = <span class="number">300</span></span><br><span class="line"><span class="attr">max_input_time</span> = <span class="number">300</span></span><br><span class="line"><span class="attr">memory_limit</span> = <span class="number">128</span>M</span><br><span class="line"><span class="attr">post_max_size</span> = <span class="number">16</span>M</span><br><span class="line"><span class="attr">upload_max_filesize</span> = <span class="number">2</span>M</span><br><span class="line"><span class="attr">date.timezone</span> = <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line"><span class="attr">mysqli.default_socket</span> = /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure></li><li><p>创建zabbix用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd zabbix</span><br></pre></td></tr></table></figure></li><li><p>修改php-fpm运行账户，打开配置文件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/php-7.3.5/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure></li><li><p>修改如下参数</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user</span> = zabbix</span><br><span class="line"><span class="attr">group</span> = zabbix</span><br></pre></td></tr></table></figure></li><li><p>创建php-fpm开机自启文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/php-fpm.service</span><br></pre></td></tr></table></figure></li><li><p>写入如下配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=php-fpm</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/php-<span class="number">7.3</span>.<span class="number">5</span>/sbin/php-fpm</span><br><span class="line"><span class="attr">ExecStop</span>=/bin/pkill -<span class="number">9</span> php-fpm</span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>设置php-fpm开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start php-fpm.service</span><br><span class="line">systemctl enable php-fpm.service</span><br></pre></td></tr></table></figure></li></ol><h3 id="源码安装Nginx1-14-0"><a href="#源码安装Nginx1-14-0" class="headerlink" title="源码安装Nginx1.14.0"></a>源码安装Nginx1.14.0</h3><ol><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ zlib-devel zlib libxml2 libxml2-dev libxslt-devel gd-devel perl-devel perl-ExtUtils-Embed GeoIP GeoIP-devel GeoIP-data fontconfig-devel freetype-devel gd libX11-devel libjpeg-devel libpng-devel libevent libXpm-devel -y</span><br></pre></td></tr></table></figure></li><li><p>下载Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.14.0.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>下载Nginx健康检查包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://codeload.github.com/yaoweibin/nginx_upstream_check_module/tar.gz/v0.3.0</span><br></pre></td></tr></table></figure></li><li><p>解压Nginx包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf nginx-1.14.0.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压Nginx健康检查包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf v0.3.0</span><br></pre></td></tr></table></figure></li><li><p>进入Nginx目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.14.0</span><br></pre></td></tr></table></figure></li><li><p>配置Nginx编译信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/lib/nginx/tmp/client_body --http-proxy-temp-path=/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path=/var/lib/nginx/tmp/scgi --pid-path=/var/run/nginx.pid --lock-path=/var/lock/subsys/nginx --user=nginx --group=nginx --with-file-aio --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --with-http_perl_module=dynamic --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug --with-cc-opt=&#x27;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic&#x27; --with-ld-opt=&#x27; -Wl,-E&#x27; --add-module=/root/nginx_upstream_check_module-0.3.0 --with-stream</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>查看Nginx版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201214103841632.png" alt="Nginx 版本号"></p></li><li><p>打开Nginx配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></li><li><p>修改Nginx配置文件</p><blockquote><p>命令模式下使用ggdG命令可以删除全部内容</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span>  zabbix;</span><br><span class="line"><span class="attribute">worker_processes</span>  auto;</span><br><span class="line"><span class="attribute">error_log</span>   /var/log/nginx/<span class="literal">error</span>.log;</span><br><span class="line"><span class="attribute">pid</span>        /run/nginx.pid;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span>     <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">1000m</span>;</span><br><span class="line">    <span class="attribute">fastcgi_read_timeout</span>        <span class="number">3000</span>;</span><br><span class="line">    <span class="attribute">fastcgi_connect_timeout</span>     <span class="number">3000</span>;</span><br><span class="line">    <span class="attribute">fastcgi_send_timeout</span>        <span class="number">3000</span>;</span><br><span class="line">    <span class="attribute">fastcgi_buffers</span>            <span class="number">2</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">fastcgi_buffer_size</span>          <span class="number">128k</span>;</span><br><span class="line">    <span class="attribute">fastcgi_busy_buffers_size</span>    <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">fastcgi_temp_file_write_size</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="attribute">gzip</span>  <span class="literal">on</span>;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">                <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">            <span class="attribute">root</span>           /usr/share/nginx/html;</span><br><span class="line">            <span class="attribute">fastcgi_split_path_info</span><span class="regexp"> ^((?U).+\.php)(/?.+)$</span>;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">            <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME /usr/share/nginx/html/<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建Nginx所需目录</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lib/nginx/tmp</span><br></pre></td></tr></table></figure></li><li><p>创建Nginx开机自启文件</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure></li><li><p>写入如下配置</p>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=nginx</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/sbin/nginx</span><br><span class="line"><span class="attr">ExecReload</span>=/usr/sbin/nginx -s reload</span><br><span class="line"><span class="attr">ExecStop</span>=/usr/sbin/nginx -s quit</span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>设置Nginx开机自启</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure></li><li><p>创建php测试页面</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/share/nginx/html/phpinfo.php</span><br></pre></td></tr></table></figure></li><li><p>写入如下内容</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>(); </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure></li><li><p>本地验证</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost/phpinfo.php</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20201213221601402.png" alt="php 测试"></p></li></ol><h3 id="RPM安装MySQL5-7"><a href="#RPM安装MySQL5-7" class="headerlink" title="RPM安装MySQL5.7"></a>RPM安装MySQL5.7</h3><ol><li><p>下载RPM包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar</span><br><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure></li><li><p>解压RPM包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure></li><li><p>清除原有环境并安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove mysql-libs -y</span><br><span class="line">yum install net-tools -y</span><br></pre></td></tr></table></figure></li><li><p>安装如下RPM包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-compat-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-devel-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>设置MySQL字符集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;character-set-server=utf8&quot;  &gt;&gt; /etc/my.cnf</span><br></pre></td></tr></table></figure></li><li><p>设置MySQL开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br></pre></td></tr></table></figure></li><li><p>查看日志中MySQL初始化密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure></li><li><p>连接MySQL，并使用初始密码登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Aa123456.&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>创建zabbix库并指定字符集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS zabbix DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></li><li><p>创建zabbix账号并授权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on zabbix.* to &#x27;zabbix&#x27;@&#x27;%&#x27; identified by &#x27;Zabbix@2020&#x27;;</span><br></pre></td></tr></table></figure></li></ol><h3 id="源码安装zabbix4-0-7"><a href="#源码安装zabbix4-0-7" class="headerlink" title="源码安装zabbix4.0.7"></a>源码安装zabbix4.0.7</h3><ol><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-snmp-devel libxml2-devel libcurl-devel libevent-devel -y</span><br></pre></td></tr></table></figure></li><li><p>下载zabbix</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/4.0.7/zabbix-4.0.7.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压zabbix包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf zabbix-4.0.7.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>连接MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>使用zabbix数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use zabbix</span><br></pre></td></tr></table></figure></li><li><p>导入zabbix的sql文件，然后输入exit退出MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source /root/zabbix-4.0.7/database/mysql/schema.sql;</span><br><span class="line">source /root/zabbix-4.0.7/database/mysql/data.sql;</span><br><span class="line">source /root/zabbix-4.0.7/database/mysql/images.sql;</span><br></pre></td></tr></table></figure></li><li><p>进入zabbix目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd zabbix-4.0.7</span><br></pre></td></tr></table></figure></li><li><p>配置zabbix编译信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/zabbix-4.0.7/ --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2 </span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>拷贝zabbix网页文件到web目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rf /root/zabbix-4.0.7/frontends/php/* /usr/share/nginx/html</span><br></pre></td></tr></table></figure></li><li><p>修改web页面文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R zabbix.zabbix /usr/share/nginx/html</span><br></pre></td></tr></table></figure></li><li><p>修改zabbix_server.conf配置文件，添加数据库连接信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/zabbix-4.0.7/etc/zabbix_server.conf</span><br></pre></td></tr></table></figure></li><li><p>修改如下内容</p>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DBHost</span>=<span class="number">192.168</span>.<span class="number">199.129</span> <span class="comment">#当前服务器IP</span></span><br><span class="line"><span class="attr">DBName</span>=zabbix <span class="comment">#数据库名称</span></span><br><span class="line"><span class="attr">DBUser</span>=zabbix <span class="comment">#数据库用户</span></span><br><span class="line"><span class="attr">DBPassword</span>=Zabbix@<span class="number">2020</span> <span class="comment">#数据库密码</span></span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201220133406000.png" alt="zabbix server配置"></p></li><li><p>创建zabbix server开机自启文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/zabbix-server.service</span><br></pre></td></tr></table></figure></li><li><p>写入如下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Zabbix Server</span><br><span class="line"><span class="attr">After</span>=syslog.target</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;CONFFILE=/usr/local/zabbix-4.0.7/etc/zabbix_server.conf&quot;</span></span><br><span class="line"><span class="attr">EnvironmentFile</span>=-/etc/sysconfig/zabbix-server</span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">Restart</span>=always</span><br><span class="line"><span class="attr">PIDFile</span>=/tmp/zabbix_server.pid</span><br><span class="line"><span class="attr">KillMode</span>=mixed</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/zabbix-<span class="number">4.0</span>.<span class="number">7</span>/sbin/zabbix_server -c <span class="variable">$CONFFILE</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>设置zabbix server开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-server</span><br><span class="line">systemctl enable zabbix-server</span><br></pre></td></tr></table></figure></li><li><p>打开防火墙80端口和10051端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=10051/tcp --permanent</span><br><span class="line">firewall-cmd  --reload</span><br></pre></td></tr></table></figure></li></ol></div><div class="tab-item-content" id="安装zabbix监控系统-2"><h2 id="安装Zabbix-Agent"><a href="#安装Zabbix-Agent" class="headerlink" title="安装Zabbix Agent"></a>安装Zabbix Agent</h2><ol><li><p>创建zabbix用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd zabbix</span><br></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc libcurl-devel pcre*</span><br></pre></td></tr></table></figure></li><li><p>下载zabbix</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/4.0.7/zabbix-4.0.7.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压zabbix包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf zabbix-4.0.7.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>进入zabbix 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd zabbix-4.0.7</span><br></pre></td></tr></table></figure></li><li><p>配置zabbix编译信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/zabbix-4.0.7/ --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>修改zabbix-agent配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/zabbix-4.0.7/etc/zabbix_agentd.conf</span><br></pre></td></tr></table></figure></li><li><p>修改如下</p><blockquote><p>Server和ServerActive都是zabbix server的IP地址，Hostname是zabbix agent主机的名字，建议使用agent的IP地址方便区分主机，注意这很重要，千万不要以为是zabbix server的IP地址，这里只是server和agent都安装在这台主机上了，所以是一样的！</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Server</span>=<span class="number">192.168</span>.<span class="number">199.129</span></span><br><span class="line"><span class="attr">ServerActive</span>=<span class="number">192.168</span>.<span class="number">199.129</span>:<span class="number">10051</span></span><br><span class="line"><span class="attr">Hostname</span>=<span class="number">192.168</span>.<span class="number">199.129</span></span><br></pre></td></tr></table></figure></li><li><p>创建zabbix agent开机自启文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/zabbix-agent.service</span><br></pre></td></tr></table></figure></li><li><p>写入如下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Zabbix Agent</span><br><span class="line"><span class="attr">After</span>=syslog.target</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;CONFFILE=/usr/local/zabbix-4.0.7/etc/zabbix_agentd.conf&quot;</span></span><br><span class="line"><span class="attr">EnvironmentFile</span>=-/etc/sysconfig/zabbix-agent</span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">Restart</span>=always</span><br><span class="line"><span class="attr">PIDFile</span>=/tmp/zabbix_agentd.pid</span><br><span class="line"><span class="attr">KillMode</span>=mixed</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/zabbix-<span class="number">4.0</span>.<span class="number">7</span>/sbin/zabbix_agentd -c <span class="variable">$CONFFILE</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>设置zabbix agent开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-agent</span><br><span class="line">systemctl enable zabbix-agent</span><br></pre></td></tr></table></figure></li><li><p>打开防火墙10050端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=10050/tcp --permanent  </span><br><span class="line">firewall-cmd  --reload</span><br></pre></td></tr></table></figure></li></ol></div><div class="tab-item-content" id="安装zabbix监控系统-3"><h2 id="使用Zabbix进行监控"><a href="#使用Zabbix进行监控" class="headerlink" title="使用Zabbix进行监控"></a>使用Zabbix进行监控</h2><ol><li><p>宿主机使用浏览器访问zabbix</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.199.129/zabbix</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201213232236877.png" alt="访问zabbix"></p></li><li><p>检查配置</p><p><img src="http://source.accepted.fun/image/article/image-20201213232454121.png" alt="检查配置"></p><p><img src="http://source.accepted.fun/image/article/image-20201213232626730.png" alt="检查配置"></p></li><li><p>填写MySQL信息</p><p><img src="http://source.accepted.fun/image/article/image-20201213233012636.png" alt="填写MySQL信息"></p></li><li><p>设置zabbix server名</p><p><img src="http://source.accepted.fun/image/article/image-20201213233532003.png" alt="设置Name"></p></li><li><p>确认信息</p><p><img src="http://source.accepted.fun/image/article/image-20201213233658901.png" alt="确认配置信息"></p></li><li><p>配置完成</p><p><img src="http://source.accepted.fun/image/article/image-20201213233818572.png" alt="配置完成"></p></li><li><p>进行登录，默认用户名：admin，默认密码：zabbix</p><p><img src="http://source.accepted.fun/image/article/image-20201213234000689.png" alt="登录zabbix"></p></li><li><p>登录成功</p><p><img src="http://source.accepted.fun/image/article/image-20201213234111016.png" alt="登录成功"></p></li><li><p>点击主机进行配置</p><p><img src="http://source.accepted.fun/image/article/image-20201220162518000.png" alt="配置主机"></p></li><li><p>修改设置，Host name需要跟zabbix_agentd.conf文件中配置的Hostname一致！</p><p><img src="http://source.accepted.fun/image/article/image-20201220232153000.png" alt="修改配置"></p></li><li><p>监控成功</p><blockquote><p>修改配置后，需要等待一分钟左右，才会显示成功</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201220233630000.png" alt="监控成功"></p></li><li><p>监控其它主机(只安装了zabbix agent)，点击创建主机</p><p><img src="http://source.accepted.fun/image/article/image-20201220234534000.png" alt="进行监控其他主机"></p></li><li><p>配置主机</p><p><img src="http://source.accepted.fun/image/article/image-20201220234833000.png" alt="配置主机"></p></li><li><p>选择监控模板</p><p><img src="http://source.accepted.fun/image/article/image-20201220235120000.png" alt="选择监控模板"></p></li><li><p>监控成功</p><p><img src="http://source.accepted.fun/image/article/image-20201220235235000.png" alt="监控成功"></p></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><blockquote><p>请自行清除中间文件(phpinfo.php，下载的包和解压出来的文件)，.service开机自启文件请勿删除！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM安装虚拟机及常用命令</title>
      <link href="/2020/12/24/KVM%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/12/24/KVM%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="KVM安装虚拟机及常用命令"><a href="#KVM安装虚拟机及常用命令" class="headerlink" title="KVM安装虚拟机及常用命令"></a>KVM安装虚拟机及常用命令</h1><blockquote><p>虚拟机软件：VMware Workstation 16 Pro<br>操作系统：CentOS 7.5(1804) 最小安装</p></blockquote><h2 id="VMware虚拟机配置"><a href="#VMware虚拟机配置" class="headerlink" title="VMware虚拟机配置"></a>VMware虚拟机配置</h2><blockquote><p>此处使用VMware虚拟的linux系统进行演示，如果物理机本身就是linux系统可以跳过</p></blockquote><ul><li><p>勾选<code>虚拟化引擎</code>，这是必须的！</p><p><img src="http://source.accepted.fun/image/article/image-20201221162237000.png" alt="勾选虚拟化引擎"></p></li><li><p>配置硬盘，内存和处理器，因为要在此虚拟机上安装虚拟机，配置不能太低！</p><blockquote><p>磁盘最好不要低于20G，虚拟机本身就占了5GB+了<br>内存不低于2GB，安装虚拟机时已经到85%了，再低的话安装时会很慢<br>cpu核心数不低于2个，虚拟机本身需要一个，分配给虚拟机的虚拟机一个</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201221162757000.png" alt="确认配置"></p></li><li><p>具体VMware安装虚拟机步骤请参考<a href="/2020/12/17/CentOS7.5%E5%AE%89%E8%A3%85/#%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F%E4%BA%8C">CentOS7.5安装-安装方式二</a></p></li></ul><h2 id="安装KVM"><a href="#安装KVM" class="headerlink" title="安装KVM"></a>安装KVM</h2><ol><li><p>检查CPU是否支持<code>虚拟化</code>，vmx是Intel的CPU，svm是AMD的CPU</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -Ei &#x27;vmx|svm&#x27; /proc/cpuinfo</span><br></pre></td></tr></table></figure><p>如果出现<code>vmx</code>或者<code>svm</code>关键字则表示支持虚拟化，有几个内核就会出现几个，如果没有请先检查是否勾选了<code>虚拟化引擎</code>，物理机请检查BIOS是否开启<code>VirtualizationTechnology</code></p><p><img src="http://source.accepted.fun/image/article/image-20201221174822000.png" alt="查看是否支持虚拟化"></p></li><li><p>创建一个专门放虚拟机的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/virtual</span><br></pre></td></tr></table></figure></li><li><p>给父目录添加其它用户可执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod o+x /root</span><br></pre></td></tr></table></figure></li><li><p>安装<code>KVM</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install kvm qemu-kvm python-virtinst libvirt libvirt-python virt-manager libguestfs-tools bridge-utils virt-install</span><br></pre></td></tr></table></figure></li><li><p>拷贝网卡文件，作为桥接网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-br0</span><br></pre></td></tr></table></figure></li><li><p>打开原网卡ens33配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure></li><li><p>添加桥接，<code>BRIDGE=br0</code></p><p><img src="http://source.accepted.fun/image/article/image-20201222091427000.png" alt="设置桥接"></p></li><li><p>打开br0网桥配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-br0</span><br></pre></td></tr></table></figure></li><li><p>修改如下内容</p><p><img src="http://source.accepted.fun/image/article/image-20201222092906000.png" alt="设置网桥"></p></li><li><p>重启网络</p><blockquote><p>重启不成功就再重启一次</p></blockquote> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure></li></ol><p><img src="http://source.accepted.fun/image/article/image-20201213194836851.png" alt="重启网络"></p><ol><li><p><code>ip a</code>查看网络，ens33桥接到br0上，网桥br0获取到IP</p><p><img src="http://source.accepted.fun/image/article/image-20201222093853000.png" alt="查看网络状态"></p></li><li><p>检查KVM模块是否加载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep kvm</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201222095214000.png" alt="检查KVM模块是否加载"></p></li><li><p>启动libvritd服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service libvirtd start</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201222102911000.png" alt="启动libvritd服务"></p></li><li><p>查看网桥，可以看见有2个网桥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brctl show</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201222103222000.png" alt="查看网桥"></p></li></ol><h2 id="创建虚拟机安装CentOS-7-5-1804"><a href="#创建虚拟机安装CentOS-7-5-1804" class="headerlink" title="创建虚拟机安装CentOS 7.5(1804)"></a>创建虚拟机安装CentOS 7.5(1804)</h2><ol><li><p>下载系统镜像：</p><blockquote><p>没有wget使用命令yum install wget -y安装，下载到root目录，或者从主机上将镜像上传到root目录，如果使用其它目录其它用户必须要有可执行权限，如root目录添加权限<code>chmod o+x /root</code>后才能使用。虚拟机安装目录也是一样。</p><p><img src="http://source.accepted.fun/image/article/image-20201222140208000.png" alt="确认权限"></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://vault.centos.org/7.5.1804/isos/x86_64/CentOS-7-x86_64-DVD-1804.iso -P /root</span><br></pre></td></tr></table></figure></li><li><p>安装虚拟机，耐心等待一分钟左右</p><blockquote><p>–name 指定虚拟机的名称<br>–memory 指定分配给虚拟机的内存资源大小<br>maxmemory 指定可调节的最大内存资源大小，因为KVM支持热调整虚拟机的资源<br>–vcpus 指定分配给虚拟机的CPU核心数量<br>maxvcpus 指定可调节的最大CPU核心数量<br>–os-type 指定虚拟机安装的操作系统类型<br>–os-variant 指定系统的发行版本，可以针对特定操作系统进行优化，不是必须的，可以使用<code>osinfo-query os</code>命令查看<br>–location 指定ISO镜像文件所在的路径，支持使用网络资源路径，也就是说可以使用URL<br>–disk path 指定虚拟硬盘所存放的路径及名称，size 则是指定该硬盘的可用大小，单位是G<br>–bridge 指定使用哪一个桥接网卡，也就是说使用桥接的网络模式<br>–graphics 指定是否开启图形<br>–console 定义终端的属性，target_type 则是定义终端的类型<br>–extra-args 定义终端额外的参数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-install --name=centos --memory=1024,maxmemory=2048 --vcpus=1,maxvcpus=2 --os-type=linux --os-variant=rhel7 --location=/root/CentOS-7-x86_64-DVD-1804.iso --disk path=/root/virtual/centos.img,size=10 --bridge=br0 --graphics=none --console=pty,target_type=serial  --extra-args=&quot;console=tty0 console=ttyS0&quot;</span><br></pre></td></tr></table></figure></li><li><p>进入引导界面，跟使用VMware安装的图形界面是一样的，只不过这里是用控制台显示，[!]表示需要你进行设置，[×]表示已经设置完成</p><p><img src="http://source.accepted.fun/image/article/image-20201222143958000.png" alt="进入安装界面"></p></li><li><p>输入<code>1</code>然后回车，进入语言设置界面，输入<code>68</code>选择中文</p><p><img src="http://source.accepted.fun/image/article/image-20201222144215000.png" alt="选择中文"></p></li><li><p>输入<code>1</code>选择简体中文</p><p><img src="http://source.accepted.fun/image/article/image-20201222145349000.png" alt="选择中文简体"></p></li><li><p>输入<code>2</code>设置时区</p><p><img src="http://source.accepted.fun/image/article/image-20201222145448000.png" alt="设置时区"></p></li><li><p>输入<code>1</code>选择Set timezone</p><p><img src="http://source.accepted.fun/image/article/image-20201222145550000.png" alt="选择set timezone"></p></li><li><p>输入<code>2</code>选择亚洲</p><p><img src="http://source.accepted.fun/image/article/image-20201222145641000.png" alt="选择亚洲"></p></li><li><p>输入<code>64</code>选择上海</p><p><img src="http://source.accepted.fun/image/article/image-20201222145823000.png" alt="选择上海"></p></li><li><p>输入<code>5</code>选择磁盘分区</p><p><img src="http://source.accepted.fun/image/article/image-20201222145937000.png" alt="选择磁盘分区"></p></li><li><p>输入<code>c</code>继续</p><p><img src="http://source.accepted.fun/image/article/image-20201222150043000.png" alt="继续"></p></li><li><p>默认选择2即可，输入<code>c</code>继续</p><p><img src="http://source.accepted.fun/image/article/image-20201222150238000.png" alt="继续"></p></li><li><p>输入<code>1</code>选择标准分区</p><p><img src="http://source.accepted.fun/image/article/image-20201222150356000.png" alt="选择标准分区"></p></li><li><p>输入<code>c</code>继续</p><p><img src="http://source.accepted.fun/image/article/image-20201222150459000.png" alt="继续"></p></li><li><p>输入<code>8</code>设置root密码</p><p><img src="http://source.accepted.fun/image/article/image-20201222150559000.png" alt="设置root密码"></p></li><li><p>输入root密码</p><p><img src="http://source.accepted.fun/image/article/image-20201222150726000.png" alt="输入root密码"></p></li><li><p>输入<code>b</code>开始进行安装，耐心等待</p><p><img src="http://source.accepted.fun/image/article/image-20201222150929000.png" alt="开始安装"></p></li><li><p>安装成功，输入root用户及密码进行登录</p><blockquote><p>退出该虚拟机使用<code>Ctrl+]</code></p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201222151345000.png" alt="安装成功"></p></li><li><p>打开<code>虚拟机</code>的网卡配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure></li><li><p>修改入下</p><p><img src="http://source.accepted.fun/image/article/image-20201222164916000.png" alt="修改虚拟机网卡配置"></p></li><li><p>重启<code>虚拟机</code>的网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure></li><li><p>测试<code>虚拟机</code>的网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping baidu.com</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201222165259000.png" alt="测试虚拟机网络"></p><blockquote><p>具体过程可以参考<a href="/2020/12/17/CentOS7.5%E5%AE%89%E8%A3%85/#%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C">CentOS7.5安装-配置网络</a></p></blockquote></li></ol><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">virsh list# 查看运行中的虚拟机</span><br><span class="line">virsh list --all# 查看所有的虚拟机</span><br><span class="line">virsh console centos# 进入centos这台虚拟机，进入后还需要按一下回车</span><br><span class="line">virsh start centos# 启动centos这台虚拟机</span><br><span class="line">virsh suspend centos# 挂起centos这台虚拟机</span><br><span class="line">virsh resume centos     # 恢复挂起的centos这台虚拟机</span><br><span class="line">virsh shutdown centos# 关闭centos这台虚拟机</span><br><span class="line">virsh destroy centos# 强制停止centos这台虚拟机</span><br><span class="line">virsh undefine centos# 销毁centos这台虚拟机，会删除虚拟机配置文件，但不会删除虚拟磁盘，类似于VMware的移除虚拟机</span><br><span class="line">virsh autostart centos# 设置centos这台虚拟机跟随宿主机开机启动</span><br><span class="line">virsh autostart --disable centos# 解除centos这台虚拟的的开机启动</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> 虚拟化平台 </category>
          
          <category> KVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7.5安装</title>
      <link href="/2020/12/17/CentOS7.5%E5%AE%89%E8%A3%85/"/>
      <url>/2020/12/17/CentOS7.5%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-7-5安装"><a href="#CentOS-7-5安装" class="headerlink" title="CentOS 7.5安装"></a>CentOS 7.5安装</h1><blockquote><p>操作系统：win10<br>虚拟机软件：VMware Workstation 16 Pro<br>系统镜像：CentOS 7.5(1804)<br>shell 软件：FinalShell 3.7.7</p></blockquote><hr><h3 id="下载官方系统镜像"><a href="#下载官方系统镜像" class="headerlink" title="下载官方系统镜像"></a>下载官方系统镜像</h3><blockquote><p>注意：优先使用BT下载，直接下载ios镜像会卡住在99%，下载好BT种子后，用迅雷打开进行下载</p></blockquote><p>直接下载：<a href="https://vault.centos.org/7.5.1804/isos/x86_64/CentOS-7-x86_64-DVD-1804.iso">https://vault.centos.org/7.5.1804/isos/x86_64&#x2F;CentOS-7-x86_64-DVD-1804.iso</a></p><p>下载BT种子：<a href="https://vault.centos.org/7.5.1804/isos/x86_64/CentOS-7-x86_64-DVD-1804.torrent">https://vault.centos.org/7.5.1804/isos/x86_64&#x2F;CentOS-7-x86_64-DVD-1804.torrent</a></p><h3 id="安装CentOS7-5"><a href="#安装CentOS7-5" class="headerlink" title="安装CentOS7.5"></a>安装CentOS7.5</h3><p>打开VMware Workstation 16 Pro点击创建虚拟机</p><p><img src="http://source.accepted.fun/image/article/image-20201215131759457.png" alt="创建虚拟机"></p><div class="tabs" id="安装方式"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装方式-1">安装方式一</button><button type="button" class="tab " data-href="安装方式-2">安装方式二</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装方式-1"><h4 id="安装方式一"><a href="#安装方式一" class="headerlink" title="安装方式一"></a>安装方式一</h4><blockquote><p>使用VMware典型安装，安装步骤简单，默认安装GUI图形界面</p></blockquote><ol><li><p>选择<code>典型</code>安装，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201215132805035.png" alt="选择典型安装"></p></li><li><p>选择<code>安装程序光盘映像文件</code>，点击<code>浏览</code>，找到下载好的<code>镜像文件</code>，然后点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201215172400165.png" alt="选择系统镜像"></p></li><li><p>输入<code>用户信息</code>，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201215174004271.png" alt="设置用户信息"></p></li><li><p>输入<code>虚拟机名称</code>，点击<code>浏览</code>，然后创建一个<code>空文件夹</code>，并<code>重命名</code>，选择它作为安装文件夹，然后点击<code>下一步</code></p><blockquote><p>注意：要为虚拟机新建一个<code>空文件夹</code>，安装虚拟机不要安装在C盘，C盘土豪请随意</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201215175149224.png" alt="选择安装位置"></p></li><li><p>设置<code>磁盘大小</code>，选择<code>将虚拟磁盘拆分成多个文件</code>，然后点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201215175624092.png" alt="设置磁盘大小"></p></li><li><p>点击<code>自定义硬件</code>设置CPU个数和核心数以及内存大小，默认1核1G，然后点击<code>完成</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216094022111.png" alt="点击完成"></p></li><li><p>开始安装，耐心等待几分钟</p><p><img src="http://source.accepted.fun/image/article/image-20201216094517023.png" alt="安装中"></p></li><li><p>安装完成，输入密码登录系统</p><p><img src="http://source.accepted.fun/image/article/image-20201216095655741.png" alt="安装成功"></p></li><li><p>检测网络<code>ping -c 4 baidu.com</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216100812035.png" alt="检测网络"></p></li><li><p>删除yum.pid，否则yum会无法使用</p></li></ol><blockquote><p>需要使用<code>su root</code>命令切换到root，密码跟安装时设置的用户密码一样</p></blockquote><p>   yum被占用：</p><p>   <img src="http://source.accepted.fun/image/article/image-20201216101158784.png" alt="yum被占用"></p><p>   删除yum.pid文件：</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/run/yum.pid</span><br></pre></td></tr></table></figure><p>   <img src="http://source.accepted.fun/image/article/image-20201216101538013.png" alt="删除yum.pid文件"></p></div><div class="tab-item-content" id="安装方式-2"><h4 id="安装方式二"><a href="#安装方式二" class="headerlink" title="安装方式二"></a>安装方式二</h4><blockquote><p>自定义安装，可以最小化安装</p></blockquote><ol><li><p>选择<code>自定义</code>安装，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216171547213.png" alt="选择自定义"></p></li><li><p>点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216171812412.png" alt="点击下一步"></p></li><li><p>选择<code>稍后安装操作系统</code>，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216172000103.png" alt="选择稍后安装操作系统"></p></li><li><p>选择<code>Linux</code>，然后选择<code>CentOS 7 64 位</code>，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216172159277.png" alt="选择linux centos7 64位"></p></li><li><p>输入<code>虚拟机名称</code>，点击<code>浏览</code>，然后创建一个<code>空文件夹</code>，并<code>重命名</code>，选择它作为安装文件夹，然后点击<code>下一步</code></p><blockquote><p>注意：要为虚拟机新建一个<code>空文件夹</code>，安装虚拟机不要安装在C盘，C盘土豪请随意</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201216172613298.png" alt="选择安装位置"></p></li><li><p>设置CPU个数和核心数，然后点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216173647516.png" alt="设置cup核心数"></p></li><li><p>设置<code>内存大小</code>，然后点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201216173946671.png" alt="设置内存大小"></p></li><li><p>选择<code>NAT网络模式</code>，点击<code>下一步</code></p><blockquote><p><strong>bridge</strong>桥接模式相当于你家里的另一台主机，直接连接你家里的网络，<br><strong>NAT</strong>地址转换模式相当于你主机是一个家用路由器，虚拟机是你主机虚拟路由器下的设备<br><strong>Host-only</strong>独立主机模式相当于没联网的家用路由器，所有虚拟机和主机之间可以通信，虚拟机不能联网</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201216174719112.png" alt="选择NAT模式"></p></li><li><p>选择<code>LSI Logic</code>，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217102538506.png" alt="选择I/O控制器"></p></li><li><p>选择<code>SCSI</code>，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217102708755.png" alt="选择磁盘类型"></p></li><li><p>选择<code>创建新虚拟磁盘</code>，点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217102842848.png" alt="选择创建新虚拟磁盘"></p></li><li><p>设置<code>磁盘大小</code>，选择<code>将虚拟磁盘拆分成多个文件</code>，点击<code>下一步</code></p><blockquote><p>不要选择立即分配所有空间！</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201217103424100.png" alt="设置磁盘大小"></p></li><li><p>直接点击<code>下一步</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217103842266.png" alt="点击下一步"></p></li><li><p>点击<code>自定义硬件</code></p><blockquote><p>必须点击自定义硬件选择系统镜像，不然无法安装！</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201217104559353.png" alt="自定义硬件"></p></li><li><p>选择<code>新 CD/DVD(IDE)</code>，选择<code>使用IOS映像文件</code>，点击<code>浏览</code>，选中下载好的<code>系统镜像</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217104856597.png" alt="选择镜像文件"></p></li><li><p>点击<code>完成</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217132857959.png" alt="点击完成"></p></li><li><p>点击<code>开启此虚拟机</code>，开始进行安装，然后耐心等待</p><p><img src="http://source.accepted.fun/image/article/image-20201217133254047.png" alt="开启虚拟机"></p></li><li><p>选择<code>语言</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213191644039.png" alt="选择语言"></p></li><li><p>点击选择<code>安装位置</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213191931700.png" alt="选择安装位置"></p></li><li><p>点击完成，使用默认的自动配置分区即可</p><p><img src="http://source.accepted.fun/image/article/image-20201213192036294.png" alt="点击完成"></p></li><li><p>可点击<code>软件选择</code>，选择图形界面和其他软件，默认是最小安装，请自行根据需要进行选择</p><p><img src="http://source.accepted.fun/image/article/image-20201217134556584.png" alt="选择最小安装"></p></li><li><p>点击<code>开始安装</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213192133172.png" alt="点击开始安装"></p></li><li><p>设置<code>Root密码</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213192256290.png" alt="设置root密码"></p></li><li><p>输入<code>密码</code>，点击<code>完成</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213192448467.png" alt="输入密码"></p></li><li><p>耐心等待安装完成，几分钟即可</p><p><img src="http://source.accepted.fun/image/article/image-20201213192523404.png" alt="安装中"></p></li><li><p>安装完成，点击<code>重启</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213192739375.png" alt="点击重启"></p></li><li><p>重启后进入如下界面则安装成功，自行输入root及密码进行登录</p><p><img src="http://source.accepted.fun/image/article/image-20201213192836514.png" alt="安装成功"></p></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><blockquote><p>使用安装方式一可以不用配置，使用<code>ip a</code>可以查看网络信息<br>使用安装方式二最小安装需要配置网络才能联网</p></blockquote><ol><li><p>打开<code>虚拟网络编辑器</code></p><p><img src="http://source.accepted.fun/image/article/image-20201217135849096.png" alt="打开虚拟网络编辑器"></p></li><li><p>查看VMware虚拟网络NAT模式的<code>IP池</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213193805125.png" alt="查看NAT模式IP池"></p></li><li><p>查看<code>网关</code></p><p><img src="http://source.accepted.fun/image/article/image-20201213194033014.png" alt="查看NAT模式网关"></p></li><li><p>编辑<code>配置文件</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>修改和添加如下配置</p><blockquote><p> IPADDR需要在第二步的IP池内，NETMASK一般都是255.255.255.0，在第二步可以看见，GATEWAY在第三步，DNS1使用114.114.114.114即可</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201220173159000.png" alt="配置网卡"></p></li><li><p>重启网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201213194836851.png" alt="重启网络"></p></li><li><p>查看网络状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><p><img src="http://source.accepted.fun/image/article/image-20201220173046000.png" alt="查看网络状态"></p></li></ol><h3 id="使用Shell软件连接"><a href="#使用Shell软件连接" class="headerlink" title="使用Shell软件连接"></a>使用Shell软件连接</h3><ul><li><p>连接成功</p><blockquote><p>此处使用的是<a href="https://www.hostbuf.com/">FinalShell</a>，自行选择自己喜欢的shell软件就好</p></blockquote><p>   <img src="http://source.accepted.fun/image/article/image-20201213195541720.png" alt="shell连接"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> CentOS7.5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS7.5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs安装及配置</title>
      <link href="/2020/11/30/Nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/11/30/Nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Nodejs的安装及配置"><a href="#Nodejs的安装及配置" class="headerlink" title="Nodejs的安装及配置"></a>Nodejs的安装及配置</h1><blockquote><p>操作系统：win10<br>NodeJS：15.3.0</p></blockquote><blockquote><p><strong>本文更新于2020-12-2，如果时间太久已失效，请留言</strong><br>本教程使用虚拟机全新环境进行演示，如未安装过Nodejs几乎100%安装配置成功，如未成功，请洗脸重试~</p></blockquote><h2 id="下载Nodejs"><a href="#下载Nodejs" class="headerlink" title="下载Nodejs"></a>下载Nodejs</h2><ol><li><p>进入Nodejs<strong>官网</strong><a href="https://nodejs.org/zh-cn/" title="Nodejs官网">https://nodejs.org/zh-cn/</a> 选择下载最新版，也可以选择稳定的版本，个人喜欢用新的</p> <img src="http://source.accepted.fun/image/article/image-20201201153726260.png" alt="下载最新版" style="zoom:80%;" /></li></ol><h2 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h2><ol><li><p>双击下载的安装包</p><p> <img src="http://source.accepted.fun/image/article/image-20201201155147915.png" alt="双击进行安装"></p></li><li><p>点击<code>Next</code>，开始进入安装</p><p> <img src="http://source.accepted.fun/image/article/image-20201201155825160.png" alt="点击Next"></p></li><li><p>勾选 <code>I accept the terms in the License Agreement</code>，然后点击<code>Next</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201163608782.png" alt="勾选同意，再点击Next"></p></li><li><p>点击<code>Change</code>更改安装路径</p><p> <img src="http://source.accepted.fun/image/article/image-20201201164501760.png" alt="更改安装路径"></p></li><li><p>选择<code>D</code>盘，并为Nodejs<code>创建一个新的文件夹</code>，然后点击<code>OK</code></p><blockquote><p>养成良好的安装习惯,便于以后清理磁盘，和查找文件，C盘用于win10系统和系统自带软件以及必须放置在C盘的软件及文件使用，D盘用于安装软件，每次在D盘安装软件时，为软件在D盘下创建一个新的文件夹，并命名为软件名，E盘用于存放文件、视频、下载资源</p></blockquote><p> <img src="http://source.accepted.fun/image/article/image-20201201164826847.png" alt="选择D盘，创建新文件夹"></p></li><li><p>点击<code>Next</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201165945479.png" alt="点击Next"></p></li><li><p>不用进行选择，默认就好，继续点击<code>Next</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201170449147.png" alt="继续点击Next"></p></li><li><p>不用勾选安装工具，继续点击<code>Next</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201170717201.png" alt="继续点击Next"></p></li><li><p>点击<code>Install</code>开始进行安装</p><p> <img src="http://source.accepted.fun/image/article/image-20201201170922949.png" alt="点击Install"></p></li><li><p>等待几分钟后，安装完成，点击<code>Finish</code>关闭，恭喜你已经安装好Nodejs</p><p><img src="http://source.accepted.fun/image/article/image-20201201171136559.png" alt="点击Finish"></p></li></ol><h2 id="检查Nodejs和npm包管理器是否安装成功"><a href="#检查Nodejs和npm包管理器是否安装成功" class="headerlink" title="检查Nodejs和npm包管理器是否安装成功"></a>检查Nodejs和npm包管理器是否安装成功</h2><ol><li><p>打开<code>cmd控制台</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201171921140.png" alt="打开cmd控制台"></p></li><li><p>命令行输入<code>node -v</code>查看nodejs的版本号，控制台输出版本号，说明安装成功</p><blockquote><p>如果提示<strong>‘node’不是内部或外部命令，也不是可运行的程序或批处理文件</strong>，要么安装出了问题，要么环境变量出了问题</p></blockquote><p> <img src="http://source.accepted.fun/image/article/image-20201201172320619.png" alt="检查node"></p></li><li><p>命令行输入<code>npm -v</code>查看npm的版本号，控制台输出版本号，说明包管理器也没有问题</p><blockquote><p>如果也未出现错误,到此Nodejs已经安装成功,可以正常使用了</p></blockquote><p> <img src="http://source.accepted.fun/image/article/image-20201201173530043.png" alt="检查npm"></p></li></ol><h2 id="Nodejs环境变量配置"><a href="#Nodejs环境变量配置" class="headerlink" title="Nodejs环境变量配置"></a>Nodejs环境变量配置</h2><blockquote><p>Nodejs默认模块安装路径和缓存路径均在C盘(C:\Users\你的用户名(Administrator)\AppData\Roaming\npm和C:\Users\你的用户名(Administrator)\AppData\Local\npm-cache)</p></blockquote><blockquote><p>你可以打开<code>cmd控制台</code>使用<code>npm config get prefix</code>和<code>npm config get cache</code>命令来查看当前使用的路径</p></blockquote><p><img src="http://source.accepted.fun/image/article/image-20201202011904917.png" alt="查看模块安装路径和缓存路径"></p><h3 id="修改模块安装和缓存路径"><a href="#修改模块安装和缓存路径" class="headerlink" title="修改模块安装和缓存路径"></a>修改模块安装和缓存路径</h3><ol><li><p>在Nodejs安装目录下新建一个文件夹，并命名为<code>node_cache</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201202114439195.png" alt="进入安装目录，新建node_cache文件夹"></p></li><li><p>使用命令修改<code>config</code>配置，首先打开<code>cmd控制台</code></p><ul><li>使用命令修改模块安装路径</li></ul><blockquote><p>注意：请将路径换成你自己的<code>Nodejs安装目录</code>路径，<strong>不要怀疑，就是Nodejs的安装目录!!!</strong></p></blockquote> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\NodeJS&quot;</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20201202131835404.png" alt="设置模块安装路径"></p><ul><li>使用命令修改缓存路径</li></ul><blockquote><p>注意：请将路径换成你自己的<code>node_cache</code>文件夹路径</p></blockquote> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set cache &quot;D:\NodeJS\node_cache&quot;</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20201201230953041.png" alt="设置缓存路径"></p><ul><li>最后你可以使用<code>npm config get prefix</code>和<code>npm config get cache</code>命令查看一下是否配置成功</li></ul><p> <img src="http://source.accepted.fun/image/article/image-20201202132116595.png" alt="更改成功"></p></li></ol><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ol><li><p>右击桌面或文件资源管理器左侧的<code>此电脑</code>，选择<code>属性</code>进入<code>系统界面</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201232308142.png" alt="打开此电脑属性"></p></li><li><p>点击<code>高级系统设置</code>，进入<code>系统属性界面</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201232823327.png" alt="点击高级系统设置"></p></li><li><p>点击<code>环境变量</code>，进入<code>环境变量界面</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201233045155.png" alt="点击环境变量"></p></li><li><p>双击上方<code>用户变量</code>的<code>Path</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201201233655008.png" alt="双击用户变量的Path"></p></li><li><p>找到Nodejs默认的配置路径，然后单击<code>选中</code>它，再点击<code>删除</code>，然后点击<code>确定</code>，返回到<code>环境变量界面</code></p><blockquote><p>这个配置路径是安装Nodejs时，自动生成的，如果没有可以不用管，有的话一定要删除！</p></blockquote><p> <img src="http://source.accepted.fun/image/article/image-20201202135735221.png" alt="删除默认配置"></p></li><li><p>点击下方<code>系统变量</code>的<code>新建</code>，然后输入变量名<code>NODE_PATH</code>，变量值为<code>node_modules文件</code>的路径，最后点击<code>确定</code></p><blockquote><p>注意：变量名必须是<code>NODE_PATH</code>!!! <code>node_modules文件</code>在Nodejs安装目录下，这个是安装时自己生成的</p></blockquote><p> <img src="http://source.accepted.fun/image/article/image-20201202140804745.png" alt="新建NODE_PATH变量"></p></li><li><p>你可以在<code>环境变量界面</code>看见<code>系统变量</code>多了一条<code>NODE_PATH</code>，然后点击<code>确定</code>，返回<code>系统属性界面</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201202141934605.png" alt="点击确定"></p></li><li><p>再次点击<code>确定</code>，恭喜你环境变量已经配置好了</p><p> <img src="http://source.accepted.fun/image/article/image-20201202142356779.png" alt="点击确定"></p></li></ol><h3 id="检查配置是否成功"><a href="#检查配置是否成功" class="headerlink" title="检查配置是否成功"></a>检查配置是否成功</h3><ol><li><p>打开Nodejs安装目录下的<code>node_modules文件夹</code>，可以看见里面只有一个<code>npm文件</code></p><p> <img src="http://source.accepted.fun/image/article/image-20201202143101980.png" alt="查看node_modules文件夹"></p></li><li><p>打开Nodejs安装目录下的<code>node_cache文件夹</code>，可以看见它多了几个文件</p><p> <img src="http://source.accepted.fun/image/article/image-20201202172708250.png" alt="查看node_cache文件夹"></p></li><li><p>打开<code>cmd控制台</code>，全局安装一个<code>vue</code>模块进行测试</p><ul><li>使用命令安装<code>vue</code></li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue -g</span><br></pre></td></tr></table></figure><blockquote><p> 注意：一定要加上<code>-g</code>，这是全局安装的意思，如果不加是局部安装，会安装在<code>cmd控制台</code>当前运行的目录下</p></blockquote><p> <img src="http://source.accepted.fun/image/article/image-20201202144334493.png" alt="测试安装vue模块"></p><ul><li>此时可以看见<code>node_modules文件夹</code>下多了一个<code>vue文件夹</code></li></ul> <img src="http://source.accepted.fun/image/article/image-20201202173521105.png" alt="查看vue安装位置" style="zoom:80%;" /><ul><li>回到<code>cmd控制台</code>，进入<code>node交互界面</code>，再输入<code> require("vue")</code></li></ul><blockquote><p>获取模块成功，配置完成，现在Nodejs的模块安装及缓存已经到D盘下了，并且能够找到模块！<br>注意：配置环境变量后，需要重新打开一下<code>cmd控制台</code>，退出<code>node交互界面</code>，使用<code>.exit</code>命令或者<code>Ctrl+C</code></p></blockquote> <img src="http://source.accepted.fun/image/article/image-20201202162251346.png" alt="检查配置" style="zoom:80%;" /></li></ol><h2 id="更改npm的镜像以及安装cnpm"><a href="#更改npm的镜像以及安装cnpm" class="headerlink" title="更改npm的镜像以及安装cnpm"></a>更改npm的镜像以及安装cnpm</h2><blockquote><p>因为npm的原镜像是在国外，使用起来可能会很慢，所以需要更改到国内的淘宝镜像</p></blockquote><ol><li><p>更换 npm的源</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><blockquote><p>查看命令为<code>npm config get registry</code></p></blockquote> <img src="http://source.accepted.fun/image/article/image-20201202164032767.png" alt="更换npm的源" style="zoom:80%;" /></li><li><p>安装cnpm包管理器</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20201202164518442.png" alt="安装cnpm"></p></li><li><p>再次使用命令更改<code>cnpm</code>的安装路径和缓存路径</p><blockquote><p>注意：请将路径更换成自己的路径</p></blockquote> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm config set prefix &quot;D:\NodeJS&quot;</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20201202183717078.png" alt="修改cnpm的安装位置"></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm config set cache &quot;D:\NodeJS\node_cache&quot;</span><br></pre></td></tr></table></figure><p> <img src="http://source.accepted.fun/image/article/image-20201202183737760.png" alt="修改cnpm缓存位置"></p></li></ol><blockquote><p>大功告成，现在你可以放心的使用Nodejs了，注意以后使用<code>npm</code>命令时，请替换为<code>cnpm</code> ，如<code>npm install vue -g</code>换成<code>cnpm install vue -g</code>，建议最好不要混用<code>npm</code>和<code>cnpm</code> ，当然一般情况下你混用也没什么问题。。。。。。</p></blockquote><blockquote><p>最后：强迫症患者请使用<code>cnpm uninstall vue -g</code>来删除<code>vue</code>模块，并删除Nodejs安装时默认在C盘生成的<code>npm文件夹</code>(C:\Users\你的用户名(Administrator)\AppData\Roaming\npm)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安装和部署 </category>
          
          <category> Nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
